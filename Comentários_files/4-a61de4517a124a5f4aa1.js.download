(window.webpackJsonp=window.webpackJsonp||[]).push([[4,728],{"+fEV":function(e,t){e.exports='<div class="slider-tab-navigation-small">\n  <div class="slider-tab-navigation-small__tabs-container">\n    <ul\n      class="slider-tab-navigation-small__tabs"\n      role="tablist"\n      aria-orientation="horizontal"\n      bb-arrow-key-navigation="{ wrap: true, layout: \'rows\', upEqualsLeft: true }"\n      bb-arrow-key-container\n    >\n      <li\n        id="{{\'slider-tab-\' + sliderTabNavigation.scope.tabs.transcludedSection.nameId}}"\n        analytics-id="{{::sliderTabNavigation.scope.tabs.transcludedSection.analyticsIdPrefix}}.li"\n        class="slider-tab-navigation-small__tab"\n        ng-click="sliderTabNavigation.goToTab(sliderTabNavigation.scope.tabs.transcludedSection)"\n        ng-class="{\'slider-tab-navigation-small__tab_active\': sliderTabNavigation.activeTab.nameId === sliderTabNavigation.scope.tabs.transcludedSection.nameId}"\n        ng-keydown="sliderTabNavigation.handleTabKeyDown($event, sliderTabNavigation.scope.tabs.transcludedSection)"\n        role="tab"\n        aria-controls="browsable-section-panel"\n        tabindex="0"\n        aria-label="{{sliderTabNavigation.scope.tabs.transcludedSection.title}}"\n        aria-selected="{{sliderTabNavigation.activeTab.nameId === sliderTabNavigation.scope.tabs.transcludedSection.nameId}}"\n        bb-arrow-key-destination\n      >\n        <div class="slider-tab-navigation-small__tab-icon">\n          <bb-slider-tab-item-icon icon-name="sliderTabNavigation.scope.tabs.transcludedSection.iconName"></bb-slider-tab-item-icon>\n        </div>\n\n        <div class="slider-tab-navigation-small__tab-title">\n          {{sliderTabNavigation.scope.tabs.transcludedSection.title}}\n        </div>\n      </li>\n\n      <li\n        id="{{\'slider-tab-\' + sliderTabNavigation.scope.tabs.browsableSection.main.nameId}}"\n        analytics-id="{{::sliderTabNavigation.scope.tabs.browsableSection.main.analyticsIdPrefix}}.li"\n        class="slider-tab-navigation-small__tab"\n        ng-click="sliderTabNavigation.goToTab(sliderTabNavigation.scope.tabs.browsableSection.main)"\n        ng-class="{\'slider-tab-navigation-small__tab_active\': sliderTabNavigation.activeTab.nameId === sliderTabNavigation.scope.tabs.browsableSection.main.nameId}"\n        ng-keydown="sliderTabNavigation.handleTabKeyDown($event, sliderTabNavigation.scope.tabs.browsableSection.main)"\n        role="tab"\n        aria-controls="browsable-section-panel"\n        tabindex="0"\n        aria-label="{{sliderTabNavigation.scope.tabs.browsableSection.main.title}}"\n        aria-selected="{{sliderTabNavigation.activeTab.nameId === sliderTabNavigation.scope.tabs.browsableSection.main.nameId}}"\n        bb-arrow-key-destination\n      >\n        <div class="slider-tab-navigation-small__tab-icon">\n          <bb-slider-tab-item-icon icon-name="sliderTabNavigation.scope.tabs.browsableSection.main.iconName"></bb-slider-tab-item-icon>\n        </div>\n\n        <div class="slider-tab-navigation-small__tab-title">\n          {{sliderTabNavigation.scope.tabs.browsableSection.main.title}}\n        </div>\n      </li>\n\n      <li\n        id="{{\'slider-tab-\' + tab.nameId}}"\n        analytics-id="{{::tab.analyticsIdPrefix}}.li"\n        class="slider-tab-navigation-small__tab"\n        ng-repeat="tab in sliderTabNavigation.scope.tabs.browsableSection.browsableTabs"\n        ng-click="sliderTabNavigation.goToTab(tab)"\n        ng-class="{\'slider-tab-navigation-small__tab_active\': sliderTabNavigation.activeTab.nameId === tab.nameId}"\n        ng-keydown="sliderTabNavigation.handleTabKeyDown($event, tab)"\n        role="tab"\n        aria-label="{{tab.title}}"\n        aria-controls="browsable-section-panel"\n        tabindex="0"\n        aria-selected="{{sliderTabNavigation.activeTab.nameId === tab.nameId}}"\n        bb-arrow-key-destination\n      >\n        <div class="slider-tab-navigation-small__tab-icon">\n          <bb-slider-tab-item-icon icon-name="tab.iconName"></bb-slider-tab-item-icon>\n        </div>\n\n        <div class="slider-tab-navigation-small__tab-title">\n          {{tab.title}}\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div\n    id="browsable-section-panel"\n    class="slider-tab-navigation-small__tab-content"\n    aria-labelledby="{{\'slider-tab-\' + sliderTabNavigation.activeTab.nameId}}"\n  >\n    <div ng-if="sliderTabNavigation.shouldRenderTranscludedElement()">\n      <div ng-transclude></div>\n    </div>\n\n    <div ng-if="sliderTabNavigation.shouldRenderPeekRoutedElement()">\n      <div ui-view="{{sliderTabNavigation.viewName}}" ng-if="!sliderTabNavigation.shouldHideView"></div>\n    </div>\n  </div>\n</div>\n'},"+sRu":function(e,t,s){"use strict";var i;!function(e){e.IsSelected="is-selected",e.AnswerSelectedNotPosted="answer-selected-not-posted",e.AnswerNotSelected="answer-not-selected",e.CorrectAnswerSelected="correct-answer-selected",e.CorrectAnswerNotSelected="correct-answer-not-selected",e.IncorrectAnswerSelected="incorrect-answer-selected"}(i||(i={})),t.a=i},"0Vbm":function(e,t,s){"use strict";var i=s("D57K"),n=(s("6Fqm"),s("67oV"),s("+brj")),a=s("yC9S"),o=s("aHpC"),r=s("QzaB");s.d(t,"a",(function(){return d}));const d="ultra.components.directives.searchBox";let l=class{constructor(e,t){this.browserStorage=e,this.$element=t}$onInit(){this.localStorageKey&&this.browserStorage.getFromStorage(this.localStorageKey,n.a.LocalStorage).then((e=>{this.searchText(e)}))}searchText(e){return null!=e&&(this.onSearch({searchText:e}),this._searchText=e,this.localStorageKey&&(""===e?this.browserStorage.deleteFromStorage(this.localStorageKey,n.a.LocalStorage):this.browserStorage.saveToStorage(this.localStorageKey,e,n.a.LocalStorage))),this._searchText}clearSearchInput(){this.searchText(""),this.$element.find("input").focus()}};l=Object(i.a)([Object(a.a)({moduleName:d,componentName:"bbSearchBox",template:r,bindings:{onSearch:"&",localStorageKey:"@?",placeholderKey:"@",analyticsIdTagPrefix:"@?"},requireModules:[n.b]}),Object(i.c)(0,Object(o.b)(n.c)),Object(i.c)(1,Object(o.b)("$element"))],l)},"15AK":function(e,t,s){"use strict";s.r(t);var i=s("D57K"),n=s("Llzl"),a=s("5MwF"),o=s("pjml"),r=s("nsO7"),d=s("zGdY"),l=s("0JpG"),c=s("k9iv"),u=s("mnBQ"),b=s("DDBr"),m=s("eAnr"),g=s("TnpK"),h=s("Fvsw"),p=s("Qbdf"),v=s("bF8R"),f=s("fYJU"),w=s("12mu"),S=s("X8JP"),k=s("R4kC"),C=s("jhBu"),A=s("ZQFV"),y=s("X/qj"),T=s("o5Lu"),O=s("aHpC"),x=s("9hUw"),I=s("n0bV");let G=class{constructor(e,t,s,i,n,a,o,r,l,c,u){this.$q=e,this.ultraStateService=t,this.gradebookPermissionService=s,this.feedbackService=i,this.currentUser=n,this.isGroupAttempt=a,this.userModel=o,this.peerService=r,this.grade=l,this.attemptId=c,this.delegatedAttemptAdapter=u,this.bbml={},this.attemptGrader=null,this.onUploadSuccess=e=>{this.bbml.fileLocation=this.bbml.fileLocation||e.fileLocation,this.bbml.webLocation=this.bbml.webLocation||e.webLocation},this.feedbackTextDidChange=e=>{this.bbml.current=e.toBbML(),this.bbml.isDirty=e.isDirty},this.save=(e=!1)=>(this.bbml.forSave=this.bbml.current,this.attempt?(this.attempt.feedbackToUser||(this.attempt.feedbackToUser={rawText:""}),this.attempt.feedbackToUser.rawText=this.bbml.forSave,this.attempt.feedbackToUser.fileLocation=this.attempt.feedbackToUser.fileLocation||this.bbml.fileLocation,this.attempt.feedbackToUser.webLocation=this.attempt.feedbackToUser.webLocation||this.bbml.webLocation,this.getCurrentColumn().peerGrading&&(this.attempt.status=e?d.l.Completed:null),this.getCurrentColumn().delegatedGrading&&this.getCurrentColumn().isUserReconciler(this.currentUser.userId)&&(this.attempt.reconciliationMode=d.Xb.Custom),this.attempt.$save(["feedbackToUser.rawText","feedbackToUser.fileLocation","feedbackToUser.webLocation","status","reconciliationMode"]).$asPromise().then((e=>(this.bbml.initial=e.feedbackToUser.rawText,this.bbml.isDirty=!1,this.attempt.feedbackToUser.webLocation=e.feedbackToUser.webLocation,this.attempt.feedbackToUser.fileLocation=e.feedbackToUser.fileLocation,this.attempt.overrideStatus=e.overrideStatus,this.feedbackService.refreshAfterAssessmentAttemptFeedbackSave(e.feedbackToUser,e),e.feedbackToUser)))):this._loadAttempt().then((()=>{if(this.attempt)return this.save()}))),this.getInitialBbml=()=>this.bbml.initial,this.peerService.getOrCreatePeerContentWithAttemptsFromColumn(this.getCurrentColumn()).then((e=>this.peerReviewContentObject=e))}load(){return this._loadAttempt().then((e=>this.populateFeedbackObject(e)))}populateFeedbackObject(e){const t=e&&e.getFeedbackToUser();return this.bbml.initial=t?t.rawText:"",this.bbml.current=this.bbml.current||this.bbml.initial,this.bbml.fileLocation=t&&t.fileLocation||"",this.bbml.webLocation=t&&t.webLocation||"",t||{rawText:"",fileLocation:"",webLocation:"",displayText:""}}getCurrentColumn(){const{currentColumn:e}=this.ultraStateService.getCurrentResolvedValues();return e}getCurrentCourse(){const{currentCourse:e}=this.ultraStateService.getCurrentResolvedValues();return e}fetchGroupAttempt(){return this.getCurrentCourse().gradebook.groupAttempts.$find(this.attemptId,{expand:"attempts,feedbackToUser"}).$asPromise()}fetchAttempt(){const e=this.getCurrentColumn();return this.getCurrentCourse().gradebook.attempts.$find(this.attemptId,{expand:"feedbackToUser"}).$asPromise().then((t=>{const s=this.gradebookPermissionService.canDelegatedReconcileAttempt(e),i=e.peerGrading&&t.userId===this.currentUser.userId;return s||i?this.grade.loadGrade({courseId:this.getCurrentCourse().id,column:this.getCurrentColumn(),userId:t.userId},!1).then((s=>t.isCompleted()||null!=s.manualGrade||this.getCurrentColumn().isUserReconciler(this.currentUser.userId)?e.grades.$new(t.gradeId).attempts.$new(t.id).$asPromise().then((()=>this.delegatedAttemptAdapter.loadDelegatedGradesOnAttempt({courseId:this.getCurrentCourse().id,columnId:this.getCurrentColumn().id,gradeId:t.gradeId,attemptId:t.id}))).then((e=>(t.stagedAttemptGrades=e,t))):this.$q.when(t))):t})).then((t=>{var s;return(null===(s=this.peerReviewContentObject)||void 0===s?void 0:s.canPeerReviewAttempt(e,t))?this.userModel.$find(this.currentUser.userId,{fields:"avatar,familyName,givenName"}).$asPromise().then((e=>(this.attemptGrader=e,t))):this.$q.when(t)}))}_loadAttempt(){return(this.isGroupAttempt?this.fetchGroupAttempt():this.fetchAttempt()).then((e=>this.attempt=e))}feedbackIsDirty(){return this.bbml.isDirty}canEnterFeedback(){var e;return this.attempt&&(this.gradebookPermissionService.canDelegatedEnterAttemptFeedback(this.getCurrentColumn(),this.attempt)||this.gradebookPermissionService.canDelegatedEnterAttemptGrades(this.getCurrentColumn(),this.attempt)||(null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.canPeerAddFeedbackToAttempt(this.getCurrentColumn(),this.attempt)))}canViewAttemptGrades(){return this.attempt&&this.gradebookPermissionService.canViewGrades()}getStagedAttemptGrades(){return this.attempt&&"stagedAttemptGrades"in this.attempt&&this.attempt.stagedAttemptGrades.length>0?this.attempt.stagedAttemptGrades:null}};G=Object(i.a)([Object(i.c)(0,Object(O.b)("$q")),Object(i.c)(1,Object(O.b)(g.d)),Object(i.c)(2,Object(O.b)(y.b)),Object(i.c)(3,Object(O.b)(m.c)),Object(i.c)(4,Object(O.b)(f.b)),Object(i.c)(5,Object(O.b)("isGroupAttempt")),Object(i.c)(6,Object(O.b)(o.Jb.serviceName)),Object(i.c)(7,Object(O.b)(x.b)),Object(i.c)(8,Object(O.b)(T.n)),Object(i.c)(9,Object(O.b)("attemptId")),Object(i.c)(10,Object(O.b)(I.b))],G);class L{constructor(e,t,s){this.ultraStateService=e,this.gradebookPermissionService=t,this.feedbackService=s,this.bbml={},this.onUploadSuccess=e=>{this.bbml.fileLocation=this.bbml.fileLocation||e.fileLocation,this.bbml.webLocation=this.bbml.webLocation||e.webLocation},this.feedbackTextDidChange=e=>{this.bbml.current=e.toBbML(),this.bbml.isDirty=e.isDirty},this.save=()=>{this.bbml.forSave=this.bbml.current||"";const{currentCourse:e}=this.ultraStateService.getCurrentResolvedValues();this.attempt.feedbackToUser||(this.attempt.feedbackToUser={rawText:""});const t=e.gradebook.attempts.$buildRaw(this.attempt);return t.feedbackToUser.rawText=this.attempt.feedbackToUser.rawText=this.bbml.forSave,t.feedbackToUser.fileLocation=this.attempt.feedbackToUser.fileLocation=this.attempt.feedbackToUser.fileLocation||this.bbml.fileLocation,t.feedbackToUser.webLocation=this.attempt.feedbackToUser.fileLocation=this.attempt.feedbackToUser.webLocation||this.bbml.webLocation,t.$save(["feedbackToUser.rawText","feedbackToUser.fileLocation","feedbackToUser.webLocation"]).$asPromise().then((e=>(this.bbml.initial=e.feedbackToUser.rawText,this.bbml.isDirty=!1,this.attempt.feedbackToUser.webLocation=e.feedbackToUser.webLocation,this.attempt.feedbackToUser.fileLocation=e.feedbackToUser.fileLocation,this.attempt.overrideStatus=e.overrideStatus,this.attempt.feedbackToUser.rawText=e.feedbackToUser.rawText,this.feedbackService.refreshAfterIndividualfeedbackSave(e),e.feedbackToUser)))},this.getInitialBbml=()=>this.bbml.initial}feedbackIsDirty(){return this.bbml.isDirty}loadSync(e){this.attempt=e;const t=e.getGroupIndividualFeedbackToUser();return this.bbml.isDirty=!1,this.bbml.initial=t&&t.rawText,this.bbml.current=this.bbml.current||this.bbml.initial,this.bbml.fileLocation=t&&t.fileLocation||"",this.bbml.webLocation=t&&t.webLocation||"",t||{rawText:"",fileLocation:"",webLocation:"",displayText:""}}canEnterFeedback(){return this.gradebookPermissionService.canEnterGrades()||this.gradebookPermissionService.canEnterFeedback()}canViewAttemptGrades(){return this.gradebookPermissionService.canViewGrades()}}L.$inject=[g.d,y.b,m.c];var P=s("yC9S"),R=s("Q/M7"),j=s("kwLz"),$=s("6fZB"),N=s("7cYF"),E=s("oVrE"),F=s("X455"),D=s("lEL+"),q=s("wtKk"),M=s("z6Q5"),Q=s("IbyE"),U=s("jx5I"),_=s("fL5R"),z=s("nfhp"),B=s("Htol"),V=s("9OUN");s.d(t,"FEEDBACK_PARAMS_UPDATED",(function(){return H})),s.d(t,"FEEDBACK_UPDATED",(function(){return K})),s.d(t,"moduleName",(function(){return Z})),s.d(t,"componentName",(function(){return X})),s.d(t,"controllerName",(function(){return W})),s.d(t,"ASSESSMENT_FEEDBACK_SAVE",(function(){return J})),s.d(t,"ASSESSMENT_FEEDBACK_SAVED",(function(){return Y})),s.d(t,"ASSESSMENT_FEEDBACK_CHANGED",(function(){return ee})),s.d(t,"assessmentFeedbackModule",(function(){return te})),s.d(t,"AssessmentFeedback",(function(){return se})),s.d(t,"AssessmentFeedbackParams",(function(){return ie})),s.d(t,"AssessmentFeedbackController",(function(){return ne})),s.d(t,"template",(function(){return ae})),s.d(t,"templateUrl",(function(){return z}));const H="feedbackParamsUpdated",K="FeedbackUpdated",Z="ultra.course.assessment.feedback",X="assessmentFeedback",W="ultra.course.assessment.feedback",J="assessment-feedback:save",Y="assessment-feedback:saved",ee="assessment-feedback:changed",te=n.module(Z,[m.a,u.a,b.a,k.a,x.a,F.a,D.a,M.a,C.a,I.a,U.a]);let se=class{constructor(e,t,s,i,n,a,o,r,d,c,u,b,m,g,h,p,v){this.$rootScope=e,this.$scope=t,this.$q=s,this.$ngRedux=i,this.$injector=n,this.timeout=a,this.localize=o,this.modalService=r,this.context=d,this.contextUser=c,this.errorModalService=u,this.ultraSubmissionListService=b,this.ultraState=m,this.peerReviewService=g,this.currentCourseMembership=h,this.entitlementService=p,this.delegatedAttemptAdapter=v,this.confirmedToClose=!1,this.tabKey=j.c.General,this.isLoading=!1,this.isFeedbackAuthoringPayloadLoaded=!1,this.isInlineMode=!1,this.isCreateMode=()=>!this.feedbackText.getInitialBbml(),this.getFormatUsername=e=>this.localize.formatUsernameSync(e,l.ILocaleUsernameFormat.Short,this.$scope,{noWrap:!0,noEscape:!0}),this.subscribeToReduxChanges()}$onInit(){this.$scope.$on(H,((e,t)=>{this.buildFeedbackAuthoringPayload({},!0,null==t?void 0:t.tabKey)})),this.$scope.assessmentFeedback=this,this.initializeFeedback(),this.$scope.$on("$stateChangeStart",(e=>{this.onShowCloseConfirmationModal(e)})),this.setRenderMode(),this.subscribeCancelNavigationEvents(),this.$scope.$on(J,((e,t=!1,s=!1)=>{this.$scope.assessmentFeedback.onClickSave(t,s)})),this.$scope.$on(N.c,(()=>{const{editorIsReadOnly:e}=this.feedbackAuthoringPayload.configProps.primaryFeedbackConfigProps;e&&this.$scope.assessmentFeedback.onClickEdit(),n.element("bb-feedback-authoring div.bb-editor").first().focus()}))}subscribeToReduxChanges(){const e=this.$ngRedux.connect(null,(e=>Object(V.b)({refreshContentReviewStates:Q.X.contentReviewState.getContentReviewState},e)))(this);this.$scope.$on("$destroy",e)}get attemptId(){var e;return null===(e=this.ultraState.getCurrentUrlParams())||void 0===e?void 0:e.attemptId}initializeFeedback(){this.feedbackText=this.$injector.instantiate(G,{isGroupAttempt:this.isGroupSubmission(),attemptId:this.attemptId}),this.feedbackParams=this.$injector.instantiate(ie,{feedbackText:this.feedbackText,$scope:this.$scope}),this.isGroupSubmission()&&(this.feedbackTextIndividual=this.$injector.instantiate(L),this.feedbackParamsIndividual=this.$injector.instantiate(ie,{feedbackText:this.feedbackTextIndividual,$scope:this.$scope})),this.isLoading=!0,this.initialize()}hasEnterFeedbackEntitlement(e){return this.entitlementService.isEntitled(A.q.EnterFeedback,e)}setRenderMode(){const{mode:e}=this.ultraState.getCurrentUrlParams();this.isInlineMode="inline"===e}subscribeCancelNavigationEvents(){this.$scope.$on(q.a,((e,t,s)=>{"feedback"===t&&this.feedbackIsDirty()&&(s.navigationPromise=this.$q((e=>{this.resumeNavigation=e,this.showCloseConfirmationModal()})))}))}feedbackIsDirty(){var e,t,s,i,n,a,o,r;if(!this.feedbackAuthoringPayload)return!1;const{editorIsReadOnly:d}=this.feedbackAuthoringPayload.configProps.primaryFeedbackConfigProps;if(d)return!1;if(this.isGroupSubmission()){const{rawTextFeedback:l}=this.feedbackAuthoringPayload.primaryGraderFeedback;if(this.tabKey===j.c.General)return null!=(null===(t=null===(e=this.feedbackText)||void 0===e?void 0:e.bbml)||void 0===t?void 0:t.current)&&(null===(i=null===(s=this.feedbackText)||void 0===s?void 0:s.bbml)||void 0===i?void 0:i.current)!==l&&!d;if(this.tabKey===j.c.Individual)return null!=(null===(a=null===(n=this.feedbackTextIndividual)||void 0===n?void 0:n.bbml)||void 0===a?void 0:a.current)&&null!=l&&(null===(r=null===(o=this.feedbackTextIndividual)||void 0===o?void 0:o.bbml)||void 0===r?void 0:r.current)!==l&&!d}return!d&&this.feedbackParams.feedbackIsDirty()}onShowCloseConfirmationModal(e){this.confirmedToClose||!this.feedbackIsDirty()||this.isInlineMode||(e.preventDefault(),this.showCloseConfirmationModal())}isGroupSubmission(){return this.ultraState.getCurrentResolvedValues().currentContent.isGroupContent}initialize(){try{this.initializeContent().then((()=>{this.isLoading=!1,this.currentCourseMembership.isStudentMembership()&&!this.feedbackParams.gradeDetail||this.buildFeedbackAuthoringPayload({},!0),this.feedbackParams.gradeDetail&&this.$scope.$emit(ee,this.feedbackIsDirty(),0===this.feedbackAuthoringPayload.primaryGraderFeedback.rawTextFeedback.length)}))}catch(e){this.errorModalService.showDefaultErrorModal()}}initializeContent(){return this.feedbackParams.loadAssessmentTitle(),this.$q.all([this.feedbackParams.load(),this.feedbackParams.initializeCloudService(),this.feedbackParams.loadPeerReviewContentObject()]).then((()=>this.$q.all([this.feedbackParams.loadCourseMemberships(this.getUsersThatRequireCourseMemberships()),this.feedbackParams.loadCourseColorAndGradeDetail()])))}onClickSave(e=!1,t=!0){this.confirmedToClose=!0;const s=this.isUserPeerReviewer&&t,i=()=>this.currentFeedbackParams.save(s).then((()=>{this.$rootScope.$broadcast(K);const{courseId:t}=this.ultraState.getCurrentUrlParams(),s=this.ultraState.getCurrentResolvedValues().currentContent;return this.refreshContentReviewStates(t,s.id,!0),this.$rootScope.$broadcast(B.b,s,d.u.Completed),this.$scope.$emit(Y),this.buildFeedbackAuthoringPayload(),this.isInlineMode?(this.resumeNavigation&&this.resumeNavigation(),void this.$scope.$emit("peer-review-submitted")):this.isGroupSubmission()?(r.isBoolean(e)&&e&&this.closePanel(),void(this.confirmedToClose=!1)):void this.closePanel()}));if(!s)return i();this.submissionModal=this.modalService.open({template:_,scope:this.$scope}),this.submissionModal.result.then(i)}onClickEdit(){this.feedbackAuthoringPayload.configProps.primaryFeedbackConfigProps.editorIsReadOnly=!1,this.triggerFeedbackAuthoringComponentReRender()}onClickCancel(){this.isGroupSubmission()||!this.isCreateMode()&&!this.isUserPeerReviewer?this.onClickCancelEditMode():this.isInlineMode?this.isUserPeerReviewer&&this.onClickSave(!1,!1):this.performClosePanel()}get currentFeedbackParams(){return this.tabKey===j.c.General?this.feedbackParams:this.feedbackParamsIndividual}onClickCancelEditMode(){this.feedbackAuthoringPayload.primaryGraderFeedback.rawTextFeedback?this.feedbackAuthoringPayload.configProps.primaryFeedbackConfigProps.editorIsReadOnly=!0:this.feedbackAuthoringPayload.configProps.primaryFeedbackConfigProps.editorIsReadOnly=!1,this.triggerFeedbackAuthoringComponentReRender()}showCloseConfirmationModal(){this.$scope.$broadcast("show-confirmation","assessment-feedback")}closeConfirmationModalDismissed(){this.resumeNavigation=null}dontSaveAction(){if(this.isInlineMode){if(!this.isCreateMode())return this.onClickCancelEditMode(),void this.resumeNavigation();this.feedbackAuthoringPayload.primaryGraderFeedback.rawTextFeedback="",this.triggerFeedbackAuthoringComponentReRender(),this.resumeNavigation()}else this.performClosePanel()}performClosePanel(){this.confirmedToClose=!0,this.closePanel()}closePanel(){this.ultraState.leavePeekState()}onTabChange(e){if(this.feedbackIsDirty()&&this.isInlineMode)return this.resumeNavigation=()=>{this.tabKey=e,this.buildFeedbackAuthoringPayload()},void this.showCloseConfirmationModal();this.tabKey=e,this.buildFeedbackAuthoringPayload()}onFeedbackChanged(e){const{onEditorContentChanged:t}=this.currentFeedbackParams.getEditorConfig();t(e),this.$scope.$emit(ee,this.feedbackIsDirty(),0===e.toBbML().length)}onUploadSuccess(e){return this.currentFeedbackParams.feedbackText.onUploadSuccess(e)}getFeedbackConfigProps(e){const{pluginConfig:t}=e,{xsrfToken:s,courseId:i,apiBasePath:n,openCloudStorageIntegrationModal:a,fileUploadSettings:o}=t;return{configProps:{showFeedbackVisibilityToggle:this.feedbackParams.isPeerGrading()&&this.feedbackParams.isReconciler(),currentUserHasEnterFeedbackEntitlement:this.hasEnterFeedbackEntitlement(i),isPeerGrading:this.feedbackParams.isPeerGrading(),isOrganization:this.feedbackParams.isOrganization,courseColorClass:this.feedbackParams.courseColorClass,primaryFeedbackConfigProps:{editorIsReadOnly:e.isReadOnly,onClickEdit:this.onClickEdit.bind(this),onFeedbackChange:this.onFeedbackChanged.bind(this),showPeerReviewerSpecificText:this.feedbackParams.isPeerGrading()&&!this.feedbackParams.isReconciler()},editorConfigProps:{xsrfToken:s,courseId:i,apiBasePath:n,peerReviewer:this.isUserPeerReviewer,openCloudStorageIntegrationModal:()=>Object($.a)(a()),onUploadSuccess:this.onUploadSuccess.bind(this),onClickCancel:this.onClickCancel.bind(this),onClickSave:this.onClickSave.bind(this),fileUploadSettings:o}}}}isSecondaryFeedbackLate(e){var t;if(!this.feedbackParams.isPeerGrading())return!1;if(!e.grader)return!1;return!this.feedbackParams.findCourseMembership(e.grader).isDueDateExcepted()&&(null===(t=this.feedbackParams.peerReviewContentObject)||void 0===t?void 0:t.isAfterPeerReviewDueDate(e.attemptLastGradedDate))}isPrimaryFeedbackLate(e){var t,s;return!(!this.feedbackParams.isPeerGrading()||!e)&&(!!this.currentCourseMembership.isStudentMembership()&&(this.contextUser.userId!==(null===(t=this.feedbackText.attempt)||void 0===t?void 0:t.userId)&&(!this.currentCourseMembership.isDueDateExcepted()&&(null===(s=this.feedbackParams.peerReviewContentObject)||void 0===s?void 0:s.isAfterPeerReviewDueDate(e)))))}getFeedbackTextAndAttemptDate(e,t){var s,i;let n=e,a=t;const o=(null===(s=this.feedbackParams.gradeDetail)||void 0===s?void 0:s.isGraded())||(null===(i=this.feedbackParams.gradeDetail)||void 0===i?void 0:i.isPosted());return this.isInlineMode&&this.currentCourseMembership.isStudentMembership()&&!o&&!this.isUserPeerReviewer&&(n="",a=null),{rawTextFeedback:n,attemptLastGradedDate:a}}get showPrimaryFeedback(){return!0}getFeedbackAuthoringPrimaryGraderFeedback(e){var t,s,i,n,a;if(!this.showPrimaryFeedback)return null;const{rawTextFeedback:o,attemptLastGradedDate:r}=this.getFeedbackTextAndAttemptDate(e.bbml,null===(s=null===(t=this.feedbackText)||void 0===t?void 0:t.attempt)||void 0===s?void 0:s.attemptLastGradedDate);return{primaryGraderFeedback:{rawTextFeedback:o,attemptLastGradedDate:r,isFeedbackEditable:e.isPrivileged,late:this.isPrimaryFeedbackLate(null===(n=null===(i=this.feedbackText)||void 0===i?void 0:i.attempt)||void 0===n?void 0:n.attemptLastGradedDate),grader:Object(E.a)(null===(a=this.feedbackText)||void 0===a?void 0:a.attemptGrader)}}}getFeedbackAuthoringSecondaryGradersFeedback(){return{secondaryGradersFeedback:this.getStagedAttemptGrades().map(((e,t)=>{const{rawTextFeedback:s,attemptLastGradedDate:i}=this.getFeedbackTextAndAttemptDate(e.feedbackToUser.rawText,e.grader?e.attemptLastGradedDate:null);return{rawTextFeedback:s,attemptLastGradedDate:i,id:e.stagedAttemptId,grader:Object(E.a)(e.grader),showAnonymousWhenNoUserData:!0,late:this.isSecondaryFeedbackLate(e),isFeedbackFromCurrentStudent:!1,isFeedbackVisible:e.showFeedbackToStudent,listIndex:t+1,onClickChangeVisibility:()=>{this.delegatedAttemptAdapter.toggleDelegatedGradeVisibility(e.stagedAttemptId).then((e=>{this.feedbackAuthoringPayload.secondaryGradersFeedback[t].isFeedbackVisible=e.showFeedbackToStudent,this.triggerFeedbackAuthoringComponentReRender()}))}}}))}}getUsersThatRequireCourseMemberships(){return this.getStagedAttemptGrades().filter((e=>e.grader)).map((e=>e.grader))}getStagedAttemptGrades(){const e=this.feedbackText.getStagedAttemptGrades();return this.filterStagedAttemptGrades(e)}filterStagedAttemptGrades(e){return e&&e.filter((e=>e.hasGraderFeedback))||[]}getIndividualFeedbackAuthoringProps(){let e,t,s,i,n=!1;if(this.isIndividualFeedbackAuthoringEditView()){e=this.getUserIdFromParams();const{groupId:a}=this.ultraState.getCurrentUrlParams(),o=r.find(this.ultraSubmissionListService.submissionList.rows,(e=>e.group.id===a&&!!e.group.memberships)),d=o?o.group.memberships:[],l=e?r.findIndex(d,(t=>t.userId===e)):0;e=d[l].userId,t=this.getFormatUsername(d[l].ui.user),d[l+1]&&(s=()=>{if(this.feedbackIsDirty()&&this.isInlineMode)return this.resumeNavigation=()=>{this.ultraState.search("userId",d[l+1].userId).then((()=>this.buildFeedbackAuthoringPayload()))},void this.showCloseConfirmationModal();this.ultraState.search("userId",d[l+1].userId).then((()=>this.buildFeedbackAuthoringPayload()))}),d[l-1]&&(i=()=>{if(this.feedbackIsDirty()&&this.isInlineMode)return this.resumeNavigation=()=>{this.ultraState.search("userId",d[l-1].userId).then((()=>this.buildFeedbackAuthoringPayload()))},void this.showCloseConfirmationModal();this.ultraState.search("userId",d[l-1].userId).then((()=>this.buildFeedbackAuthoringPayload()))}),n=!0}else e=this.contextUser.userId,t=this.getFormatUsername(this.contextUser.userModel);const a=this.getGroupIndividualAttempt(e);return this.feedbackParamsIndividual.loadTextSync(a),{panelTitle:t,configProps:{allowMultipleFeedbackNavigation:n,onNavigateToNextFeedback:s,onNavigateToPreviousFeedback:i}}}getGeneralFeedbackAuthoringProps(){const e=this.isGroupSubmission()&&this.isIndividualFeedbackAuthoringEditView();return{panelTitle:e||!this.isInlineMode?this.getGeneralFeedbackTitle():void 0,configProps:{allowMultipleFeedbackNavigation:e}}}getGeneralFeedbackTitle(){let e;if(this.isGroupSubmission())if(this.isIndividualFeedbackAuthoringEditView()){const{groupId:t}=this.ultraState.getCurrentUrlParams();e=r.find(this.ultraSubmissionListService.submissionList.rows,(e=>e.group.id===t)).group.title}else{e=this.ultraState.getCurrentResolvedValues().currentContent.assignedGroups[0].groupTitle}else{let t;if(this.isIndividualFeedbackAuthoringEditView()&&!this.feedbackParams.isPeerGrading()){const e=this.getUserIdFromParams();t=r.find(this.ultraSubmissionListService.submissionList.rows,(t=>t.user.id===e)).user}else t=this.contextUser.userModel;e=this.getFormatUsername(t)}return e}getFeedbackAuthoringGroupConfig(e=!1,t){if(e&&(this.tabKey=t||(this.isOpenFromGroupAttempt()?j.c.General:j.c.Individual),!this.isIndividualFeedbackAuthoringEditView())){const e=this.getGroupIndividualAttempt(this.contextUser.userId),t=this.feedbackParamsIndividual.loadTextSync(e),s=this.feedbackParams.feedbackText.getInitialBbml();!t||""===t||""!==s&&s||(this.tabKey=j.c.Individual)}return{configProps:{isFeedbackForGroupSubmission:!0,onGroupTabChange:this.onTabChange.bind(this),initialSelectedTabKey:this.tabKey}}}buildFeedbackAuthoringPayload(e={},t=!1,s){let i={},n={};this.isGroupSubmission()&&(n=this.getFeedbackAuthoringGroupConfig(t,s)),i=this.tabKey===j.c.Individual?this.getIndividualFeedbackAuthoringProps():this.getGeneralFeedbackAuthoringProps(),this.isFeedbackAuthoringPayloadLoaded=!0;const a=this.currentFeedbackParams.getEditorConfig();this.feedbackAuthoringPayload=r.merge({analyticsId:"assessment"},i,n,this.getFeedbackConfigProps(a),this.getFeedbackAuthoringPrimaryGraderFeedback(a),this.getFeedbackAuthoringSecondaryGradersFeedback(),e)}triggerFeedbackAuthoringComponentReRender(){this.feedbackAuthoringPayload=r.cloneDeep(this.feedbackAuthoringPayload)}isIndividualFeedbackAuthoringEditView(){return!!this.ultraSubmissionListService.submissionList}getGroupIndividualAttempt(e){return r.find(this.feedbackText.attempt.attempts,{userId:e})}isOpenFromGroupAttempt(){return!this.ultraSubmissionListService.submissionList||!this.getUserIdFromParams()||this.ultraState.params.groupId}getUserIdFromParams(){let e=this.ultraState.getCurrentUrlParams().userId;return r.isArray(e)&&(e=e[0]),e}get isUserPeerReviewer(){if(!this.feedbackParams.isPeerGrading())return!1;const{currentColumn:e}=this.ultraState.getCurrentResolvedValues();return this.feedbackParams.peerReviewContentObject.canPeerReviewAttempt(e,this.feedbackText.attempt)}};Object(i.a)([Object(O.c)()],se.prototype,"onClickSave",null),Object(i.a)([Object(O.c)()],se.prototype,"onClickEdit",null),Object(i.a)([Object(O.c)()],se.prototype,"onClickCancel",null),Object(i.a)([Object(O.c)()],se.prototype,"onTabChange",null),Object(i.a)([Object(O.c)()],se.prototype,"onFeedbackChanged",null),se=Object(i.a)([Object(P.a)({module:te,componentName:X,template:z}),Object(i.c)(0,Object(O.b)("$rootScope")),Object(i.c)(1,Object(O.b)("$scope")),Object(i.c)(2,Object(O.b)("$q")),Object(i.c)(3,Object(O.b)("$ngRedux")),Object(i.c)(4,Object(O.b)("$injector")),Object(i.c)(5,Object(O.b)(D.b)),Object(i.c)(6,Object(O.b)(l.serviceName)),Object(i.c)(7,Object(O.b)(w.b)),Object(i.c)(8,Object(O.b)(h.b)),Object(i.c)(9,Object(O.b)(f.b)),Object(i.c)(10,Object(O.b)(c.c)),Object(i.c)(11,Object(O.b)(k.b)),Object(i.c)(12,Object(O.b)(g.d)),Object(i.c)(13,Object(O.b)(x.b)),Object(i.c)(14,Object(O.b)(F.d)),Object(i.c)(15,Object(O.b)(C.b)),Object(i.c)(16,Object(O.b)(I.b))],se);let ie=class{constructor(e,t,s,i,n,o,r,l,c,u,b,m,g,h,p,v){this.$q=e,this.localize=t,this.courseModel=s,this.ultraStateService=i,this.context=n,this.feedbackText=o,this.rteCloudStorageIntegrationService=r,this.$scope=l,this.contextUser=c,this.contextCourse=u,this.peerService=b,this.contentData=m,this.currentCourseMembership=g,this.ultraSubmissionListService=h,this.batchService=p,this.fileUploadSettingsService=v,this.placeholder="",this.webLocation="",this.fileLocation="",this.getPlaceholderLocalizeKey=()=>this.canEnterFeedback()?"course.content.assessment.attempt.feedback.placeholder.privileged":this.getPlaceholderReadonlyLocalizeKey(),this.getTranslation=e=>this.localize.translate({locale:this.localize.getLocale(this.$scope),key:e}),this.loadPlaceholder=()=>{const e=this.getPlaceholderLocalizeKey();return this.getTranslation(e).then((e=>{this.placeholder=e}))},this.loadText=()=>this.feedbackText.load().then((e=>(this.bbml=e.rawText,this.webLocation=e.webLocation,this.fileLocation=e.fileLocation,this.isEditorReadOnly=!this.canEnterFeedback()||!!e.rawText,e.rawText))),this.loadTextSync=e=>{const t=this.feedbackText.loadSync(e);return this.bbml=t.rawText,this.webLocation=t.webLocation,this.fileLocation=t.fileLocation,this.isEditorReadOnly=!this.canEnterFeedback()||!!t.rawText,t.rawText},this.load=()=>{const{contentId:e}=this.ultraStateService.getCurrentUrlParams();return this.$q.all([this.getCurrentCourse(),this.loadText()]).then((([e,t])=>{this.loadPlaceholder(),this.isOrganization=e.isOrganization,this.currentCourse=e}))},this.loadCourseMemberships=e=>{var t;if(!this.isPeerGrading()||0===e.length)return this.$q.resolve(null);this.courseMemberships=null!==(t=this.ultraSubmissionListService.submissionList.memberships)&&void 0!==t?t:[];const s=this.courseMemberships.map((e=>e.userId)),i=e.filter((e=>!s.includes(e.id)));return 0===i.length?this.$q.resolve(null):this.batchService.performBatch((()=>this.$q.all(i.map((e=>this.currentCourse.users.$find(e.id,{expand:"courseRole"}).$allow([d.S.NotFound]).$asPromise().then((e=>{e&&this.courseMemberships.push(e)})))))))},this.loadCourseColorAndGradeDetail=()=>{const{contentId:e}=this.ultraStateService.getCurrentUrlParams();return this.currentCourse?this.$q.all([this.currentCourse.users.$find(this.contextUser.userId,{expand:"courseRole"}).$allow([404]).$asPromise(),this.currentCourseMembership.isStudentMembership()&&this.contentData.loadContentAndGrades({contentId:e,course:this.currentCourse})]).then((([e,t])=>{this.courseColorClass=e.getCourseColorClass(),this.gradeDetail=null==t?void 0:t.gradeDetail})):this.$q.resolve(void 0)},this.loadAssessmentTitle=()=>{const{currentContent:e}=this.ultraStateService.getCurrentResolvedValues();return this.assessmentTitle=e.title,e.title},this.canViewAttemptGrades=()=>this.feedbackText.canViewAttemptGrades(),this.canEnterFeedback=()=>this.feedbackText.canEnterFeedback(),this.getPluginConfig=()=>{const{courseId:e}=this.ultraStateService.getCurrentUrlParams(),{xsrfToken:t}=this.context;return{courseId:e,xsrfToken:t,apiBasePath:Object(R.c)(a.a.apiBasePath),fileLocation:this.fileLocation,webLocation:this.webLocation,shouldEnableCloudStorageIntegration:this.rteCloudStorageIntegrationService.isCloudServiceAvailable,openCloudStorageIntegrationModal:this.rteCloudStorageIntegrationService.isCloudServiceAvailable?this.rteCloudStorageIntegrationService.getModalCallback(this.$scope):void 0,fileUploadSettings:this.fileUploadSettingsService.getSettings()}},this.getEditorConfig=()=>({bbml:this.bbml,isReadOnly:this.isEditorReadOnly,isPrivileged:this.canEnterFeedback(),onEditorContentChanged:this.feedbackText.feedbackTextDidChange,pluginConfig:this.getPluginConfig()}),this.save=(e=!1)=>this.feedbackText.save(e).then((e=>{this.bbml=e.rawText,this.webLocation=e.webLocation,this.fileLocation=e.fileLocation,this.isEditorReadOnly=!!e.rawText})),this.feedbackIsDirty=()=>this.feedbackText.feedbackIsDirty(),this.isReconciler=()=>{const{currentColumn:e}=this.ultraStateService.getCurrentResolvedValues();return e.isUserReconciler(this.contextUser.userId)},this.isPeerGrading=()=>{var e;return!!(null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.peerGrading)},this.findCourseMembership=e=>this.courseMemberships.find((t=>t.userId===e.id))}getPlaceholderReadonlyLocalizeKey(){const{currentColumn:e}=this.ultraStateService.getCurrentResolvedValues();return e&&e.delegatedGrading?"course.content.assessment.attempt.feedback.placeholder.reconciledReadonly":"course.content.assessment.attempt.feedback.placeholder.readonly"}getCurrentCourse(){const e=this.ultraStateService.getCurrentUrlParams().courseId;return this.courseModel.$find(e).$asPromise()}loadPeerReviewContentObject(){const{currentColumn:e}=this.ultraStateService.getCurrentResolvedValues();return this.peerService.getOrCreatePeerContentFromColumn(e).then((e=>{this.peerReviewContentObject=e}))}initializeCloudService(){return this.rteCloudStorageIntegrationService.initialize()}get currentColumn(){const{currentColumn:e}=this.ultraStateService.getCurrentResolvedValues();return e}};ie=Object(i.a)([Object(i.c)(0,Object(O.b)("$q")),Object(i.c)(1,Object(O.b)(l.serviceName)),Object(i.c)(2,Object(O.b)(o.m.serviceName)),Object(i.c)(3,Object(O.b)(g.d)),Object(i.c)(4,Object(O.b)(h.b)),Object(i.c)(5,Object(O.b)("feedbackText")),Object(i.c)(6,Object(O.b)(S.b)),Object(i.c)(7,Object(O.b)("$scope")),Object(i.c)(8,Object(O.b)(f.b)),Object(i.c)(9,Object(O.b)(p.e)),Object(i.c)(10,Object(O.b)(x.b)),Object(i.c)(11,Object(O.b)(v.b)),Object(i.c)(12,Object(O.b)(F.d)),Object(i.c)(13,Object(O.b)(k.b)),Object(i.c)(14,Object(O.b)(M.b)),Object(i.c)(15,Object(O.b)(U.b))],ie);class ne{}const ae="<div>\n  <assessment-feedback></assessment-feedback>\n  <div ui-view></div>\n</div>";te.controller(W,ne)},"2Kra":function(e,t){e.exports='<span ng-switch="$ctrl.iconName" class="slider-tab-item-icon-span">\n  <bb-ui-icon-medium-safe-assign ng-switch-when="safe-assign"></bb-ui-icon-medium-safe-assign>\n  <bb-svg-icon ng-switch-default size="medium" icon="{{$ctrl.iconName}}"></bb-svg-icon>\n</span>\n'},"2lxm":function(e,t,s){"use strict";s.d(t,"a",(function(){return l})),s.d(t,"b",(function(){return c}));var i=s("D57K"),n=s("Llzl"),a=s("pjml"),o=s("aHpC"),r=s("IbyE"),d=s("9OUN");const l="ultra.service.gradable-item-user-option",c="gradableItemUserOptionService";let u=class{constructor(e,t,s){this.$rootScope=e,this.$q=t,this.$ngRedux=s,this.subscribeToRedux()}subscribeToRedux(){const e=this.$ngRedux.connect(null,(e=>Object(d.b)({persistGradableItemUserOption:r.X.gradableItemUserOption.persistGradableItemUserOption,deleteGradableItemUserOption:r.X.gradableItemUserOption.deleteGradableItemUserOption,fetchGradableItemUserOption:r.X.gradableItemUserOption.fetchGradableItemUserOption,fetchGradableItemUserOptionCount:r.X.gradableItemUserOption.fetchGradableItemUserOptionCount,fetchGradableItemUserOptionExceptions:r.X.gradableItemUserOption.fetchGradableItemUserOptionExceptions},e)))(this);this.$rootScope.$on("$destroy",e)}updateGradableItemUserOption(e,t){return this.$q.when(this.persistGradableItemUserOption(e,t)).then((e=>e.item))}removeGradableItemUserOption(e){return this.$q.when(this.deleteGradableItemUserOption(e)).then((e=>e))}getGradableItemUserOption(e,t,s){const i={courseId:e,columnId:t},n={membershipIds:s};return this.$q.resolve(this.fetchGradableItemUserOption(i,n))}getGradableItemUserOptionExceptions(e,t,s,i){const n={courseId:e,membershipId:t},a={columnId:s,isExcludedFromCourseUserActivity:i};return this.$q.resolve(this.fetchGradableItemUserOptionExceptions(n,a))}getGradableItemUserOptionCount(e,t){const s={courseId:e,columnId:t};return this.$q.resolve(this.fetchGradableItemUserOptionCount(s,{}))}getGradableItemUserOptionByMembershipId(e,t){return r.gc.gradableItemUserOption.getGradableItemUserOptionByColumnAndMembershipId(this.$ngRedux.getState(),e,t)}getGradableItemUserOptionByUserId(e,t,s){var i;const n=null===(i=r.gc.courseMembership.getCourseMembershipsByUserIds(this.$ngRedux.getState(),t,[s])[0])||void 0===i?void 0:i.id;return r.gc.gradableItemUserOption.getGradableItemUserOptionByColumnAndMembershipId(this.$ngRedux.getState(),e,n)}};u=Object(i.a)([Object(i.c)(0,Object(o.b)("$rootScope")),Object(i.c)(1,Object(o.b)("$q")),Object(i.c)(2,Object(o.b)("$ngRedux"))],u);n.module(l,[a.N]).service(c,u)},"3Nzc":function(e,t,s){"use strict";var i=s("D57K"),n=(s("KXuk"),s("VdDF")),a=s("seHs"),o=s("nsO7"),r=s("Llzl"),d=s("9OUN"),l=s("Fvsw"),c=s("Qbdf"),u=s("g7Mf"),b=s("jhBu"),m=s("XGja"),g=s("o5Lu"),h=s("X/qj"),p=s("0JpG"),v=s("pjml"),f=s("R4kC"),w=s("2lxm"),S=s("lEL+"),k=s("0Vbm"),C=s("TnpK"),A=s("5uPl"),y=s("u3gM"),T=s("XH1I"),O=s("gkef"),x=s("+brj"),I=s("9hUw"),G=s("1ZbL");const L="ultra.components.directives.grade.submissionList.filters",P={Class:s("ZQFV").O,attributes:["analyticsId"],bindingNames:["scoreProviderHandler","studentFilterSelected","gradingFilterSelected","isDelegated","isUserReconciler","isGroupContent"],renderLocalized:!0,withProvider:!0};r.module(L,[]).component("bbSubmissionListDropdownFilters",Object(G.a)(P));var R=s("ERkP"),j=s("AuQm"),$=s("VQ4P"),N=s("kIfn");const E="ultra.components.directives.submission-list-no-filter",F={Class:()=>{const e=Object($.a)(),t=e("components.directives.grade.submission-list.noResultsImage.imageMainText"),s=e("components.directives.grade.submission-list.noResultsImage.imageSubText");return R.createElement(j.A,{illustration:N,prominentText:t,subText:s})},renderLocalized:!0};r.module(E,[]).component("bbSubmissionListNoFilter",Object(G.a)(F));var D=s("IbyE"),q=s("Sa5G"),M=s("+O05"),Q=s("7cYF"),U=s("zGdY"),_=s("RWbl"),z=s("aHpC"),B=s("ZzR9"),V=s("fnL1"),H=s("yYax"),K=s("2VX+");s.d(t,"c",(function(){return Z})),s.d(t,"a",(function(){return X})),s.d(t,"b",(function(){return W})),s.d(t,"e",(function(){return J})),s.d(t,"d",(function(){return Y}));const Z="instructor-submission-list-view-refresh",X="instructor-scheduled-regrading-task-finish-event",W="instructor-submission-list-attempt-deleted-event",J="ultra.components.directives.grade.submissionList",Y="SUBMISSION_LIST_SELECTED_PAGE_SIZE",ee="isPreviewStudent(asc),user.familyName(asc),user.givenName(asc)",te="user.familyName(asc),user.givenName(asc),user.userName(asc)",se="user.familyName(desc),user.givenName(desc),user.userName(desc)",ie="user.givenName(asc),user.familyName(asc),user.userName(asc)",ne="user.givenName(desc),user.familyName(desc),user.userName(desc)",ae="needsGrading",oe="studentStatusSort";var re;!function(e){e.Individual="Individual",e.Group="Group",e.Discussion="Discussion"}(re||(re={}));let de=class{constructor(e,t,s,i,n,d,l,c,u,b,m,h,p,v,f,w,S,k,C,A,y,T){var O;this.$location=e,this.scope=t,this.$q=s,this.windowSize=i,this.element=n,this.attrs=d,this.context=l,this.entitlementService=c,this.CourseModel=u,this.grade=b,this.gradebookPermissionService=m,this.localizeService=h,this.gradableItemUserOptionService=p,this.submissionListService=v,this.timeout=f,this.discussion=w,this.contextCourse=S,this.ultraState=k,this.originalityReportService=C,this.browserStorage=A,this.peerService=y,this.$ngRedux=T,this.allMembershipsRetrievedFromServer=!1,this.cannotViewGroupsMsg="",this.canViewException=!1,this.canViewGroups=!1,this.currentlyLoading=!1,this.editing=!1,this.formId="",this.numberOfSubmissions=0,this.currentFocusInputNum=0,this.currentPage=0,this.pageSize=0,this.assessmentExceptionNodeStyle=null,this.nameSortType=H.a.NONE,this.showControls=!1,this.pageSizeOptions=a.c,this.userCourseAvailableMap={},this.onInstructorSubmissionListViewRefresh=(e,t,s)=>{t.isGroupContent&&this.rows&&this.rows.length>0&&this.rows[0].group&&(this.rowsExpandStatus={},this.rows.forEach((e=>{this.rowsExpandStatus[e.group.id]=e.groupDetailsShown}))),this.rows=null,this.scope.$root.$broadcast("refresh-participants-count");const i=t.getDeployedAssessment();i&&i.gradingColumn.dueDate&&(this.column.dueDate=new Date(i.gradingColumn.dueDate)),this.column.summary.$fetch({groupId:this.scope.groupId}),this.studentFilterSelected||this.gradingFilterSelected||!this.memberships?(this.memberships=[],this.loadSubmissions()):this.loadRows(t,s)},this.onGradeInputBlur=(e,t)=>{this.currentFocusId&&this.currentFocusId===t&&(this.currentFocusId=null,this.currentFocusInputNum--),this.timeout((()=>{this.editing=this.currentFocusInputNum>0}),this.scope,400,!0)},this.onGradeInputInFocus=(e,t)=>{this.currentFocusId&&this.currentFocusId===t||(this.currentFocusId=t,this.currentFocusInputNum++),this.editing=this.currentFocusInputNum>0},this.onGradeStatusChange=(e,t)=>{const s=!!this.column.ui.content&&this.column.ui.content.isSafeAssignEnabled();if(t.groupId)this.updateGroupRows(t.groupId,s);else{if(this.studentFilterSelected||this.gradingFilterSelected)return this.memberships=[],void this.loadSubmissions();this.updateRows(t.gradeId,s)}},this.onDueDateUpdate=e=>{this.loadSubmissions()},this.onSubmissionListColumnChange=(e,t)=>{this.column=t,this.unsubscribeOnRowsUpdated&&this.unsubscribeOnRowsUpdated(),this.unsubscribeOnRowsUpdated=this.submissionListService.addOnRowsUpdated(this.column.courseId,this.column.id,this.onSubmissionListRowsUpdated),this.memberships=[],this.loadSubmissions()},this.onAttemptDeleted=()=>{this.memberships=[],this.loadSubmissions()},this.processUpdatedRows=e=>{e.forEach((e=>{const t=o.findIndex(this.allRows,(t=>{var s,i;return(null===(s=t.user)||void 0===s?void 0:s.id)===(null===(i=e.user)||void 0===i?void 0:i.id)}));t>=0&&(this.allRows[t]=e)})),this.filterLoadedBulkViewRows(this.searchText)},this.onSubmissionListRowsUpdated=()=>{this.isGroup?this.processUpdatedGroupRows(this.submissionListService.submissionList.rows):this.processUpdatedRows(this.submissionListService.submissionList.rows)},this.onGroupChange=(e,t)=>{this.scope.groupId=t,this.memberships=[],this.loadSubmissions()},this.processUpdatedGroupRows=e=>{e.forEach((e=>{const t=o.findIndex(this.rows,(t=>t.group.id===e.group.id));this.scope.$root.$broadcast("click-to-invoke-child-directive-init"),this.rows[t]=e})),this.filterLoadedBulkViewRows(this.searchText)},this.onFinishRender=r.noop,this.onChangePageFunction=e=>{this.scope.$apply((()=>{this.currentPage=e,this.onChangePage()}))},this.onPageSizeChange=e=>{this.browserStorage.saveToStorage(Y,e.toString(10),x.a.LocalStorage),this.pageSize=e,this.pageSizeChange(),this.validateCurrentPageIndex()},this.studentFilterSelected=e=>{this.selectedStudentFilter=e,this.currentPage=0,this.loadSubmissions()},this.gradingFilterSelected=e=>{this.selectedGradingFilter=e,this.currentPage=0,this.loadSubmissions()},this.getDefaultNameSortOption=()=>{const e=this.contextCourse.course.isOrganization?"organization.grades.gradebook-item.headers.student":"course.grades.gradebook-item.headers.student";return{nameButtonLabel:this.translateKey(e),ariaLabel:this.translateKey(this.contextCourse.course.isOrganization?"components.directives.grade.organization.submission-list.aria-label.sortList.student":"components.directives.grade.submission-list.aria-label.sortList.student"),sort:ee}},this.column=t.getColumn(),this.dueDateExceptionMap=new Map,this.populateNameSortOptions(),this.selectedNameSortOption=this.getDefaultNameSortOption(),this.isAssignmentOrTest()&&(this.sortParam=ee),this.canViewGroups=this.entitlementService.areAllEntitled([q.o.ViewGroups,q.f.ViewAsDesigner],this.contextCourse.courseId),this.canViewException=this.entitlementService.isEntitled(q.b.ViewException,this.contextCourse.courseId),this.peerService.getOrCreatePeerContentFromColumn(this.column).then((e=>this.peerReviewContentObject=e)),this.localizeService.translate({locale:this.localizeService.getLocale(this.scope),key:"components.directives.grade.submission-list.cannotViewGroupsMsg"}).then((e=>{this.cannotViewGroupsMsg=e})),t.getForumId&&(this.formId=t.getForumId()),this.isExternalSubmission=M.a.isExternalSubmissionsAssessment(this.column.ui.content),this.connectToRedux(),(null===(O=this.column)||void 0===O?void 0:O.anonymousGrading)&&(this.initializeAnonymousGradingFilter(),this.scope.$on(B.a.$locationChangeSuccess,(()=>{const e=this.getFilterFromParams(this.$location.search().gradingStatus)||this.anonymousSelectedGradingFilter;this.changeFilter(e)}))),t.$on("submission-list-column-change",this.onSubmissionListColumnChange),t.$on("group-change",this.onGroupChange),t.$on(g.c,this.onGradeStatusChange),t.$on("due-date-exception-updated",this.onDueDateUpdate),t.$on(Z,this.onInstructorSubmissionListViewRefresh),t.$on("grade-input-in-focus",this.onGradeInputInFocus),t.$on("grade-input-blur",this.onGradeInputBlur),t.$on(X,(()=>{this.column&&this.loadRows(this.column.ui.content,(()=>{this.scope.$root.$broadcast(Q.e)}))})),this.unsubscribeOnRowsUpdated=this.submissionListService.addOnRowsUpdated(this.column.courseId,this.column.id,this.onSubmissionListRowsUpdated),t.$on("$destroy",(()=>{this.assessmentExceptionNodeStyle&&this.assessmentExceptionNodeStyle.remove(),this.unsubscribeOnRowsUpdated()})),t.$on(W,this.onAttemptDeleted),this.originalityReportService.setCourseContent(this.column.ui.content,!0),this.originalityReportService.fetchIsOriginalityEnabled().then((e=>{this.shouldShowOriginality=e})),A.getFromStorage(Y,x.a.LocalStorage).then((e=>{this.initialPageSize=Number(e)||this.pageSizeOptions[0],this.pageSize=this.initialPageSize})).catch((()=>{this.initialPageSize=this.pageSizeOptions[0],this.pageSize=this.initialPageSize})).finally((()=>{this.loadSubmissions()}))}initializeAnonymousGradingFilter(){this.anonymousAvailableFilters=[{index:0,name:this.localizeService.translateSync({locale:this.localizeService.getLocale(this.scope),key:"components.directives.grade.submission-list.filter.showAllStudents"}),nature:U.O.allStatuses,value:U.O.allStatuses},{index:1,name:this.localizeService.translateSync({locale:this.localizeService.getLocale(this.scope),key:"components.directives.grade.submission-list.filter.showNeedsGradingStudents"}),nature:U.O.needsGrading,value:U.O.needsGrading}];const e=this.getFilterFromParams(this.ultraState.params.gradingStatus);this.anonymousSelectedGradingFilter=e||this.anonymousAvailableFilters[0]}getFilterFromParams(e){if(e)return this.anonymousAvailableFilters.find((t=>e===t.value))}getSearchBoxPlaceholderKey(){const e="components.directives.grade.submission-list.search";if(re.Group===this.mode)return`${e}GroupPlaceholder`;return`${e}${this.contextCourse.course.isOrganization?"Participant":"Student"}Placeholder`}isPeerGrading(){return this.column.peerGrading}hasAttemptBeenPostedOrCompleted(e){const t=this.rows[e];return t.isStatusComplete()&&!t.overrideToPost()&&!t.grade.isPastDueZero()}get peerReviewsPerStudent(){var e;return null!==(e=this.column.ui.content.getDeployedAssessment().peerSettings.peerReviewsPerStudent)&&void 0!==e?e:-1}hasCompletedAllPeerReviews(e){const t=this.rows[e];return this.peerReviewsPerStudent===t.numOfPeerReviewsCompleted}getNothingToGradeOrReconcileKey(e){return this.rows[e].isCurrentUserReconciler()?"nothingToReconcile":"nothingToGrade"}getAttemptsPeerStatus(e){return this.currentDate=n.a.parseStringToDate(this.context.getServerTime()),this.submissionDueDate=n.a.parseStringToDate(this.column.dueDate),this.peerReviewDueDate=n.a.parseStringToDate(this.rows[0].Column.ui.content.getDeployedAssessment().peerSettings.peerReviewDueDate),this.hasCompletedAllPeerReviews(e)||this.isAfterPeerReviewWindow?(this.status="status-needs-grading","needsGrading"):this.isInPeerSubmissionWindow?(this.status="status-submitted","submitted"):(this.status="status-in-peer-review","inPeerReview")}getPostedOrCompletedKey(){return this.isPeerGrading()?(this.status="status-is-posted","posted"):(this.status="status-is-complete","complete")}get isInPeerSubmissionWindow(){var e;return!(null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.isAfterPeerSubmissionDueDate())}get isAfterPeerReviewWindow(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.isAfterPeerReviewDueDate()}filterLoadedBulkViewRows(e){this.filterRows(e)}filterRows(e){if(this.searchText=e,e){const t=e.split(/\s+/).map((e=>new RegExp(e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"),"i")));this.rows=this.allRows.filter((e=>this.isGroup?t.some((t=>t.test(e.group.title))):t.some((t=>t.test(e.user.givenName)))||t.some((t=>t.test(e.user.familyName))))),this.currentPage=0}else this.rows=this.allRows}updateRows(e,t){var s;let i;const n={groupId:this.scope.groupId};if(e?(i=[this.getMembershipByGradeId(e)].filter((e=>e)),n.userIds=null===(s=i[0])||void 0===s?void 0:s.userId):(i=this.getMembershipsAll(),n.roleBucket=U.y.Taking),this.column.anonymousGrading)return this.loadAnonymousStudentRows().then(this.processUpdatedRows);if(i.length<=0)return Promise.resolve();return this.grade.loadCustomizedBulkViewRows(i,this.column,this.formId,n,t,!0).then(this.processUpdatedRows)}loadAnonymousStudentRows(){return this.anonymousSelectedGradingFilter.value===U.O.needsGrading?this.grade.loadAnonymousStudentRowsNeedsGrading(this.column):this.grade.loadAnonymousStudentRows(this.column)}updateGroupRows(e,t){const s=o.find(this.rows,(t=>t.group.id===e)),i=this.getMembershipsFromRow(s),n=o.find(this.column.ui.content.assignedGroups,(e=>e.groupId===s.group.id));this.canViewGroups?this.grade.loadGroupRows(this.course,[n],i,this.column,t).then(this.processUpdatedGroupRows):this.processUpdatedGroupRows([])}getMembershipsAll(){const e=[];return this.rows.forEach((t=>{if(t.group)t.group.memberships.forEach((t=>{const s=o.find(this.memberships,(e=>e.user.id===t.userId));e.push(s)}));else{const s=o.find(this.memberships,(e=>e.user.id===t.user.id));e.push(s)}})),e}getMembershipsFromRow(e){return e.group.memberships.map((e=>{const t=o.findIndex(this.memberships,(t=>e.userId===t.userId));return this.memberships[t]}))}getMembershipByGradeId(e){const t=o.findIndex(this.rows,(t=>t.grade&&t.grade.id===e));if(t>-1){const e=this.rows[t],s=o.findIndex(this.memberships,(t=>e.user.id===t.userId));return this.memberships[s]}return null}hasNonDefaultFilterSelected(){const e=this.selectedGradingFilter!==U.O.allStatuses&&!!this.selectedGradingFilter,t=this.selectedStudentFilter!==U.dc.allStatuses&&!!this.selectedStudentFilter;return e||t}getBulkViewQueryParameters(e){const t={groupId:this.scope.groupId,roleBucket:U.y.Taking};if(this.isDiscussion&&this.hasNonDefaultFilterSelected()){const s=e.map((e=>e.userId)).join("-");t.userIds=s}return t}loadSubmissions(){this.scope.$emit("bb-gradebook-item-show-spinner-child",!0),this.CourseModel.$find(this.column.courseId).$then((e=>{var t;this.course=e,(null===(t=this.column)||void 0===t?void 0:t.anonymousGrading)?this.fetchGrades(this.column.id).then((e=>{this.gradesData=e,this.column&&this.loadRows(this.column.ui.content)})):this.fetchMemberships().then((e=>{this.memberships=e;const t=this.memberships.map((e=>e.id));return e.forEach((e=>{var t;e.dueDateExceptionType===U.D.Unlimited&&this.dueDateExceptionMap.set(this.scope.groupId,!0),this.userCourseAvailableMap[e.userId]=null!==(t=e.isAvailable)&&void 0!==t&&t})),this.column&&this.loadRows(this.column.ui.content),this.gradableItemUserOptionService.getGradableItemUserOption(this.column.courseId,this.column.id,t)}))}))}fetchGrades(e){let t={offset:this.currentPage*this.pageSize,limit:this.pageSize,includeCount:!0,sort:this.sortParam};return this.anonymousSelectedGradingFilter.value===U.O.needsGrading&&(t={...t,onlyNeedsGrading:!0,columnId:this.column.id}),this.course.gradebook.columns.$find(e).grades.$fetch(t).$asPromise().then((e=>(this.totalItems=e.paging.count,e)))}loadRows(e,t){e&&e.isGroupContent&&!e.isDiscussion()?(this.scope.$emit("bb-gradebook-item-show-spinner-child",!0),this.refreshGroups({contentId:this.column.contentId,courseId:this.column.courseId,expand:"id,assignedContents",filter:{gradingStatus:this.selectedGradingFilter,submissionStatus:this.selectedStudentFilter}}).then((()=>{const e=this.groups.reduce(((e,{assignedContents:t})=>[...e,...t]),[]).filter((e=>e.contentId===this.column.contentId));this.loadAllGroupRows(e)}))):this.loadBulkViewRows(t)}loadBulkViewRows(e){var t,s;if(!((null===(t=this.memberships)||void 0===t?void 0:t.length)>0||(null===(s=this.gradesData)||void 0===s?void 0:s.length))||this.scope.groupId&&!this.canViewGroups)this.rows=[],this.finishLoadingBulkViewRows(e),this.validateItemsOnList(),this.scope.$emit("gradebook-grades-loaded",[]);else{let t;if(this.column.anonymousGrading){const e="attempts";t=this.grade.loadAnonymousBulkViewRows(this.gradesData,this.column,null,{expand:e})}else{const e=this.getBulkViewQueryParameters(this.memberships),s=!!this.column.ui.content&&this.column.ui.content.isSafeAssignEnabled(),i=!0;t=this.grade.loadCustomizedBulkViewRows(this.memberships,this.column,this.formId,e,s,i)}this.scope.$emit("bb-gradebook-item-show-spinner-child",!0),t.then((e=>{this.processLoadedBulkViewRows(e)})).finally((()=>{this.finishLoadingBulkViewRows(e),this.loadAssessmentExceptions(),this.validateItemsOnList()}))}}processLoadedBulkViewRows(e){this.scope.$emit("gradebook-grades-loaded",e.map((e=>e.grade))),this.allRows=e,this.sortSubmissionList(this.allRows),this.setSubmissionListInGradeService(this.allRows),this.filterLoadedBulkViewRows(this.searchText)}loadAssessmentExceptions(){return this.canViewException&&!this.column.anonymousGrading?this.$q.when(M.a.getSubmissionListAllExceptions(this.course,this.column.ui.content).then((e=>{const t=o.keyBy(e,"target.id");this.allRows.forEach((e=>{e.assessmentException=t[e.user.id]})),this.assessmentExceptionNodeStyle=M.a.generateCssStyle(this.course,this.column.ui.content,e)}))):this.$q.when()}finishLoadingBulkViewRows(e){this.scope.$emit("bb-gradebook-item-show-spinner-child",!1),this.currentlyLoading=!1,this.scope.$root.$broadcast("submission-list-loaded"),e&&e(),this.showControls=!0}loadAllGroupRows(e,t){this.canViewGroups?this.grade.loadGroupRows(this.course,e,this.memberships,this.column,this.column.ui.content&&this.column.ui.content.isSafeAssignEnabled()).then((e=>{this.processLoadedAllGroupRows(e)})).finally((()=>{this.finishLoadingBulkViewRows(t),this.validateItemsOnList()})):(this.processLoadedAllGroupRows([]),this.finishLoadingBulkViewRows(t),this.validateItemsOnList())}processLoadedAllGroupRows(e){this.allRows=e,this.rows=e,this.submissionListService.sortSubmissionList(this.rows),this.setSubmissionListInGradeService(this.rows),this.filterLoadedBulkViewRows(this.searchText),this.rowsExpandStatus&&(this.rows.forEach((e=>{e.groupDetailsShown=!!this.rowsExpandStatus[e.group.id]})),this.rowsExpandStatus=null)}fetchMemberships(){let e={fields:"courseCardColorIndex,id,isAvailable,dueDateExceptionType,timeLimitExceptionType,role,courseRole,user.id,user.userName,user.avatar,user.familyName,user.givenName,user.lastModifiedAt,userHasHidden,userId,isPreviewStudent,user.otherName,user.preferredDisplayName,",roleBucket:"taking",sort:this.sortParam,offset:this.currentPage*this.pageSize,columnId:this.column.id};const t=this.getFilterString(),s=this.column&&this.column.isGroupContent()&&!this.column.isDiscussion();!t||this.column.anonymousGrading||s||(e={...e,filter:t,columnId:this.column.id});const i=this.course.memberships.$fetch(e).$asPromise();return this.scope.groupId&&this.canViewGroups?this.$q.all([i,this.course.groups.$new(this.scope.groupId).$fetch({expand:"memberships"}).$asPromise()]).then((e=>{const[t,s]=e,i=new Set(o.map(s.memberships,"userId")),n=t.filter((e=>i.has(e.userId)));return n.paging=t.paging,n.paging.count=n.length,n.permissions=t.permissions,n})):i}get isIndividual(){return this.mode===re.Individual}get isDiscussion(){return this.mode===re.Discussion}get isGroup(){return this.mode===re.Group}get totalItems(){return this.rows?this.rows.length:0}set totalItems(e){}get totalItemsOnList(){return this.rows?this.numberOfSubmissions:0}isGroupDiscussion(){return this.isDiscussion&&this.discussion.hasGroups()}showNoGroupViewMessage(){return this.isGroup&&!this.canViewGroups}isOverdue(){return this.column&&this.column.dueDate&&this.column.dueDate.getTime()-this.context.getServerTime().getTime()<0}includeDueDateException(){return this.dueDateExceptionMap}setSubmissionListInGradeService(e){this.submissionListService.setSubmissionList(this.course.id,this.column.id,this.memberships,e),this.submissionListService.loadRowsListeners()}pageSizeChange(){r.noop()}pageChange(){r.noop()}changeFilter(e){r.noop()}onChangePage(){const{scrollContainer:e,pageSizeSelector:t}=this.getContainerElementAndCurrentElement();e.animate({scrollTop:0},100,(()=>{o.delay((()=>m.b(e,t)),300)}))}getContainerElementAndCurrentElement(){const e=this.windowSize.isSmallBreakpoint()?"#gradebook-item-panel-content":".student-submission-list",t=r.element(e),s=t.find("bb-page-size-selector button");return{scrollContainer:t,pageSizeSelector:s}}sortSubmissionList(e){this.submissionListService.sortSubmissionList(e)}validateCurrentPageIndex(){const e=this.numberOfPages-1;e<0?this.currentPage=0:this.currentPage>e&&(this.currentPage=e)}validateItemsOnList(){this.rows&&(this.numberOfSubmissions=this.rows.length)}get showPagination(){return this.totalItems>this.pageSize}get numberOfPages(){return Math.ceil(this.totalItems/this.pageSize)}get isSmallBreakpoint(){return this.windowSize.isSmallBreakpoint()}get initPageSize(){return this.initialPageSize.toString()}shouldShowSubmissionFilters(){var e,t;return!!(null===(e=this.column)||void 0===e?void 0:e.scoreProviderHandle)&&!(null===(t=this.column)||void 0===t?void 0:t.anonymousGrading)}shouldShowAnonymousSubmissionFilters(){var e,t;const s=this.isGroup&&!this.isDiscussion;return!!(null===(e=this.column)||void 0===e?void 0:e.scoreProviderHandle)&&(null===(t=this.column)||void 0===t?void 0:t.anonymousGrading)&&!s}isDelegated(){return this.column.delegatedGrading}isUserReconciler(){var e,t;if(this.isDiscussion||this.isGroup)return!1;const s=this.context.getCurrentUserId();return!!(null===(t=null===(e=this.column)||void 0===e?void 0:e.delegatedGraders)||void 0===t?void 0:t.some((e=>e.canReconcile&&e.userId===s)))}getSelectedFilters(){const e={submissionStatus:"",gradingStatus:""};return this.selectedStudentFilter&&this.selectedStudentFilter!==U.dc.allStatuses&&(e.submissionStatus=this.selectedStudentFilter),this.selectedGradingFilter&&this.selectedGradingFilter!==U.O.allStatuses&&(e.gradingStatus=this.selectedGradingFilter),e}getFilterString(){return Object.values(this.getSelectedFilters()).filter((e=>e)).join(",")}translateKey(e){return this.localizeService.translateSync({locale:this.localizeService.getLocale(this.scope),key:e})}getLocalizedNameSortOptions(e,t,s){const i=`components.directives.grade.submission-list.sortList.${t}`,n=`components.directives.grade.submission-list.sortButton.${s}`,a=`components.directives.grade.submission-list.aria-label.sortList.${t}`,o=`components.directives.grade.submission-list.${t}.link`;return{dropdownListLabel:this.translateKey(i),nameButtonLabel:this.translateKey(n),ariaLabel:this.translateKey(a),analyticsId:o,sort:e}}populateNameSortOptions(){this.nameSortOptions=[],this.nameSortOptions.push(this.getLocalizedNameSortOptions(te,"lastNameAsc","lastName")),this.nameSortOptions.push(this.getLocalizedNameSortOptions(se,"lastNameDesc","lastName")),this.nameSortOptions.push(this.getLocalizedNameSortOptions(ie,"firstNameAsc","firstName")),this.nameSortOptions.push(this.getLocalizedNameSortOptions(ne,"firstNameDesc","firstName"))}nameSortColumn(e){e===te?(this.selectedNameSortOption=this.nameSortOptions[0],this.nameSortType=H.a.ASCENDING):e===se?(this.selectedNameSortOption=this.nameSortOptions[1],this.nameSortType=H.a.DESCENDING):e===ie?(this.selectedNameSortOption=this.nameSortOptions[2],this.nameSortType=H.a.ASCENDING):e===ne&&(this.selectedNameSortOption=this.nameSortOptions[3],this.nameSortType=H.a.DESCENDING),this.sortParam=e,this.loadSubmissions(),this.sortAttributes=null}patchSubmissionRows(e){let t;var s,i;this.currentColumnGrades!==e&&this.allRows&&(s=e,i=this.currentColumnGrades,t=s.find(((e,t)=>{var s;return!(null===(s=null==e?void 0:e.api)||void 0===s?void 0:s.isUpdating)&&!i[t]||i[t].id===e.id&&i[t].isExempt!==e.isExempt}))),this.currentColumnGrades=e,t&&(this.scope.$root.$broadcast(g.b),function(e,t,s){const i=function(e,t){return e.find((e=>{var s,i,n;return(null==e?void 0:e.group)&&!t.groupAssociationId?e.group.memberships.find((e=>{var s;return(null===(s=null==e?void 0:e.ui)||void 0===s?void 0:s.gradeDetail.id)===(null==t?void 0:t.id)})):(null==t?void 0:t.id)===(null===(s=null==e?void 0:e.grade)||void 0===s?void 0:s.$pk)||(null==t?void 0:t.userId)===(null===(i=null==e?void 0:e.user)||void 0===i?void 0:i.id)&&(null==t?void 0:t.columnId)===(null===(n=null==e?void 0:e.Column)||void 0===n?void 0:n.id)}))}(e,t);if(!i)return;i.Column.grades.forEach((e=>ge(e,t))),(null==i?void 0:i.group)?function(e,t){const s=e.group.memberships.find((e=>{var s;return(null===(s=null==e?void 0:e.ui)||void 0===s?void 0:s.gradeDetail.id)===t.id}));s&&g.j(e.Column.courseId,e.Column.id,e.grade.groupAssociationId).then((i=>{ge(e.grade,i),ge(s.ui.gradeDetail,t)}))}(i,t):function(e,t,s){(null==e?void 0:e.grade)?ge(e.grade,t):function(e,t){const s={courseId:e.Column.courseId,membershipIds:[e.membership.id],columnIds:[e.Column.id],expand:"attempts",includeInProgress:"true"};t(s).then((t=>{g.i(e,t.bulkViewUsers[0])}))}(e,s)}(i,t,s.fetchBulkView)}(this.allRows,t,{fetchBulkView:e=>this.grade.fetchBulkView(e)}))}shouldAllowSorting(e){return(this.column.anonymousGrading||this.column.isAssignment()||this.column.isTest())&&!this.isGroup&&!(this.column.anonymousGrading&&e===oe)&&!(this.isExternalSubmission&&e===ae)}onClickSort(e){this.shouldAllowSorting(e)&&(this.sortAttributes=Object(V.b)(e,this.sortAttributes),this.setSortParam(),this.loadSubmissions())}setSortParam(){var e;if((null===(e=this.sortAttributes)||void 0===e?void 0:e.sortType)!==H.a.NONE)switch(this.sortAttributes.columnName){case oe:this.sortParam=this.sortAttributes.sortType===H.a.ASCENDING?"submissionStatus(asc)":"submissionStatus(desc)";break;case ae:this.column.anonymousGrading?this.sortParam=this.sortAttributes.sortType===H.a.ASCENDING?"needsGrading(asc)":"needsGrading(desc)":this.sortParam=this.sortAttributes.sortType===H.a.ASCENDING?"gradingStatus(asc)":"gradingStatus(desc)";break;case"grade":this.sortParam=this.sortAttributes.sortType===H.a.ASCENDING?"grade(asc)":"grade(desc)";break;case"postSort":this.sortParam=this.sortAttributes.sortType===H.a.ASCENDING?"postStatus(asc)":"postStatus(desc)"}else this.sortParam=this.column.anonymousGrading?void 0:ee;this.selectedNameSortOption=this.getDefaultNameSortOption(),this.nameSortType=H.a.NONE}getSortTypeValue(e){return Object(V.a)(e,this.sortAttributes)}getAriaLabelString(e){var t,s,i,n;return"studentStatusSort"===e&&this.contextCourse.course.isOrganization?(null===(t=this.sortAttributes)||void 0===t?void 0:t.sortType)&&(null===(s=this.sortAttributes)||void 0===s?void 0:s.columnName)===e?`components.directives.grade.organization.submission-list.aria-label.${e}.${this.sortAttributes.sortType}`:`components.directives.grade.organization.submission-list.aria-label.${e}.none`:(null===(i=this.sortAttributes)||void 0===i?void 0:i.sortType)&&(null===(n=this.sortAttributes)||void 0===n?void 0:n.columnName)===e?`components.directives.grade.submission-list.aria-label.${e}.${this.sortAttributes.sortType}`:`components.directives.grade.submission-list.aria-label.${e}.none`}isAssignmentOrTest(){return!this.column.anonymousGrading&&!this.isGroup&&(this.column.isAssignment()||this.column.isTest())}connectToRedux(){const e=this.$ngRedux.connect((e=>{const t={contentId:this.column.contentId,courseId:this.column.courseId,expand:"id,assignedContents",filter:{gradingStatus:this.selectedGradingFilter,submissionStatus:this.selectedStudentFilter}};return{groups:D.gc.group.getGroupsByContentIdAndQuery(e,t),gradebookGrades:D.gc.gradebookGrade.getGradebookGradesByColumnId(e,this.column.id)}}),(e=>Object(d.b)({refreshGroups:e=>D.X.group.loadByContentIdAndQuery(e)},e)))((({groups:e,gradebookGrades:t},{refreshGroups:s})=>{Object.assign(this,{groups:e,refreshGroups:s}),t&&this.patchSubmissionRows(t)}));this.scope.$on("$destroy",e)}};de=Object(i.a)([Object(i.c)(0,Object(z.b)("$location")),Object(i.c)(1,Object(z.b)("scope")),Object(i.c)(2,Object(z.b)("$q")),Object(i.c)(3,Object(z.b)(O.b)),Object(i.c)(4,Object(z.b)("element")),Object(i.c)(5,Object(z.b)("attrs")),Object(i.c)(6,Object(z.b)(l.b)),Object(i.c)(7,Object(z.b)(b.b)),Object(i.c)(8,Object(z.b)(v.m.serviceName)),Object(i.c)(9,Object(z.b)(g.n)),Object(i.c)(10,Object(z.b)(h.b)),Object(i.c)(11,Object(z.b)(p.serviceName)),Object(i.c)(12,Object(z.b)(w.b)),Object(i.c)(13,Object(z.b)(f.b)),Object(i.c)(14,Object(z.b)(S.b)),Object(i.c)(15,Object(z.b)(u.c)),Object(i.c)(16,Object(z.b)(c.e)),Object(i.c)(17,Object(z.b)(C.d)),Object(i.c)(18,Object(z.b)(A.b)),Object(i.c)(19,Object(z.b)(x.c)),Object(i.c)(20,Object(z.b)(I.b)),Object(i.c)(21,Object(z.b)("$ngRedux"))],de);class le extends de{constructor(){super(...arguments),this._totalItems=0}get mode(){return re.Individual}filterLoadedBulkViewRows(e){this.searchText=e,this.rows=this.allRows}filterRows(e){this.searchText=e,this.currentPage=0,this.loadSubmissions()}fetchMemberships(){let e={fields:"courseCardColorIndex,id,isAvailable,dueDateExceptionType,timeLimitExceptionType,role,courseRole,user.id,user.userName,user.avatar,user.familyName,user.givenName,user.otherName,user.preferredDisplayName,user.lastModifiedAt,userHasHidden,userId,isPreviewStudent",roleBucket:"taking",sort:this.sortParam,offset:this.currentPage*this.pageSize,limit:this.pageSize,includeCount:!0,q:this.searchText};this.sortParam!==ee&&(e.columnId=this.column.id);const t=this.getFilterString();return t&&(e={...e,filter:t,columnId:this.column.id}),this.course.memberships.$fetch(e).$asPromise().then((e=>(this._totalItems=e.paging.count||0,e)))}pageSizeChange(){this.loadSubmissions()}pageChange(){this.loadSubmissions()}sortSubmissionList(e){r.noop(),this.column.anonymousGrading&&!this.sortParam&&e.sort(((e,t)=>parseInt(e.user.ui.anonymousStudentId.replace("_"," "),10)-parseInt(t.user.ui.anonymousStudentId.replace("_"," "),10)))}isValueGradingStatusFilterKeyOptionsEnum(e){return"string"==typeof e}set totalItems(e){this._totalItems=e}get totalItems(){return this._totalItems}onChangePage(){const{scrollContainer:e,pageSizeSelector:t}=this.getContainerElementAndCurrentElement();e.animate({scrollTop:0},100,(()=>{this.onFinishRender=()=>{o.delay((()=>{m.b(e,t),this.onFinishRender=r.noop}),500)},this.pageChange()}))}canDownloadAll(){return this.gradebookPermissionService.canViewBulkDownload()&&this.column&&!this.column.anonymousGrading}getDownloadOverflowMenu(){return[{icon:"download",onClick:()=>{this.gradesBulkDownload()},labelKey:"components.directives.grade.submission-list.downloadAll"}]}gradesBulkDownload(){this.ultraState.goPeekState("grades-bulk-download",{columnId:this.column.id})}overflowMenuLabel(){return this.localizeService.translateSync({locale:this.localizeService.getLocale(this.scope),key:"components.directives.grade.submission-list.submissionListMenuLabel"})}changeFilter(e){this.anonymousSelectedGradingFilter!==e&&(this.anonymousSelectedGradingFilter=e,this.isValueGradingStatusFilterKeyOptionsEnum(e.value)&&this.ultraState.search("gradingStatus",e.value),this.currentPage=0,this.loadSubmissions())}}class ce extends de{get mode(){return re.Group}}class ue extends de{get mode(){return re.Discussion}}class be{constructor(e){this.$injector=e,this.restrict="E",this.template=_,this.scope={getColumn:"&column",getForumId:"&?forumId",groupId:"=?"},this.link=(e,t,s)=>{const i=e.getColumn();let n;n=i.isDiscussion()?ue:i.ui.content&&i.ui.content.isGroupContent?ce:le,e.submissionList=this.$injector.instantiate(n,{scope:e,element:t,attrs:s})}}}be.$inject=["$injector"];class me{constructor(e,t){this.timeout=e,this.$parse=t,this.restrict="A",this.link=(e,t,s)=>{e.$last&&this.timeout((()=>{const t=s[me.DIRECTIVE_NAME];t&&this.$parse(t)(e)}),e)}}}function ge(e,t){t.id===(null==e?void 0:e.$pk)&&t.columnId===e.columnId&&(e.isExempt=t.isExempt)}me.DIRECTIVE_NAME="bbOnFinishRender",me.$inject=[S.b,"$parse"],r.module(J,[l.a,c.b,g.m,p.moduleName,w.a,f.a,u.b,k.a,y.a,T.a,O.a,x.b,I.a,L,E,K.a]).directive("bbSubmissionList",["$injector",e=>e.instantiate(be)]).directive(me.DIRECTIVE_NAME,["$injector",e=>e.instantiate(me)])},"5XZZ":function(e,t){e.exports='<div class="assessment-question">\n  <fieldset>\n    <div class="question-header question-header-review"\n         ng-class="{\'has-question-title\': assessmentQuestion.questionConfig.hasQuestionCountTitle, \'is-read-only\': !isPrivileged() || readOnly()}"\n         ng-if="assessmentQuestion.questionConfig.hasPoints || assessmentQuestion.questionConfig.hasQuestionCountTitle">\n      <div>\n          <bb-svg-icon ng-if="assessmentQuestion.canShowCorrectAnswerRelatedDetail()"\n                       class="question-indicator {{::assessmentQuestion.getCorrectnessColor()}}"\n                       aria-label="{{::assessmentQuestion.getCorrectnessName()}}"\n                       size="medium"\n                       icon="{{::assessmentQuestion.getCorrectnessIcon()}}"></bb-svg-icon>\n          <legend class="question-label" ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle" bb-translate="components.directives.assessment-question.question-title" translate-values="{index: assessmentQuestion.questionAttempt.visibleQuestionNumber}"></legend>\n          \x3c!--Question goal --\x3e\n          <a ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle && assessmentQuestion.hasGoals()" href="javascript:void(0);"\n            ng-click="assessmentQuestion.openQuestionGoals()"\n            class="question-goal"\n            bb-translate-attrs="{\'aria-label\':\'components.directives.assessment-question.view-goal\', \'title\':\'components.directives.assessment-question.view-goal\'}"\n            analytics-id="components.directives.assessmentQuestion.viewGoal.link">\n            <bb-svg-icon size="medium" icon="goal"></bb-svg-icon>\n          </a>\n          <span class="question-full-credit-label"\n                bb-translate\n                ng-if="assessmentQuestion.questionAttempt.question.fullCredit && gradedQuestionAttempt.points && !isSmallBreakpoint">\n                components.directives.attempt-canvas.freeform-response.grade.question.full-credit-given\n          </span>\n          <button\n              ng-if="::assessmentQuestion.isExtraCredit()" bb-tooltip enhanced-tooltip="true" tooltip-position="bottom" \n              analytics-id="components.directives.assessment-question.extra.credit.icon.button"\n              bb-translate-attrs="{title: \'components.directives.assessment-question.extraCredit.tooltipText\'}"\n              class="wrapper-extra-credit-icon"\n              aria-label="{{::assessmentQuestion.getExtraCreditAriaLabel()}}">\n              <bb-ui-icon-medium-kudos class="extra-credit-icon" />\n          </button>\n          <bb-question-grade graded-question-attempt="gradedQuestionAttempt"\n                            hide-grade="!assessmentQuestion.canViewGrades"\n                            input-id="{{::assessmentQuestion.elementId}}"\n                            is-privileged="false"\n                            ng-if="assessmentQuestion.questionConfig.hasPoints && assessmentQuestion.questionAttempt.isScoreVisible">\n          </bb-question-grade>\n      </div>\n      <div ng-if="isSmallBreakpoint" class="question-grade-group">\n        <span class="question-full-credit-label" bb-translate\n          ng-if="::assessmentQuestion.questionAttempt.question.fullCredit && gradedQuestionAttempt.points">components.directives.attempt-canvas.freeform-response.grade.question.full-credit-given\n        </span>\n      </div>\n    </div>\n    <div class="question-content" ng-show="assessmentQuestion.questionSpecificTemplateReady"></div>\n  </fieldset>\n</div>\n'},"7cYF":function(e,t,s){"use strict";s.d(t,"e",(function(){return P})),s.d(t,"c",(function(){return R})),s.d(t,"b",(function(){return j})),s.d(t,"a",(function(){return $})),s.d(t,"d",(function(){return N}));s("aSyE"),s("VcPJ");var i=s("nsO7"),n=s("Llzl"),a=s("IbyE"),o=s("+O05"),r=s("k9iv"),d=s("o5Lu"),l=s("X/qj"),c=s("0JpG"),u=s("5RJJ"),b=s("pjml"),m=s("5uPl"),g=s("IjED"),h=s("lEL+"),p=s("TnpK"),v=s("Ed3w"),f=s("DYK3"),w=s("3Nzc"),S=s("yC9S"),k=s("p7NW"),C=s("nmzr"),A=s("R4kC"),y=s("fGDP"),T=s("cpZm"),O=s("15AK"),x=s("wtKk"),I=s("zGdY"),G=s("e0uO"),L=s("ohO4");const P="trigger_question_regrading-task",R="open-assessment-feedback-editor",j="getSubmissionGradingBlockingStatus";class ${constructor(e,t,s,i,n,r,d,l,c,u,b,m,g,h,p,A,I,L){this.$rootScope=e,this.$scope=t,this.course=s,this.column=i,this.content=n,this.errorModalService=r,this._gradeService=d,this.gradebookPermissionService=l,this.bbLocalize=c,this.membershipService=u,this.timeout=b,this.ultraState=m,this.UserModel=g,this.originalityReportService=h,this.slideoutPanelService=p,this.scheduleTask=A,this.submissionListService=I,this.featureFlagService=L,this.AssessmentCanvasMode=G.a,this.namesCarousel=Object.create(null),this.contentCarousel=Object.create(null),this.isFeedbackDirty=!1,this.isFeedbackEmpty=!0,this.attemptsWereDeleted=!1,this.isLoading=!0,this.isExternalSubmissions=!1,this.saveAsOverride=!0,this.isAnyQuestionEditing=!1,this.isQuestionRegradingBlocked=!1,this.confirmedClose=!1,this.showBanner=!1,this.isGradingBarAttemptNavigationEnabled=!1,this.gradedQuestionAttemptsByAttemptId=Object.create(null),this.hideBanner=()=>{this.$scope.$apply((()=>{this.showBanner=!1}))},this.regradingNotifier=e=>{e||this.$rootScope.$broadcast(w.a)},this.doSlide=()=>{this.$scope.$emit(x.b),this.isFeedbackDirty=!1,this.namesCarousel.slide(this.slideOffset)},this.overrideSlideClick=e=>{const t=e-this.carouselHelper.currentSlideIndex;this.transitionTo(t)},this.canViewGrades=this.gradebookPermissionService.canViewGrades(),this.canViewAttempts=this.gradebookPermissionService.canViewAttempts(),this.originalityReportService.setCourseContent(n,!0),this.isExternalSubmissions=o.a.isExternalSubmissionsAssessment(n),this.isAnyQuestionEditing=s.isComplete(),this.submissionGradingNavigationBlocker={navigationPromise:null};const R=m.params;this.isOpenFromGridView=R.gradebookView===y.b.Grid,this.isOpenFromStudentList=R.gradebookView===y.b.List&&R.listViewType===T.b.id,this.membershipId=R.membershipId,this.$scope.$on("bb-update-question-grade",((e,t)=>{this._onUpdateQuestionGrade(t)})),this.column.hasRubricAssociation()&&S.b.OnRootScope(this.$scope,k.e,(()=>this.reloadGrade())),this.shouldQueryRegradingTask(s,n)&&(this.scheduleTask.scheduleTask({courseId:s.id,taskName:v.a.QuestionRegrading,scope:t,delay:1e4,notifier:this.regradingNotifier}),this.isRefFromAssessment?t.$on(P,(()=>{this.isAnyQuestionEditing?this.isQuestionRegradingBlocked=!0:this.reloadGrade(!0)})):t.$on(w.a,(()=>{this.isAnyQuestionEditing?this.isQuestionRegradingBlocked=!0:this.reloadGrade(!0)})),t.$on(f.c,((e,s)=>{t.$broadcast(f.b,s),this.isAnyQuestionEditing=!0})),t.$on(f.i,((e,s)=>{this.isAnyQuestionEditing=!1,this.isQuestionRegradingBlocked&&(s!==f.d.CANCEL&&s!==f.d.SAVE_WITHOUT_REGRADING||this.reloadGrade(!0),this.isQuestionRegradingBlocked=!1),t.$applyAsync()}))),t.$on("$stateChangeStart",((e,t)=>{t.name.indexOf(C.x.SUBMISSION_GRADING)<0&&(this.attemptsWereDeleted&&this.$scope.$root.$broadcast("refresh-attempt-count"),!this.isAnyQuestionEditing||this.course.isComplete()||this.confirmedClose||(e.preventDefault(),this.$scope.$broadcast("show-confirmation","submission-question-regrading")))})),t.$on("$stateChangeSuccess",((e,t)=>{this.slideoutPanelService.setSlideoutPanelState()})),this.unsubscribeOnRowsUpdated=this.submissionListService.addOnRowsUpdated(s.id,this.column.id,this.onSubmissionListRowsUpdated),t.$on("$destroy",(()=>{this.unsubscribeOnRowsUpdated(),this.originalityReportService.clearReport()})),t.namesCarouselInitialized=()=>!!this.namesCarousel.id||void 0,t.$watch("::namesCarouselInitialized()",(()=>{t.namesCarouselInitialized()&&this.onNamesCarouselInit()})),t.$on(O.ASSESSMENT_FEEDBACK_CHANGED,((e,t,s)=>{this.isFeedbackDirty=t,this.isFeedbackEmpty=s})),t.$on(O.ASSESSMENT_FEEDBACK_SAVED,(()=>this.isFeedbackDirty=!1)),this.$scope.$on("QUESTION-GRADE-PILL-EDITED",((e,t,s)=>{var i,n;(null===(i=this.carouselHelper)||void 0===i?void 0:i.currentRow.grade.isOverrideGrade())&&!(null===(n=this.carouselHelper)||void 0===n?void 0:n.currentRow.grade.isPastDueZero())&&t===this.column.id&&(this.showBanner=!0)})),this.$scope.$on("OVERRIDE-UNDONE",((e,t)=>{t.columnId===this.column.id&&(this.showBanner=!1)})),L.createWaiter(a.r.GradingBarAttemptNavigation).then((e=>{this.isGradingBarAttemptNavigationEnabled=e}))}get bannerMessage(){return this.getLocalizedTextByKey("components.directives.grade.grading-bar.banner-message")}getLocalizedTextByKey(e){return this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:e,noWrap:!0})}showNextPeerVisibilityFTUE(){return!1}onFeedbackIconClick(){this.$scope.$broadcast(R)}onNamesCarouselInit(){this.namesCarousel.registerSlideStatusUpdater({className:{whenTrue:"as-prev",whenFalse:""},scopeVarName:"asPrevButton",predicate:e=>e.slideIndex>=0&&e.slideIndex===e.currentSlide-1}),this.namesCarousel.registerSlideStatusUpdater({className:{whenTrue:"as-next",whenFalse:""},scopeVarName:"asNextButton",predicate:e=>e.slideIndex===e.currentSlide+1&&e.slideIndex<e.totalSlides})}shouldQueryRegradingTask(e,t){return!e.isComplete()&&!t.isScorm()}get isRefFromAssessment(){return this.ultraState.current.name.indexOf(".peek.gradebook-item.assessment")>0}isSlidePanelOpen(){return this.slideoutPanelService.isOpen()}getAttemptDetail(e=this.carouselHelper.currentRow){return this.getAttempt(e)?this.getAttempt(e).getToolAttemptDetailItem(this.column.scoreProviderHandle):null}showAttemptCanvas(){const e=this.getAttempt(this.carouselHelper.currentRow);return!(!(null==e?void 0:e.toolAttemptDetail)||(null==e?void 0:e.isInProgress()))}hasContent(e){if(!e)return!1;const t=e.getToolAttemptDetailItem(this.column.scoreProviderHandle);return t&&t.assessment&&t.assessment.questionCount>0}canRenderSubmission(){return!(!(this.carouselHelper&&this.carouselHelper.ready&&this.carouselHelper.currentRow)||!this.isAttemptSet())}loadGradedQuestionAttempts(e){return this.course.gradebook.attempts.$buildRaw(e).assessment.gradedQuestionAttempts.$refresh({expand:"questionAttempt.question,questionAttempt.question.usageCount,questionAttempt.question.sourceInfo,questionAttempt.answerCorrectness"}).$then((t=>{t.setPostStatusAndGroupAttemptId(e),this.gradedQuestionAttemptsByAttemptId[e.id]=t}))}setSaveAsOverride(){if(this.column&&this.column.isScorm())return void(this.saveAsOverride=!1);if(this.column&&this.column.hasRubricAssociation())return void(this.saveAsOverride=!0);const e=this.getAttemptDetail();e&&(this.saveAsOverride=e.assessment.hasAnswerableQuestions)}getQuestionsForAttempt(){const e=this.getAttempt(this.carouselHelper.currentRow);if(!n.isUndefined(e))return o.a.getQuestionsForAttempt(e,this.column.scoreProviderHandle)}_onUpdateQuestionGrade(e){let t=0;const s=this.gradedQuestionAttempts,n=Object(i.findIndex)(s,(t=>t.questionAttempt.id===e.questionAttempt.id));if(-1===n)return;s[n]=e;const a=this.getAttemptDetail();s.forEach((e=>{e.questionAttempt.attemptStatus===I.l.Completed&&t++})),t!==s.length&&a.status!==I.l.Completed||this.reloadGrade()}closeWithoutSaving(){this.confirmedClose=!0,this.ultraState.leavePeekState(this.ultraState.current.name)}showOverflowMenu(){return this.gradebookPermissionService.canDelegatedEnterAttemptFeedback(this.column,this.getAttempt(this.carouselHelper.currentRow))&&!this.isSlidePanelOpen()}isPeerGradingAndAnonymousUser(e){return!1}transitionTo(e){0!==e&&(this.showBanner=!1,this.slideOffset=e,this.submissionGradingNavigationBlocker={navigationPromise:null},this.$scope.$broadcast(j,this.submissionGradingNavigationBlocker),this.submissionGradingNavigationBlocker.navigationPromise?this.submissionGradingNavigationBlocker.navigationPromise.then((()=>{this.doSlide()})):this.doSlide())}get hasRubricAssociation(){return this.column.hasRubricAssociation()}get isPeerReviewer(){return!1}}$.$inject=["$rootScope","$scope","currentCourse","currentColumn","currentContent",r.c,d.n,l.b,c.serviceName,u.b,h.b,p.d,b.Jb.serviceName,m.b,g.b,v.c,A.b,L.b];class N{constructor(e,t){this.ready=!1,this.submissionGradingController=e,this.mergeRows(t)}mergeRows(e){const t=e.filter((e=>null!=e.grade&&e.attemptCount>0)),s=this.rows?this.rows.reduce(((e,t)=>(e[t.membership&&t.membership.id]=t,e)),{}):{};t.forEach(((e,i)=>{const n=e.membership&&e.membership.id;n in s&&(t[i]=s[n])})),this.rows=t,this.currentSlideIndex=Object(i.findIndex)(this.rows,(e=>this.submissionGradingController.findIndex(e))),this.currentSlideIndex<=0&&(this.currentSlideIndex=0)}updateRows(e){const t=e.filter((e=>null!=e.grade)),s=Object(i.findIndex)(t,(e=>this.submissionGradingController.findIndex(e))),n=Object(i.findIndex)(this.rows,(e=>this.submissionGradingController.findIndex(e)));-1!==s&&-1!==n&&(this.rows[n].grade=t[s].grade,this.rows[n].attemptCount=t[s].attemptCount,this.rows[n].grade.ui.groupAttempt=t[s].grade.groupAttempts[t[s].grade.groupAttempts.length-1]),this.currentSlideIndex=Object(i.findIndex)(this.rows,(e=>this.submissionGradingController.findIndex(e))),this.currentSlideIndex<=0&&(this.currentSlideIndex=0)}disableSliderNavigation(){return this.submissionGradingController.isSlidePanelOpen()}showPrevArrow(){return this.currentSlideIndex>0&&!this.disableSliderNavigation()}showNextArrow(){return this.currentSlideIndex<this.rows.length-1&&!this.disableSliderNavigation()}isPrevious(e){return e>=0&&e===this.currentSlideIndex-1}isCurrent(e){return e===this.currentSlideIndex}isNext(e){return e===this.currentSlideIndex+1&&e<this.rows.length}updateSlide(e){this.submissionGradingController.isAnyQuestionEditing=!1,e>=0&&e<this.rows.length&&this.currentSlideIndex!==e&&(this.currentRow.hasBeenViewed=!0,this.currentSlideIndex=e,this.submissionGradingController.onSlideUpdate())}findRowByGradeId(e){return this.rows.find((t=>t.grade.id===e))}findRowIndexByGrade(e){return this.rows.findIndex((t=>t.grade.id===e.id))}updateRowGradeByGrade(e){const t=this.findRowIndexByGrade(e);this.rows[t].grade=e}get initialSlide(){return this.currentSlideIndex}get currentRow(){return this.rows[this.currentSlideIndex]}wasDeleted(){return this.rows&&0===this.rows.length||!this.currentRow||this.currentRow&&this.currentRow.hasNoSubmissions()||this.currentRow.grade.groupAssociationId&&-1===this.getNextAttemptIndex()}getNextAttemptIndex(){var e,t;const s=null===(t=null===(e=this.currentRow)||void 0===e?void 0:e.grade)||void 0===t?void 0:t.groupAttempts;for(let e=s.length-1;e>=0;e--)if(!s[e].isInProgress())return e;return-1}}},CME4:function(e,t){e.exports='<div class="assessment-question" ng-class="\'js-question-type-\' + assessmentQuestion.getType()">\n  <form name="questionForm"\n        bb-autosave\n        save-func="assessmentQuestion.persist()"\n        validation-func="assessmentQuestion.validate()"\n        auto-save-context-id="{{::questionAttempt.id}}"\n        auto-save-context-area="{{::assessmentQuestion.autoSaveContextArea}}"\n        delay-autosave="assessmentQuestion.suppressAutosave"\n        use-leading-edge="true"\n        use-save-numbers="true"\n        novalidate>\n    <fieldset role="presentation">\n      <div class="question-header"\n           ng-class="{\'has-question-title\': assessmentQuestion.questionConfig.hasQuestionCountTitle, \'is-read-only\': !isPrivileged() || readOnly()}"\n           ng-if="assessmentQuestion.questionConfig.hasPoints || assessmentQuestion.questionConfig.hasQuestionCountTitle">\n        <legend\n          class="question-label"\n          ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle"\n          bb-translate="components.directives.assessment-question.question-title"\n          translate-values="{index: questionAttempt.visibleQuestionNumber}"\n          role="presentation"\n        ></legend>\n\n        \x3c!--Question goal --\x3e\n        <a ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle && assessmentQuestion.hasGoals()" href="javascript:void(0);"\n           ng-click="assessmentQuestion.openQuestionGoals()"\n           class="question-goal"\n           bb-translate-attrs="{\'aria-label\':\'components.directives.assessment-question.view-goal\', \'title\':\'components.directives.assessment-question.view-goal\'}"\n           analytics-id="components.directives.assessment-question.view-goal.link">\n          <bb-svg-icon size="medium" icon="goal"></bb-svg-icon>\n        </a>\n        <button ng-if="::assessmentQuestion.isExtraCredit()" bb-tooltip enhanced-tooltip="true" tooltip-position="bottom"\n          bb-translate-attrs="{title: \'components.directives.assessment-question.extraCredit.tooltipText\'}"\n          class="wrapper-extra-credit-icon" analytics-id="assessments.directives.assessment-question.extra.credit.icon.button"\n          aria-label="{{::assessmentQuestion.getExtraCreditAriaLabel()}}">\n          <bb-ui-icon-medium-kudos class="extra-credit-icon" />\n        </button>\n        <div class="point-value" ng-if="::assessmentQuestion.questionConfig.hasPoints"\n          bb-translate="components.directives.assessment-question.number-of-points.plural"\n          translate-values="{numberOfPoints: questionAttempt.question.points}"></div>\n      </div>\n\n      <div class="question-content"></div>\n    </fieldset>\n  </form>\n</div>\n'},DDBr:function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s("Llzl"),n=s("0JpG"),a=s("kwLz"),o=s("1ZbL");const r="ultra.components.directives.feedback.feedbackList",d={Class:a.b,bindingNames:["analyticsId","configProps","secondaryGradersFeedback"],renderLocalized:!0};i.module(r,[n.moduleName]).component("bbFeedbackList",Object(o.a)(d))},DYK3:function(e,t,s){"use strict";var i=s("D57K"),n=(s("sZYy"),s("ykC+"),s("71td")),a=s("nsO7"),o=s("e0uO"),r=s("+sRu"),d=s("IaSh"),l=s("vYaK"),c=s("RNuw"),u=s("X/qj"),b=s("yC9S"),m=s("0JpG"),g=s("e6jQ"),h=s("lEL+"),p=s("TnpK"),v=s("Qbdf"),f=s("Fvsw"),w=s("Ed3w"),S=s("cs5G"),k=s("ohO4"),C=s("jx5I"),A=s("7O4Y"),y=s("5MwF"),T=s("AoSC"),O=s("X8JP"),x=s("vhkR"),I=s("aHpC"),G=s("Q/M7"),L=s("bd9L"),P=s("AuQm"),R=s("IbyE"),j=s("zGdY"),$=s("3Nzc"),N=s("Y/dt"),E=s("CME4"),F=s("y0xW"),D=s("5XZZ"),q=s("+O05");s.d(t,"c",(function(){return M})),s.d(t,"b",(function(){return Q})),s.d(t,"i",(function(){return U})),s.d(t,"d",(function(){return _})),s.d(t,"a",(function(){return z})),s.d(t,"h",(function(){return H})),s.d(t,"e",(function(){return K})),s.d(t,"f",(function(){return Z})),s.d(t,"g",(function(){return X}));const M="question-attempt_exit-question-regrading-editing-mode",Q="question-attempt_close-other-editing-question",U="question-attempt_save-or-cancel-regrading-question";var _;!function(e){e.CANCEL="cancel",e.SAVE="save",e.SAVE_WITHOUT_REGRADING="save-without-regrading"}(_||(_={}));class z{constructor(e){this.$injector=e}createQuestion(e,t,s){return{title:e,questionText:{},points:10,positionBefore:t.positionBefore,positionAfter:t.positionAfter}}getHandlerByMode(e,t,s){switch(e.mode().toString()){case o.a.QuestionReview.toString():return this.getQuestionReviewHandler(e,t,s);case o.a.AttemptAuthoring.toString():return this.getAttemptAuthoringHandler(e,t,s);case o.a.AttemptGrading.toString():return this.getAttemptGradingHandler(e,t,s);case o.a.AttemptReview.toString():return this.getAttemptReviewHandler(e,t,s);default:throw new Error("Invalid mode provided")}}getQuestionReviewHandler(e,t,s){throw new Error("This is an abstract method. It must be implemented in the subclass!")}getAttemptAuthoringHandler(e,t,s){throw new Error("This is an abstract method. It must be implemented in the subclass!")}getAttemptGradingHandler(e,t,s){throw new Error("This is an abstract method. It must be implemented in the subclass!")}getAttemptReviewHandler(e,t,s){throw new Error("This is an abstract method. It must be implemented in the subclass!")}}z.$inject=["$injector"];let B=class{constructor(e,t,s,i,n,a,o,r,d){var l;this.$compile=e,this.$window=t,this.attrs=s,this.element=i,this.gradebookPermissionService=n,this.scope=a,this.timeout=o,this.localizeService=r,this.settingsDefault=d,this.canEnterGrades=!1,this.canViewGrades=!1,this.elementId="assessment-question_"+g.a(),this.formName=this.elementId+"_form",this.questionConfig={hasPoints:!0,hasQuestionCountTitle:!0,points:10,showQuestionControls:!0},this.questionSpecificTemplateReady=!1,this.canEnterGrades=this.gradebookPermissionService.canEnterGrades(),this.canViewGrades=this.gradebookPermissionService.canViewGrades(),d&&(this.questionConfig=d),this.questionAttempt=null===(l=this.scope.gradedQuestionAttempt)||void 0===l?void 0:l.questionAttempt,b.b.OnWindow("drop.document dragover.document",(e=>{e.preventDefault()}),a)}insertQuestionSpecificTemplate(e){this.timeout((()=>{const t=n(e),s=this.element.find(".question-container");s.length>0?t.insertAfter(s):this.element.find(".question-content").prepend(t),this.$compile(t)(this.scope),this.questionSpecificTemplateReady=!0}),this.scope,0,!1)}translateExtraCreditAriaLabel(e,t){return this.localizeService.translateSync({key:e,params:{questionPosition:t},noWrap:!0,locale:this.localizeService.getLocale(this.scope)})}translateQuestionTitle(e){return this.localizeService.translateSync({key:"components.directives.assessment-question.question-title",params:{index:e},locale:this.localizeService.getLocale(this.scope)})}getExtraCreditAriaLabel(){var e,t,s,i,n;return this.translateExtraCreditAriaLabel("components.directives.assessment-question.extraCredit.ariaLabelText",`${null!==(n=null!==(t=null===(e=null==this?void 0:this.questionAttempt)||void 0===e?void 0:e.visibleQuestionNumber)&&void 0!==t?t:null===(i=null===(s=null==this?void 0:this.scope)||void 0===s?void 0:s.questionAttempt)||void 0===i?void 0:i.visibleQuestionNumber)&&void 0!==n?n:""}`)}};B.$inject=[],B=Object(i.a)([Object(i.c)(0,Object(I.b)("$compile")),Object(i.c)(1,Object(I.b)("$window")),Object(i.c)(2,Object(I.b)("attrs")),Object(i.c)(3,Object(I.b)("element")),Object(i.c)(4,Object(I.b)(u.b)),Object(i.c)(5,Object(I.b)("scope")),Object(i.c)(6,Object(I.b)(h.b)),Object(i.c)(7,Object(I.b)(m.serviceName))],B);let V=class extends B{constructor(e,t,s,i,n,a,o,r,d){var l;super(e,t,s,i,n,a,o,r,d),this.$compile=e,this.$window=t,this.attrs=s,this.element=i,this.gradebookPermissionService=n,this.scope=a,this.timeout=o,this.localizeService=r,this.settingsDefault=d,this.attempt=this.scope.attempt,this.toolAttemptDetailItem=null===(l=this.attempt)||void 0===l?void 0:l.getToolAttemptDetailItemEx(R.Q.Test)}getAnswerResult(){return this.isFullCredit()?d.y.FullCredit:this.isCorrect()?d.y.Correct:this.isPartiallyCorrect()?d.y.Partial:d.y.Incorrect}getAnswerStyles(e,t,s){return Object(A.a)({[r.a.IsSelected]:e,[r.a.AnswerNotSelected]:!e&&!t,[r.a.CorrectAnswerSelected]:s&&e&&t,[r.a.CorrectAnswerNotSelected]:s&&!e&&t,[r.a.IncorrectAnswerSelected]:s&&e&&!t})}getAutomatedQuestionFeedback(){var e,t;return null===(t=null===(e=this.questionAttempt)||void 0===e?void 0:e.automatedFeedback)||void 0===t?void 0:t.rawText}getCorrectnessColor(){return this.isCorrect()&&(this.isFullCredit()||this.isCorrectByModifiedGrade())?"correct":this.isPartialCreditbyModifiedGrade()?"partial":"incorrect"}isCorrectByModifiedGrade(){return this.scope.gradedQuestionAttempt.points>=this.questionAttempt.question.points}isPartialCreditbyModifiedGrade(){return this.scope.gradedQuestionAttempt.points>0&&this.scope.gradedQuestionAttempt.points<this.questionAttempt.question.points}getCorrectnessIcon(){return this.isCorrect()&&(this.isFullCredit()||this.isCorrectByModifiedGrade())?"check-circle":this.isPartialCreditbyModifiedGrade()?"partial-credit":"close-circle"}getCorrectnessName(){return this.isCorrect()&&(this.isFullCredit()||this.isCorrectByModifiedGrade())?this.localizeService.translateSync({key:"components.directives.assessment-question.status.correct",locale:this.localizeService.getLocale(this.scope)}):this.isPartialCreditbyModifiedGrade()?this.localizeService.translateSync({key:"components.directives.assessment-question.status.partial",locale:this.localizeService.getLocale(this.scope)}):this.localizeService.translateSync({key:"components.directives.assessment-question.status.incorrect",locale:this.localizeService.getLocale(this.scope)})}isCorrect(){return this.questionAttempt.correct}wasAnsweredLate(){var e;return!(!(null===(e=this.toolAttemptDetailItem)||void 0===e?void 0:e.needAttention())||!this.isAnsweredAfterSoftTimeLimit())}isAnsweredAfterSoftTimeLimit(){return this.toolAttemptDetailItem.isAnsweredAfterSoftTimeLimit(this.questionAttempt)}isFullCredit(){return this.questionAttempt.question.fullCredit}isPartiallyCorrect(){return this.questionAttempt.partiallyCorrect}};V.$inject=[],V=Object(i.a)([Object(i.c)(0,Object(I.b)("$compile")),Object(i.c)(1,Object(I.b)("$window")),Object(i.c)(2,Object(I.b)("attrs")),Object(i.c)(3,Object(I.b)("element")),Object(i.c)(4,Object(I.b)(u.b)),Object(i.c)(5,Object(I.b)("scope")),Object(i.c)(6,Object(I.b)(h.b)),Object(i.c)(7,Object(I.b)(m.serviceName))],V);let H=class extends B{constructor(e,t,s,i,n,a,o,r,d,l,c){super(e,s,i,n,a,o,r,d,c),this.$compile=e,this.$sce=t,this.$window=s,this.attrs=i,this.element=n,this.gradebookPermissionService=a,this.scope=o,this.timeout=r,this.localizeService=d,this.ultraState=l,this.settingsDefault=c,this.question=this.scope.question,n.append(e(D)(o))}};H.$inject=[],H=Object(i.a)([Object(i.c)(0,Object(I.b)("$compile")),Object(i.c)(1,Object(I.b)("$sce")),Object(i.c)(2,Object(I.b)("$window")),Object(i.c)(3,Object(I.b)("attrs")),Object(i.c)(4,Object(I.b)("element")),Object(i.c)(5,Object(I.b)(u.b)),Object(i.c)(6,Object(I.b)("scope")),Object(i.c)(7,Object(I.b)(h.b)),Object(i.c)(8,Object(I.b)(m.serviceName)),Object(i.c)(9,Object(I.b)(p.d))],H);let K=class extends B{constructor(e,t,s,i,n,a,o,r,d,l,u){super(e,t,s,n,a,r,d,o,u),this.$compile=e,this.$window=t,this.attrs=s,this.CourseModel=i,this.element=n,this.gradebookPermissionService=a,this.localizeService=o,this.scope=r,this.timeout=d,this.ultraState=l,this.settingsDefault=u,this.readOnly=!1,this.isRetryPending=!1,this.attemptIsDirty=!1,this.suppressAutosave=!1,this.scope.assessmentAttempt=this.getAssessmentAttemptView(this.scope),n.append(e(E)(r)),r.questionAttempt.question.ui={...r.questionAttempt.question.ui,positionId:this.elementId},r.$emit("bb-register-question-attempt-handlers",(()=>this.attemptIsDirty),(()=>this.scope.questionAttempt),this.prepareGivenAnswer),c.a(this.scope,this.scope.questionForm,(()=>{this.attemptIsDirty=!0})),this.attemptQuestion=this.scope.questionAttempt.question,this.questionTitle=this.translateQuestionTitle(this.scope.questionAttempt.visibleQuestionNumber),this.autoSaveCount=0,this.element.attr("autosaved",this.autoSaveCount),r.$on("bb-assessment-attempt-question-readonly",((e,t)=>{this.readOnly=t})),r.$on(N.f,(()=>{this.isRetryPending&&this.scope.$broadcast(L.a)})),this.initializeGivenAnswer()}get autoSaveContextArea(){return P.c.Assessments}isFirstQuestionAttemptOfType(){var e,t;return!!(null===(t=null===(e=this.scope.assessmentAttempt)||void 0===e?void 0:e.questionAttemptView)||void 0===t?void 0:t.isFirstQuestionAttemptOfType(this.scope.questionAttempt.questionType,this.scope.questionAttempt.id))}getAssessmentAttemptView(e){return null===e?null:e.assessmentAttempt?e.assessmentAttempt:this.getAssessmentAttemptView(e.$parent)}prepareGivenAnswer(e){}onPersistFinished(){}persist(){if(this.scope.questionAttempt.questionType!==j.Qb.PresentationOnly)return this.prepareGivenAnswer(this.scope.questionAttempt),this.scope.questionAttempt.$patch(["questionType","givenAnswer","givenAnswers"]).$allow([j.S.Forbidden]).$asPromise().then((e=>{var t,s,i,n;const a=e.$response;if((null==a?void 0:a.status)!==j.S.Forbidden||(null===(t=null==a?void 0:a.data)||void 0===t?void 0:t.code)!==j.i.AttemptCompletedOrForceCompletion)return this.isRetryPending=!1,this.incrementAutoSaveCount(),this.setDirtyAndUpdateGivenAnswer(e),null===(n=(i=this.scope.questionAttempt).onAnswerPersisted)||void 0===n||n.call(i,this.scope.questionAttempt),e;null===(s=this.scope.assessmentAttempt)||void 0===s||s.showAlreadySubmittedDialog()}),(e=>{throw-1===e.$response.status&&(this.isRetryPending=!0),e})).finally((()=>{this.onPersistFinished()}))}validate(){return!0}getCurrentForm(){return this.scope.questionForm}getType(){return this.attemptQuestion.questionType}hasGoals(){return this.attemptQuestion&&this.attemptQuestion.alignedGoals&&this.attemptQuestion.alignedGoals.length}incrementAutoSaveCount(){this.element.attr("autosaved",this.autoSaveCount+=1)}openQuestionGoals(){this.ultraState.goPeekState("question-goal-alignment-for-student",{questionId:this.scope.questionAttempt.questionId,questionIndex:this.scope.questionAttempt.visibleQuestionNumber})}isExtraCredit(){var e,t,s;return null!==(s=(null===(e=this.scope.questionAttempt.question)||void 0===e?void 0:e.extraCredit)&&!(null===(t=this.scope.questionAttempt.question)||void 0===t?void 0:t.externallyReferencedQuestion))&&void 0!==s&&s}};K.$inject=[],K=Object(i.a)([Object(i.c)(0,Object(I.b)("$compile")),Object(i.c)(1,Object(I.b)("$window")),Object(i.c)(2,Object(I.b)("attrs")),Object(i.c)(3,Object(I.b)(l.serviceName)),Object(i.c)(4,Object(I.b)("element")),Object(i.c)(5,Object(I.b)(u.b)),Object(i.c)(6,Object(I.b)(m.serviceName)),Object(i.c)(7,Object(I.b)("scope")),Object(i.c)(8,Object(I.b)(h.b)),Object(i.c)(9,Object(I.b)(p.d))],K);let Z=class extends V{constructor(e,t,s,i,n,a,o,r,d,l,c,u,b,m,g,h,p,v,f){super(e,s,i,n,a,o,r,d,f),this.$compile=e,this.$sce=t,this.$window=s,this.attrs=i,this.element=n,this.gradebookPermissionService=a,this.scope=o,this.timeout=r,this.localizeService=d,this.contextCourse=l,this.$ngRedux=c,this.scheduleTask=u,this.ltiService=b,this.CloudStorageIntegrationModalService=m,this.contextService=g,this.allyService=h,this.featureFlagService=p,this.fileUploadSettingsService=v,this.settingsDefault=f,this.isEditing=!1,this.refreshingAnswers=!1,this.saveRegradingQuestion=async(e,t)=>{Object(T.E)(e,t)?this.cancelOrSaveEditingQuestion(_.SAVE):this.cancelOrSaveEditingQuestion(_.SAVE_WITHOUT_REGRADING),this.questionAttempt.question=t,void 0===this.questionAttempt.question.ui&&(this.questionAttempt.question.ui={}),this.questionAttempt.question.ui.prevQuestion=e,this.updateQuestionView(),this.scope.$applyAsync(),this.timeout((()=>{this.refreshingAnswers=!1}),this.scope,0);const s=t.sourceInfo?t.sourceInfo.id:this.scope.assessmentId();return Object(R.Xb)(e,t,{assessmentId:s,courseId:this.contextCourse.courseId}).then((s=>{if(Object(T.E)(e,t)){const e=()=>{this.scope.$root.$broadcast($.a)};this.scheduleTask.scheduleTask({courseId:this.contextCourse.courseId,taskName:w.a.QuestionRegrading,scope:this.scope.$root,notifier:e,delay:1e4},!1)}return s})).catch((()=>{this.questionAttempt.question=e,this.destroyEditingQuestion(),this.scope.$applyAsync()}))},this.questionTitle=this.translateQuestionTitle(this.questionAttempt.visibleQuestionNumber),this.renderQuestionAttempt(),o.$on(Q,((e,t)=>{t!==this.scope.index()&&this.isEditing&&this.destroyEditingQuestion()}))}trustAsHtml(e){return this.$sce.trustAsHtml(e)}getQuestionRegradingOverflowMenu(){return[{icon:"draw",labelKey:"components.directives.attempt-canvas.freeform-response.grade.question.regrade",onClick:async()=>{await this.editRespondedQuestion(this.questionAttempt.question)}}]}get isCurrentCourseComplete(){return this.contextCourse.course.isComplete()}updateQuestionView(){this.refreshingAnswers=!0,this.constructViewHelper()}getRegradingContainer(){return this.element.find(".regrading-container")[0]}destroyEditingQuestion(){this.isEditing=!1,d.H.destroyReactControl(this.getRegradingContainer())}cancelOrSaveEditingQuestion(e){this.destroyEditingQuestion(),this.scope.$emit(U,e)}renderQuestionAttempt(){this.element.append(this.$compile(F)(this.scope))}async editRespondedQuestion(e){this.closeOtherEditing(),this.isEditing=!0;const t=await this.buildQuestionProps(e);this.timeout((()=>{d.H.renderQuestion(this.getRegradingContainer(),this.$ngRedux,this.localizeService.getLocale(this.scope),this.localizeService.intl,this.localizeService.frmt,this.localizeService.isRTL(this.scope),t,this.contextCourse.course.isOrganization,(()=>{this.element.find(".grade").find("input").focus()}))}),this.scope,0)}closeOtherEditing(){this.scope.$emit(M,this.scope.index())}async buildPluginsConfig(){const e={};return e.contentMarket={apiBasePath:Object(G.c)(y.a.apiBasePath),babelfishInstance:this.localizeService.intl,babelfishFormatInstance:this.localizeService.frmt,getEmbedSrc:this.ltiService.configureAndInitInlineLaunch.bind(this.ltiService),locale:this.localizeService.getLocale(this.scope),openContentMarket:this.ltiService.getOpenContentMarketConf(this.scope),xsrfToken:this.contextService.xsrfToken},await this.CloudStorageIntegrationModalService.initialize(),this.CloudStorageIntegrationModalService.isCloudServiceAvailable&&(e.insertCloudStorageIntegrationFile={openCloudStorageIntegrationModal:this.CloudStorageIntegrationModalService.getModalCallback(this.scope)}),e.insertYoutubeVideo={babelfishInstance:this.localizeService.intl,babelfishFormatInstance:this.localizeService.frmt,courseId:this.contextCourse.courseId,getEmbedSrc:this.ltiService.configureAndInitInlineLaunch.bind(this.ltiService)},e}async buildQuestionProps(e){const t=Object.assign(e,{assessmentId:this.scope.assessmentId(),permissions:{edit:!0}});return j.Qb.Matching===e.questionType&&e.answers.forEach((e=>{e.ui={id:Object(g.b)()}})),{courseId:this.contextCourse.courseId,contentId:this.scope.contentId,persistQuestion:this.saveRegradingQuestion,deleteQuestion:a.noop,openGoals:a.noop,onQuestionMadeDirty:a.noop,question:t,pluginsConfig:await this.buildPluginsConfig(),questionBeingEditedId:e.id,onQuestionEdit:a.noop,isAnyQuestionDirty:!1,hasSubmissions:!0,questionTitle:this.questionTitle,hasQuestionEditPermissions:!0,allyService:this.allyService.getReactService(this.scope),onQuestionEditCancel:()=>{this.cancelOrSaveEditingQuestion(_.CANCEL)},supportsInlineDocumentRender:await this.featureFlagService.createWaiter("feature.course.content.inline-render"),fileUploadSettings:this.fileUploadSettingsService.getSettings(),extraCreditVisibility:d.k.Visible}}allowCollapsingOfAutomatedFeedbackIfShown(){return!0}canShowCorrectAnswerRelatedDetail(){return!this.refreshingAnswers}canShowQuestionScoreRelatedDetail(){return j.l.Completed===this.questionAttempt.attemptStatus}isExtraCredit(){var e,t,s;return null!==(s=(null===(e=this.questionAttempt.question)||void 0===e?void 0:e.extraCredit)&&!(null===(t=this.questionAttempt.question)||void 0===t?void 0:t.externallyReferencedQuestion))&&void 0!==s&&s}};Z.$inject=[],Z=Object(i.a)([Object(i.c)(0,Object(I.b)("$compile")),Object(i.c)(1,Object(I.b)("$sce")),Object(i.c)(2,Object(I.b)("$window")),Object(i.c)(3,Object(I.b)("attrs")),Object(i.c)(4,Object(I.b)("element")),Object(i.c)(5,Object(I.b)(u.b)),Object(i.c)(6,Object(I.b)("scope")),Object(i.c)(7,Object(I.b)(h.b)),Object(i.c)(8,Object(I.b)(m.serviceName)),Object(i.c)(9,Object(I.b)(v.e)),Object(i.c)(10,Object(I.b)("$ngRedux")),Object(i.c)(11,Object(I.b)(w.c)),Object(i.c)(12,Object(I.b)(x.b)),Object(i.c)(13,Object(I.b)(O.b)),Object(i.c)(14,Object(I.b)(f.b)),Object(i.c)(15,Object(I.b)(S.b)),Object(i.c)(16,Object(I.b)(k.b)),Object(i.c)(17,Object(I.b)(C.b))],Z);let X=class extends V{constructor(e,t,s,i,n,a,o,r,d,l,c){super(e,s,i,n,a,o,r,l,c),this.$compile=e,this.$sce=t,this.$window=s,this.attrs=i,this.element=n,this.gradebookPermissionService=a,this.scope=o,this.timeout=r,this.ultraState=d,this.localizeService=l,this.settingsDefault=c,this.attemptQuestion=this.questionAttempt.question,n.append(e(D)(o)),this.questionTitle=this.translateQuestionTitle(this.questionAttempt.visibleQuestionNumber)}trustAsHtml(e){return this.$sce.trustAsHtml(e)}hasGoals(){return this.attemptQuestion&&this.attemptQuestion.alignedGoals&&this.attemptQuestion.alignedGoals.length}openQuestionGoals(){this.ultraState.goPeekState("question-goal-alignment-for-student",{questionId:this.questionAttempt.questionId,questionIndex:this.questionAttempt.visibleQuestionNumber})}allowCollapsingOfAutomatedFeedbackIfShown(){return!1}canShowCorrectAnswerRelatedDetail(){return q.a.studentCanViewAttemptResults(this.attempt)&&this.questionAttempt.isCorrectAnswersVisible}canShowQuestionScoreRelatedDetail(){return q.a.studentCanViewAttemptResults(this.attempt)&&this.questionAttempt.isScoreVisible}wasAnsweredLate(){return this.canShowQuestionScoreRelatedDetail()&&super.wasAnsweredLate()}isExtraCredit(){var e,t,s,i,n;return null!==(n=(null===(t=null===(e=this.questionAttempt)||void 0===e?void 0:e.question)||void 0===t?void 0:t.extraCredit)&&!(null===(i=null===(s=this.questionAttempt)||void 0===s?void 0:s.question)||void 0===i?void 0:i.externallyReferencedQuestion))&&void 0!==n&&n}};X.$inject=[],X=Object(i.a)([Object(i.c)(0,Object(I.b)("$compile")),Object(i.c)(1,Object(I.b)("$sce")),Object(i.c)(2,Object(I.b)("$window")),Object(i.c)(3,Object(I.b)("attrs")),Object(i.c)(4,Object(I.b)("element")),Object(i.c)(5,Object(I.b)(u.b)),Object(i.c)(6,Object(I.b)("scope")),Object(i.c)(7,Object(I.b)(h.b)),Object(i.c)(8,Object(I.b)(p.d)),Object(i.c)(9,Object(I.b)(m.serviceName))],X)},Ed3w:function(e,t,s){"use strict";s.d(t,"b",(function(){return d})),s.d(t,"c",(function(){return l})),s.d(t,"a",(function(){return c}));var i=s("Llzl"),n=s("pjml"),a=s("lEL+"),o=s("nsO7"),r=s("zGdY");const d="ultra.services.schedule-task",l="schedule-task";var c;!function(e){e.QuestionRegrading="regradingTasks"}(c||(c={}));const u=new Map;class b{constructor(e,t){this.timeout=e,this.scheduleTaskModel=t}scheduleTask({courseId:e,taskName:t,scope:s,notifier:n=o.noop,delay:a=2e3},r=!1){let d=u.get(e);if(d&&d.has(t))return;i.isUndefined(d)&&(d=new Set),u.set(e,d.add(t));const l=e=>{n(e),d.delete(t)};s.$on("$destroy",(()=>{d.delete(t)})),r?this.timedTask({courseId:e,taskName:t,scope:s,notifier:l,delay:a}):this.fireInitialRequest(e,t).then((n=>{this.hasInCompleteTasks(n)&&i.isDefined(s)?this.timedTask({courseId:e,taskName:t,scope:s,notifier:l,delay:a}):l(!0)}))}timedTask({courseId:e,taskName:t,scope:s,notifier:i=o.noop,delay:n}){this.timeout((()=>{this.requestTask(e,t).then((a=>{this.hasInCompleteTasks(a)?this.timedTask({courseId:e,taskName:t,scope:s,notifier:i,delay:n}):i(!1)}))}),s,n)}fireInitialRequest(e,t){return this.requestTask(e,t)}requestTask(e,t){return this.scheduleTaskModel.$collection().$fetch({courseId:e,filterBy:t}).$asPromise()}hasInCompleteTasks(e){return e.some((e=>e.taskStatus!==r.Rb.CompleteErrors&&e.taskStatus!==r.Rb.Complete))}}b.$inject=[a.b,n.nb.serviceName];i.module(d,[a.a]).service(l,class extends b{})},IjED:function(e,t,s){"use strict";s.d(t,"a",(function(){return a})),s.d(t,"b",(function(){return o}));var i=s("nsO7"),n=s("TnpK");const a="ultra.services.slideoutPanel",o="slideoutPanel";var r;!function(e){e.RubricEvaluation="rubric-evaluation",e.RubricView="rubric-view",e.AssessmentSubmissionFeedback="assessment-submission-feedback",e.DiscussionFeedback="discussion-feedback"}(r||(r={}));class d{constructor(e){this.ultraState=e,this.slideoutPanelIsOpen=!1,this.getMostRecentPanelState=e=>e.split(".").pop(),this.isPanelClosing=(e,t)=>this._doesStateRequireSlidePanel(this.getMostRecentPanelState(e))&&!this._doesStateRequireSlidePanel(this.getMostRecentPanelState(t)),this.setSlideoutPanelState=()=>{this.slideoutPanelIsOpen=this._doesStateRequireSlidePanel(this.getMostRecentPanelState(this.ultraState.current.name))},this.isOpen=()=>(this.setSlideoutPanelState(),this.slideoutPanelIsOpen),this.setSlideoutPanelState()}isRubricState(){return this.getMostRecentPanelState(this.ultraState.current.name)===r.RubricEvaluation||this.getMostRecentPanelState(this.ultraState.current.name)===r.RubricView}_doesStateRequireSlidePanel(e){return i.some(Object.values(r),(t=>e===t))}}d.$inject=[n.d];angular.module(a,[]).service(o,d)},QzaB:function(e,t){e.exports='<div bb-load-bundle="components/directives/search-box">\n  <bb-svg-icon size="small" icon="search"></bb-svg-icon>\n  <input \n    bb-translate-attrs="{ \'placeholder\': \'{{::$ctrl.placeholderKey}}\', \'aria-label\': \'{{::$ctrl.placeholderKey}}\'}"\n    type="text"\n    ng-model="$ctrl.searchText" \n    ng-model-options="{debounce: 800, getterSetter: true}"\n    analytics-id="{{::$ctrl.analyticsIdTagPrefix}}.input.text"\n  />\n  <button bb-translate-attrs="{\'aria-label\': \'components.directives.search-box.clearSearch\'}"\n    ng-if="$ctrl._searchText"\n    ng-click="$ctrl.clearSearchInput()"\n    analytics-id="{{::$ctrl.analyticsIdTagPrefix}}.clear.button"\n  >\n    <bb-svg-icon size="small" icon="close"></bb-svg-icon>\n  </button>\n</div>\n'},R4kC:function(e,t,s){"use strict";s.d(t,"a",(function(){return b})),s.d(t,"b",(function(){return m}));var i=s("D57K"),n=s("nsO7"),a=s("Llzl"),o=s("pjml"),r=s("aHpC"),d=s("jhBu"),l=s("o5Lu"),c=s("Sa5G"),u=s("IbyE");const b="ultra.services.submissionList",m="submissionList",g=["courseCardColorIndex","id","isAvailable","dueDateExceptionType","timeLimitExceptionType","role","courseRole","user.id","user.userName","user.avatar","user.familyName","user.givenName","user.lastModifiedAt","userHasHidden","userId","isPreviewStudent","user.otherName","user.preferredDisplayName"].join(),h=["isPreviewStudent(asc)","user.familyName(asc)","user.givenName(asc)"].join();let p=class{constructor(e,t,s,i,n,a){this.$rootScope=e,this.$q=t,this.CourseModel=s,this.gradeService=i,this.entitlementService=n,this.$ngRedux=a,this.loadAssignedGroupAndGroupRows=(e,t,s)=>this.CourseModel.$new(e.Column.courseId).contents.$find(e.Column.contentId,{expand:"assignedGroups"}).$asPromise().then((i=>{var n,a,o;const r=null===(n=null==i?void 0:i.assignedGroups)||void 0===n?void 0:n.find((t=>t.groupId===e.group.id));return this.gradeService.loadGroupRows(this.CourseModel.$new(t),[r],s,e.Column,null===(o=null===(a=e.Column.ui)||void 0===a?void 0:a.content)||void 0===o?void 0:o.isSafeAssignEnabled())})),this.listeners=new Map,this.subscribeToRedux()}subscribeToRedux(){this.$ngRedux.connect(null,(e=>({loadMembership:(t,s)=>e(u.X.courseMembership.loadCourseMembershipByMemberId(t,s))})))(this)}setSubmissionList(e,t,s,i){this.submissionList&&this.submissionList.courseId===e&&this.submissionList.columnId===t||(this.submissionList=Object.create(null)),this.submissionList.courseId=e,this.submissionList.columnId=t,this.submissionList.memberships=s,this.submissionList.rows=i||[],this.submissionList.canViewGroups=this.entitlementService.areAllEntitled([c.o.ViewGroups,c.f.ViewAsDesigner],e)}getListeners(e,t){const s=`${e}|${t}`;return this.listeners.has(s)||this.listeners.set(s,new Set),this.listeners.get(s)}notifyRowsListeners(){if(!this.submissionList)return;this.getListeners(this.submissionList.courseId,this.submissionList.columnId).forEach((e=>{null==e||e()}))}addOnRowsUpdated(e,t,s){return this.getListeners(e,t).add(s),()=>{this.removeOnRowsUpdated(e,t,s)}}loadRowsListeners(){if(!this.submissionList)return;this.getListeners(this.submissionList.courseId,this.submissionList.columnId).forEach((e=>e()))}removeOnRowsUpdated(e,t,s){this.getListeners(e,t).delete(s)}refreshAttempts(e,t,s){var i,n,a,o,r,d,l,c;if(e!==(null===(i=this.submissionList)||void 0===i?void 0:i.courseId)||t!==(null===(n=this.submissionList)||void 0===n?void 0:n.columnId))return this.$q.when();let u;return"attemptId"in s?u=null===(o=null===(a=this.submissionList)||void 0===a?void 0:a.rows)||void 0===o?void 0:o.find((e=>{var t,i;return null===(i=null===(t=e.grade)||void 0===t?void 0:t.attempts)||void 0===i?void 0:i.some((e=>(null==e?void 0:e.id)===s.attemptId))})):"userId"in s?u=null===(d=null===(r=this.submissionList)||void 0===r?void 0:r.rows)||void 0===d?void 0:d.find((e=>{var t;return(null===(t=e.user)||void 0===t?void 0:t.id)===s.userId})):"groupId"in s&&(u=null===(c=null===(l=this.submissionList)||void 0===l?void 0:l.rows)||void 0===c?void 0:c.find((e=>{var t;return(null===(t=e.group)||void 0===t?void 0:t.id)===s.groupId}))),u?this.loadAttempt(e,u).then((e=>{if(1!==(null==e?void 0:e.length))return;const t=e[0];u.grade=t.grade,u.attemptCount=t.attemptCount,u.lastAttemptDate=t.lastAttemptDate,u.attemptsReadyToPost=t.attemptsReadyToPost,this.notifyRowsListeners()})):this.$q.when()}loadAttempt(e,t){var s;return(null===(s=t.group)||void 0===s?void 0:s.id)?this.loadGroupAttempt(e,t):this.loadIndividualAttempt(t)}loadGroupAttempt(e,t){var s,i,n,a,o,r;if(!this.submissionList.canViewGroups)return this.$q.when();const d=null===(n=null===(i=null===(s=t.Column.ui)||void 0===s?void 0:s.content)||void 0===i?void 0:i.assignedGroups)||void 0===n?void 0:n.find((e=>e.groupId===t.group.id)),l=null===(a=t.group)||void 0===a?void 0:a.memberships.map((e=>this.submissionList.memberships.find((t=>t.userId===e.userId)))).filter((e=>!!e));return d?this.gradeService.loadGroupRows(this.CourseModel.$new(e),[d],l,t.Column,null===(r=null===(o=t.Column.ui)||void 0===o?void 0:o.content)||void 0===r?void 0:r.isSafeAssignEnabled()):this.loadAssignedGroupAndGroupRows(t,e,l)}loadIndividualAttempt(e){var t,s;return this.gradeService.loadCustomizedBulkViewRows([e.membership],e.Column,null,null,null===(s=null===(t=e.Column.ui)||void 0===t?void 0:t.content)||void 0===s?void 0:s.isSafeAssignEnabled())}sortSubmissionList(e){e&&e.sort(((e,t)=>this.getBucketNum(e)-this.getBucketNum(t)||(e.group?e.group.title.localeCompare(t.group.title):this.sortByGivenNamesForSimilarFamilyNames(e,t))))}getBucketNum(e){return e.RowStatus.valueOf()}sortByGivenNamesForSimilarFamilyNames(e,t){return e.user.familyName===t.user.familyName?e.user.givenName.localeCompare(t.user.givenName):e.user.familyName.localeCompare(t.user.familyName)}fetchMemberships(e,t){const s=n.merge({fields:g,roleBucket:"taking",sort:h},t);return e.memberships.$refresh(s).$asPromise()}fetchMembership(e,t){return this.$q.resolve(this.loadMembership(e.id,t).then((t=>{const s=e.memberships.$build(t);return this.$rootScope.$emit(`course-${e.id}-memberships-after-fetch`,[s]),s})))}};p=Object(i.a)([Object(i.c)(0,Object(r.b)("$rootScope")),Object(i.c)(1,Object(r.b)("$q")),Object(i.c)(2,Object(r.b)(o.m.serviceName)),Object(i.c)(3,Object(r.b)(l.n)),Object(i.c)(4,Object(r.b)(d.b)),Object(i.c)(5,Object(r.b)("$ngRedux"))],p);a.module(b,[d.a,l.m]).service(m,p)},RWbl:function(e,t){e.exports='<div bb-load-bundle="components/directives/grade/submission-list">\n  <div class="submission-list-header">\n    <div class="search-filter">\n      <bb-search-box\n        ng-if="!submissionList.column.anonymousGrading"\n        on-search="submissionList.filterRows(searchText)"\n        placeholder-key="{{::submissionList.getSearchBoxPlaceholderKey()}}"\n        analytics-id-tag-prefix="components.directives.grade.submissionList.filter">\n      </bb-search-box>\n      <div class="submission-list-filter" ng-if="submissionList.shouldShowAnonymousSubmissionFilters()">\n        <span bb-translate="components.directives.grade.submission-list.filter.label"></span>\n        <div class="select-wrapper">\n          <div bb-foundation-defer>\n            <button data-dropdown="submission-list-filter"\n                    bb-click-focus=".item-selected > a"\n                    bb-translate-attrs="{\'aria-label\': \'components.directives.grade.submission-list.filter.label\'}"\n                    aria-describedby="filter-name"\n                    analytics-id="components.directives.grade.submissionList.filter.button">\n              <div class="select-value">\n                <span id="filter-name">{{submissionList.anonymousSelectedGradingFilter.name}}</span>\n              </div>\n            </button>\n            <bb-dropdown list-id="submission-list-filter"\n                         list-kind="filter"\n                         item-list="submissionList.anonymousAvailableFilters"\n                         selected-item="submissionList.anonymousSelectedGradingFilter"\n                         click-function="submissionList.changeFilter(item)"\n                         analytics-id-tag-prefix="components.directives.grade.submission-list.changeFilter">\n            </bb-dropdown>\n          </div>\n        </div>\n      </div>\n      <div class="submission-list-filters" ng-if="submissionList.shouldShowSubmissionFilters()">\n        <bb-submission-list-dropdown-filters\n          score-provider-handler="submissionList.column.scoreProviderHandle"\n          analytics-id="course.grades.gradebook-item.submission-view.filters"\n          student-filter-selected="submissionList.studentFilterSelected"\n          grading-filter-selected="submissionList.gradingFilterSelected"\n          is-delegated="submissionList.isDelegated()"\n          is-user-reconciler="submissionList.isUserReconciler()"\n          is-group-content="submissionList.isGroup && !submissionList.isDiscussion">\n        </bb-submission-list-dropdown-filters>\n      </div>\n    </div>\n    <div\n      class="page-size-selector-wrapper"\n      ng-if="submissionList.initialPageSize">\n      <bb-page-size-selector\n        ng-if="::submissionList"\n        class-name="submission-list-page-size"\n        on-page-size-change="submissionList.onPageSizeChange"\n        page-size-options="submissionList.pageSizeOptions"\n        initial-page-size="submissionList.initPageSize"\n        analytics-id="components.directives.grade.submissionList"\n      ></bb-page-size-selector>\n    </div>\n  </div>\n  <form\n    class="assessment-exception"\n    name="submission-list"\n    bb-intersection-observer ng-switch="::submissionList.mode"\n    ng-class="::{\'is-group-submission\': submissionList.isGroup}">\n    <div class="row tabular-list-header course-grades-column-headers course-grades-instructor" ng-class="{\n      \'submission-list-download-all-hidden\': !submissionList.canDownloadAll()\n    }" bb-foundation-defer>\n      <div\n        class="columns medium-4 tabular-list-header-offset hide-for-small-only"\n        ng-if="submissionList.isGroup && !submissionList.isDiscussion"\n      >\n        <span bb-translate>course.grades.gradebook-item.headers.group</span>\n      </div>\n      <div class="columns medium-4 tabular-list-header-offset hide-for-small-only"\n           ng-if="!(submissionList.isGroup && !submissionList.isDiscussion)">\n        <span bb-translate course-org-token-resolver\n          ng-if="submissionList.column.anonymousGrading || !(submissionList.column.isAssignment() || submissionList.column.isTest())">\n          course.grades.gradebook-item.headers.student\n        </span>\n        <button id="studentNameSort" class="active clear sorting-header-column" data-default-positioning="true"\n                data-dropdown="studentNameSortOptions" aria-expanded="false" aria-haspopup="true"\n                aria-label="{{submissionList.selectedNameSortOption.ariaLabel}}"\n                analytics-id="components.directives.grade.submission-list.nameSort.button"\n                ng-if="submissionList.isAssignmentOrTest()">\n          <span> {{submissionList.selectedNameSortOption.nameButtonLabel}}</span>\n          <bb-arrow-sort-indicator sortable="true"\n                                   sort="submissionList.nameSortType"\n                                   class="sort-icon js-{{submissionList.nameSortType}}-icon">\n          </bb-arrow-sort-indicator>\n        </button>\n        <ul id="studentNameSortOptions" data-dropdown-content class="dropdown f-dropdown sorting-options" role="menu"\n            aria-labelledby="studentNameSort">\n          <li ng-repeat="sortOption in submissionList.nameSortOptions">\n            <a href="javascript:void(0);" role="button" ng-click="submissionList.nameSortColumn(sortOption.sort)"\n              analytics-id="{{sortOption.analyticsId}}"\n              aria-label="{{sortOption.dropdownListLabel}}">{{sortOption.dropdownListLabel}}</a>\n          </li>\n        </ul>\n      </div>\n      <div class="columns medium-6">\n        <div class="row column-headers">\n          <div class="columns js-student-status-column hide-for-small-only status-header" ng-class="{\n               \'medium-4\': !submissionList.isPeerGrading() && !submissionList.shouldShowOriginality,\n               \'medium-2\': submissionList.isPeerGrading() && submissionList.shouldShowOriginality,\n               \'medium-3\': (submissionList.isPeerGrading() && !submissionList.shouldShowOriginality) || (!submissionList.isPeerGrading() && submissionList.shouldShowOriginality),\n                  }">\n            <span ng-if="submissionList.isGroup && !submissionList.isDiscussion" bb-translate>\n              course.grades.gradebook-item.headers.groupProgressStatus\n            </span>\n            <span ng-if="!submissionList.isGroup && !submissionList.shouldAllowSorting(\'studentStatusSort\')"\n              bb-translate course-org-token-resolver>course.grades.gradebook-item.headers.studentProgressStatus</span>\n            <div ng-if="submissionList.shouldAllowSorting(\'studentStatusSort\')" ng-click="submissionList.onClickSort(\'studentStatusSort\')"\n                 analytics-id="components.directives.grade.submission-list.studentStatusSort"\n                 class="sorting-header-column"\n                 bb-translate-attrs="{\'aria-label\': \'{{submissionList.getAriaLabelString(\'studentStatusSort\')}}\'}" role="button"\n                 tabindex="0">\n              <span bb-translate course-org-token-resolver>course.grades.gradebook-item.headers.studentProgressStatus</span>\n              <bb-arrow-sort-indicator sortable="true"\n                                       sort="submissionList.getSortTypeValue(\'studentStatusSort\')"\n                                       class="sort-icon js-{{submissionList.getSortTypeValue(\'studentStatusSort\')}}-icon">\n              </bb-arrow-sort-indicator>\n            </div>\n          </div>\n          <div class="columns js-status-column hide-for-small-only status-header" ng-class="{\n                      \'medium-4\': !submissionList.isPeerGrading() && !submissionList.shouldShowOriginality,\n                      \'medium-2\': submissionList.isPeerGrading() && submissionList.shouldShowOriginality,\n                      \'medium-3\': (submissionList.isPeerGrading() && !submissionList.shouldShowOriginality) || (!submissionList.isPeerGrading() && submissionList.shouldShowOriginality),\n                    }">\n            <span ng-if="!submissionList.shouldAllowSorting(\'needsGrading\')"\n              bb-translate>course.grades.gradebook-item.headers.gradingStatus</span>\n            <div ng-click="submissionList.onClickSort(\'needsGrading\')"\n                 ng-if="submissionList.shouldAllowSorting(\'needsGrading\')"\n                 analytics-id="components.directives.grade.submission-list.sortGradeStatusColumn"\n                 class="sorting-header-column"\n                 bb-translate-attrs="{\'aria-label\': \'{{submissionList.getAriaLabelString(\'needsGrading\')}}\'}" role="button"\n                 tabindex="0">\n              <span bb-translate>course.grades.gradebook-item.headers.gradingStatus</span>\n              <bb-arrow-sort-indicator sortable="true"\n                                       sort="submissionList.getSortTypeValue(\'needsGrading\')"\n                                       class="sort-icon js-{{submissionList.getSortTypeValue(\'needsGrading\')}}-icon">\n              </bb-arrow-sort-indicator>\n            </div>\n          </div>\n          <div ng-if="::submissionList.isPeerGrading()" class="columns medium-3 js-peer-column hide-for-small-only status-header">\n            <span bb-translate>course.grades.gradebook-item.headers.peerGrading</span>\n          </div>\n          <div class="columns js-grade-column hide-for-small-only"\n               ng-class="{\n                  \'anonymous-grading-tooltip\': submissionList.column.anonymousGrading,\n                  \'medium-4\': !submissionList.isPeerGrading() && submissionList.shouldShowOriginality,\n                  \'medium-3\': submissionList.isPeerGrading() || !submissionList.shouldShowOriginality,\n                  \'end\': !submissionList.shouldShowOriginality\n                }"\n          >\n            <span ng-if="!submissionList.shouldAllowSorting(\'grade\')"\n              bb-translate>course.grades.gradebook-item.headers.graded</span>\n            <div ng-click="submissionList.onClickSort(\'grade\')"\n                 ng-if="submissionList.shouldAllowSorting(\'grade\')"\n                 analytics-id="components.directives.grade.submission-list.sortGradeColumn"\n                 class="sorting-header-column"\n                 bb-translate-attrs="{\'aria-label\': \'{{submissionList.getAriaLabelString(\'grade\')}}\'}" role="button" tabindex="0">\n              <span bb-translate>course.grades.gradebook-item.headers.graded</span>\n              <bb-arrow-sort-indicator sortable="true"\n                                       sort="submissionList.getSortTypeValue(\'grade\')"\n                                       class="sort-icon js-{{submissionList.getSortTypeValue(\'grade\')}}-icon">\n              </bb-arrow-sort-indicator>\n            </div>\n            <button\n              class="js-anonymous-grading-override-info"\n              ng-if="submissionList.column.anonymousGrading"\n              bb-tooltip enhanced-tooltip="true"\n              bb-translate-attrs="{\'aria-label\': \'components.directives.grade.submission-list-row.ftue.anonymousGrading\',\n                                    title: \'components.directives.grade.submission-list-row.ftue.anonymousGrading\'}"\n              analytics-id="course.content.assessment.details.button"\n              >\n                <bb-svg-icon aria-hidden="true" role="presentation" size="small" icon="information"></bb-svg-icon>\n            </button>\n          </div>\n          <div class="columns medium-2 small-1 hide-for-small-only end" ng-if="::submissionList.shouldShowOriginality">\n            <span class="js-originality-column" bb-translate>course.grades.gradebook-item.headers.originality</span>\n          </div>\n        </div>\n      </div>\n      <div class="columns medium-2 small-12 overflow-menu-div">\n        <div class="row">\n          <div class="columns js-post-column hide-for-small-only medium-10"\n               ng-if="!submissionList.column.anonymousGrading && submissionList.shouldAllowSorting(\'postSort\')">\n            <div ng-click="submissionList.onClickSort(\'postSort\')"\n                 analytics-id="components.directives.grade.submission-list.postSort" class="sorting-header-column post-column"\n                 bb-translate-attrs="{\'aria-label\': \'{{submissionList.getAriaLabelString(\'postSort\')}}\'}" role="button"\n                 tabindex="0">\n              <span bb-translate>course.grades.gradebook-item.actions.post</span>\n              <bb-arrow-sort-indicator sortable="true" sort="submissionList.getSortTypeValue(\'postSort\')"\n                                       class="sort-icon js-{{submissionList.getSortTypeValue(\'postSort\')}}-icon">\n              </bb-arrow-sort-indicator>\n            </div>\n          </div>\n          <div class="columns medium-2" ng-if="::submissionList.canDownloadAll()" bb-foundation-defer>\n            <bb-overflow-menu class="overflow-menu" menu-items="::submissionList.getDownloadOverflowMenu()"\n                              element-id="submission-list-overflow-menu" element-name="{{::submissionList.overflowMenuLabel()}}"\n                              analytics-id-tag-prefix="course.grades.gradebookItem.headers.submissionList">\n            </bb-overflow-menu>\n            <button class="download-link button-anchor" bb-translate="components.directives.grade.submission-list.downloadAll"\n                    href="javascript:void(0);" ng-click="submissionList.gradesBulkDownload()"\n                    analytics-id="components.directives.grade.submission-list.downloadAll" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id="cannotViewGroupsMsg" ng-if="submissionList.showNoGroupViewMessage()">{{submissionList.cannotViewGroupsMsg}}</div>\n    <div ng-if="submissionList.rows.length === 0">\n      <bb-submission-list-no-filter></bb-submission-list-no-filter>\n    </div>\n    <div ng-class="{\'last-tabular-row-container\':$last}"\n         ng-switch-default\n         ng-repeat="row in submissionList.rows track by row.id"\n         bb-on-finish-render="submissionList.onFinishRender()">\n      <div bb-intersection-observable="{debounce:200}" class="js-submission-list-row">\n        <bb-submission-list-row column="::submissionList.column" course="::submissionList.course"\n                                user-course-available-map="submissionList.userCourseAvailableMap"\n                                editing="submissionList.editing" row="row" index="$index"\n                                is-originality-enabled="submissionList.shouldShowOriginality"\n                                ng-class="{\'bb-user-avatar-alert\': row.isLate()}"\n                                ng-switch="submissionList.isExternalSubmission">\n          <span class="mobile-submissions-header status-header"\n                bb-translate="{{::!submissionList.isDiscussion ? \'course.grades.gradebook-item.headers.gradingStatus\' : \'course.engagement.grade.headers.participation\'}}"></span>\n          <div ng-switch-when="true">\n            <span class="status-to-grade"\n                  ng-if="!row.isStatusComplete() && !row.isStatusToPost() && !row.overrideToPost() && row.isStatusAttemptsToGrade(submissionList.isExternalSubmission) && !row.grade.isExempt"\n                  bb-translate translate-values="::{gradeCount: 1}">\n                  components.directives.grade.submission-list.gradingStatus.toGrade.plural</span>\n            <span class="status-nothing-to-grade"\n                  ng-if="(row.isStatusToPost() || row.overrideToPost()) && !row.grade.isExempt"\n                  bb-translate>\n                  components.directives.grade.submission-list.gradingStatus.nothingToGrade</span>\n            <span class="status-exempt"\n                ng-if="row.grade.isExempt"\n                bb-translate>\n                components.directives.grade.submission-list.gradingStatus.exempt</span>\n            <div class="status-is-complete" ng-if="row.isStatusComplete() && !row.overrideToPost() && !row.grade.isExempt">\n              <bb-svg-icon size="small" icon="complete" status="success"></bb-svg-icon>\n              <span bb-translate>components.directives.grade.submission-list.gradingStatus.complete</span>\n            </div>\n          </div>\n          <div ng-switch-default>\n            <div ng-switch="row.grade.attempts && row.grade.attempts.length > 0">\n              <div ng-switch-when="true">\n                <span class="status-nothing-to-grade"\n                      ng-if="(row.isNothingToGradeStatus(submissionList.isPeerGrading()) || (row.shouldShowNothingToGradeStatus() && row.isStatusNothingToGrade() && !row.isStatusToPost() && !row.isStatusComplete() && !row.overrideToPost() && !submissionList.isPeerGrading())) && !row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.{{submissionList.getNothingToGradeOrReconcileKey($index)}}</span>\n                <span class="status-to-reconcile"\n                      ng-if="row.isStatusAttemptsToReconcile() && !submissionList.isPeerGrading() && !row.grade.isExempt"\n                      bb-translate translate-values="::{gradeCount: row.grade.attempts.getNumAttemptsToReconcile()}">\n                      components.directives.grade.submission-list.gradingStatus.attemptsToReconcile.plural</span>\n                <span class="status-to-grade"\n                      ng-if="row.isStatusAttemptsToGrade() && !submissionList.isPeerGrading() && !row.grade.isExempt"\n                      bb-translate translate-values="::{gradeCount: row.grade.attempts.getNumAttemptsToGrade()}">\n                      components.directives.grade.submission-list.gradingStatus.attemptsToGrade.plural</span>\n                <span class="{{submissionList.status}}"\n                      ng-if="submissionList.isPeerGrading() && !(row.isMultipleStatus() || row.isStatusToPost() || row.overrideToPost()) && (row.isStatusAttemptsToGrade() || row.isStatusAttemptsToReconcile()) && !row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.{{submissionList.getAttemptsPeerStatus($index)}}</span>\n                <span class="status-exempt"\n                      ng-if="row.grade.isExempt"\n                      bb-translate>\n                      components.directives.grade.submission-list.gradingStatus.exempt</span>\n                <div class="{{submissionList.status}}"\n                     ng-if="submissionList.hasAttemptBeenPostedOrCompleted($index) && !row.grade.isExempt">\n                  <bb-svg-icon size="small" icon="complete" status="success"></bb-svg-icon>\n                  <span bb-translate>components.directives.grade.submission-list.gradingStatus.{{submissionList.getPostedOrCompletedKey()}}</span>\n                </div>\n              </div>\n              <div ng-switch-default>\n                <span class="status-nothing-to-grade" ng-if="!row.isCurrentUserReconciler() && !row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.nothingToGrade</span>\n                <span class="status-to-reconcile" ng-if="row.isCurrentUserReconciler() && !row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.nothingToReconcile</span>\n                <span class="status-exempt" ng-if="row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.exempt</span>\n              </div>\n            </div>\n          </div>\n        </bb-submission-list-row>\n      </div>\n    </div>\n    <div ng-class="{\'last-tabular-row-container\':$last}"\n         ng-switch-when="Group"\n         ng-repeat="row in submissionList.rows | limitTo: submissionList.pageSize: submissionList.currentPage*submissionList.pageSize track by row.id">\n      <div bb-intersection-observable="{debounce:200}">\n        <bb-group-submission-list-row column="::submissionList.column" course="::submissionList.course"\n                                      user-course-available-map="submissionList.userCourseAvailableMap"\n                                      editing="submissionList.editing" row="row" index="$index"\n                                      is-originality-enabled="submissionList.shouldShowOriginality"\n                                      ng-class="{\'bb-user-avatar-alert\': row.isLate()}"\n                                      ng-switch="submissionList.isExternalSubmission">\n          <span class="mobile-submissions-header status-header"\n                bb-translate="{{::!submissionList.isDiscussion ? \'course.grades.gradebook-item.headers.gradingStatus\' : \'course.engagement.grade.headers.participation\'}}"></span>\n          <div ng-switch-when="true">\n            <span class="status-to-grade"\n              ng-if="!row.isGroupStatusComplete(submissionList.isExternalSubmission) && !row.isGroupStatusToPost()\n                      && !row.overrideToPost() && row.isGroupStatusAttemptsToGrade(submissionList.isExternalSubmission) && !row.grade.isExempt" bb-translate\n              translate-values="{gradeCount: 1}">components.directives.grade.submission-list.gradingStatus.toGrade.plural</span>\n            <span class="status-to-post" ng-if="(row.isGroupStatusToPost() || row.overrideToPost()) && !row.grade.isExempt"\n              bb-translate\n              translate-values="::{postCount: 1}">components.directives.grade.submission-list.gradingStatus.toPost.plural</span>\n            <div class="status-is-complete"\n              ng-if="row.isGroupStatusComplete(submissionList.isExternalSubmission) && !row.overrideToPost() && !row.grade.isExempt">\n              <bb-svg-icon size="small" icon="complete" status="success"></bb-svg-icon>\n              <span bb-translate>components.directives.grade.submission-list.gradingStatus.complete</span>\n            </div>\n            <span class="status-exempt" ng-if="row.grade.isExempt" bb-translate>\n              components.directives.grade.submission-list.gradingStatus.exempt</span>\n          </div>\n          <div ng-switch-default>\n            <div ng-switch="row.hasGroupAttempts()">\n              <div ng-switch-when="true">\n                <span class="status-nothing-to-grade"\n                      ng-if="row.isGroupStatusNothingToGrade() && !row.isGroupStatusToPost() && !row.isGroupStatusComplete() && !row.overrideToPost() && !row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.nothingToGrade</span>\n                <span class="status-to-grade"\n                      ng-if="row.isGroupStatusAttemptsToGrade() && !row.grade.isExempt"\n                      bb-translate translate-values="::{gradeCount: row.grade.groupAttempts.getNumAttemptsToGrade()}">\n                      components.directives.grade.submission-list.gradingStatus.attemptsToGrade.plural</span>\n                <span class="vertical-bar" ng-if="row.isMultipleStatus() && !row.grade.isExempt"></span>\n                <span class="status-to-post"\n                      ng-if="(row.isMultipleStatus() || row.isGroupStatusToPost() || row.overrideToPost()) && !row.grade.isExempt"\n                      bb-translate translate-values="::{postCount: 1}">components.directives.grade.submission-list.gradingStatus.toPost.plural</span>\n                <span class="status-exempt"\n                      ng-if="row.grade.isExempt"\n                      bb-translate>\n                      components.directives.grade.submission-list.gradingStatus.exempt</span>\n                <div class="status-is-complete" ng-if="row.isGroupStatusComplete() && !row.overrideToPost() && !row.grade.isExempt">\n                  <bb-svg-icon size="small" icon="complete" status="success"></bb-svg-icon>\n                  <span bb-translate>components.directives.grade.submission-list.gradingStatus.complete</span>\n                </div>\n              </div>\n              <div ng-switch-default>\n                <span class="status-nothing-to-grade"\n                      ng-if="!row.grade.isExempt"\n                      bb-translate>components.directives.grade.submission-list.gradingStatus.nothingToGrade</span>\n                <span class="vertical-bar" ng-if="row.overrideToPost() && !row.grade.isExempt"></span>\n                <span class="status-exempt"\n                      ng-if="row.grade.isExempt"\n                      bb-translate>\n                      components.directives.grade.submission-list.gradingStatus.exempt</span>\n                <span class="status-to-post"\n                      ng-if="row.overrideToPost() && !row.grade.isExempt"\n                      bb-translate translate-values="::{postCount: 1}">components.directives.grade.submission-list.gradingStatus.toPost.plural</span>\n              </div>\n            </div>\n          </div>\n        </bb-group-submission-list-row>\n      </div>\n    </div>\n    <div ng-class="{\'last-tabular-row-container\':$last}"\n         ng-switch-when="Discussion"\n         ng-repeat="row in submissionList.rows | limitTo: submissionList.pageSize: submissionList.currentPage*submissionList.pageSize track by row.id">\n      <div bb-intersection-observable="{debounce:200}">\n        <bb-submission-list-row column="submissionList.column" course="submissionList.course"\n                                user-course-available-map = "submissionList.userCourseAvailableMap"\n                                include-due-date-exception="submissionList.includeDueDateException()"\n                                is-group-discussion="submissionList.isGroupDiscussion()"\n                                is-originality-enabled="submissionList.shouldShowOriginality"\n                                editing="submissionList.editing" row="row" index="$index">\n          <span class="mobile-submissions-header status-header"\n                bb-translate>course.engagement.grade.headers.participation</span>\n          <span class="status-to-grade"\n                ng-if="row.isStatusAttemptsToGrade() && !row.grade.isExempt"\n                bb-translate translate-values="{gradeCount: 1}">components.directives.grade.submission-list.gradingStatus.toGrade.plural</span>\n          <div class="status-is-complete" ng-if="row.isStatusComplete() && !row.grade.isExempt">\n            <bb-svg-icon size="small" icon="complete" status="success"></bb-svg-icon>\n            <span bb-translate>components.directives.grade.submission-list.gradingStatus.complete</span>\n          </div>\n          <span class="status-nothing-to-grade"\n                ng-if="row.isStatusNothingToGrade() && !row.isOverdue() && !row.isStatusComplete() && !row.grade.isExempt"\n                bb-translate>components.directives.grade.submission-list.gradingStatus.nothingToGrade</span>\n          <span class="status-no-participation"\n                ng-if="row.isStatusNothingToGrade() && row.isOverdue() && !row.isStatusComplete() && !row.grade.isExempt"\n                bb-translate>components.directives.grade.submission-list.participation.noParticipation</span>\n          <span class="vertical-bar" ng-if="row.isStatusNothingToGrade() && row.isStatusToPost() && !row.grade.isExempt"></span>\n          <span class="status-exempt"\n                    ng-if="row.grade.isExempt"\n                    bb-translate>\n                    components.directives.grade.submission-list.gradingStatus.exempt</span>\n          <span class="status-to-post" ng-if="((row.isStatusNothingToGrade() && row.isStatusToPost()) || (row.isStatusToPost())) && !row.grade.isExempt"\n                bb-translate translate-values="::{postCount: 1}">components.directives.grade.submission-list.gradingStatus.toPost.plural\n          </span>\n        </bb-submission-list-row>\n      </div>\n    </div>\n  </form>\n\n  <span role="status" class="sr-only" ng-if="(!submissionList.isGroup && !(submissionList.totalItemsOnList==submissionList.totalItems))"\n        bb-translate translate-values="{totalOnList:{{submissionList.totalItemsOnList}},totalStudentsFound: {{submissionList.totalItems}}}">\n    components.directives.grade.submission-list.gradingStatus.totalStudentOnList\n  </span>\n  <span role="status" class="sr-only" ng-if="(!submissionList.isGroup && (submissionList.totalItemsOnList==submissionList.totalItems))"\n        bb-translate translate-values="{totalOnList:{{submissionList.totalItemsOnList}}}">\n    components.directives.grade.submission-list.gradingStatus.studentOnList\n  </span>\n  <span role="status" class="sr-only" ng-if="(submissionList.isGroup && !(submissionList.totalItemsOnList==submissionList.totalItems))"\n        bb-translate translate-values="{totalOnList:{{submissionList.totalItemsOnList}},totalGroupsFound: {{submissionList.totalItems}}}">\n    components.directives.grade.submission-list.gradingStatus.totalGroupsOnList\n  </span>\n  <span role="status" class="sr-only" ng-if="(submissionList.isGroup && (submissionList.totalItemsOnList==submissionList.totalItems))"\n        bb-translate translate-values="{totalOnList:{{submissionList.totalItemsOnList}}}">\n    components.directives.grade.submission-list.gradingStatus.groupsOnList\n  </span>\n  <div ng-if="submissionList.showControls && submissionList.showPagination">\n    <bb-paging-selector\n      page="submissionList.currentPage"\n      number-of-pages="submissionList.numberOfPages"\n      on-page-change="submissionList.onChangePageFunction"\n      compact="submissionList.isSmallBreakpoint"\n      class-name="submission-list-pagination"\n      analytics-id="components.directives.grade.submissionList"\n    />\n  </div>\n</div>\n'},VcPJ:function(e,t,s){},X8JP:function(e,t,s){"use strict";s.d(t,"a",(function(){return o})),s.d(t,"b",(function(){return r}));var i=s("Vsv2"),n=s("pjml"),a=s("0JpG");const o="ultraUi.components.services.cloudDrive.rteCloudStorageIntegrationModal",r="RteCloudStorageIntegrationService";class d{constructor(e,t,s,i){this.$q=e,this.cloudDriveService=t,this.CloudDriveModel=s,this.bbLocalize=i}initialize(){return this.cloudDriveService.isCloudServiceAvailable().then((e=>this.isCloudServiceAvailable=e))}openFilePicker(e){const t=this.bbLocalize.getLocale(e);return this.cloudDriveService.cloudDriveStorage.openFilePicker(t,!0).then((e=>{if(e){const t=[];return e.forEach((s=>{const i=(e=>e.account+"|"+e.id)(s),n=this.CloudDriveModel.$new("CloudStorageIntegration").contents.$new(i).$fetch({accessToken:e[0].bearer_token.key}).$asPromise();t.push(n)})),this.$q.all(t).then((t=>t.map((t=>({id:t.id,cloudStorageIntegrationAccessToken:e[0].bearer_token.key,name:t.name,size:t.size,type:t.type,updatedTime:t.updatedTime,webLocation:t.webLocation})))))}return this.$q.reject()}))}getModalCallback(e){return()=>this.cloudDriveService.cloudDriveStorage?this.openFilePicker(e):this.cloudDriveService.initializeCloudDrive().then((()=>this.openFilePicker(e)))}}d.$inject=["$q",i.b,n.h.serviceName,a.serviceName],angular.module(o,[i.a]).service(r,d)},XH1I:function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s("Llzl"),n=s("0JpG"),a=s("AuQm"),o=s("1ZbL");const r="ultra.components.directives.page.size.selector",d={Class:a.I,attributes:["analyticsId","className"],bindingNames:["pageSizeOptions","onPageSizeChange","initialPageSize"],renderLocalized:!0,withErrorModalBoundary:!1};i.module(r,[n.moduleName]).component("bbPageSizeSelector",Object(o.a)(d))},"XQ/u":function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s("D57K"),n=s("yC9S"),a=s("iq5i"),o=s("2Kra");const r="ultra.components.directives.sliderTabNavigation.sliderTabItemIcon";let d=class{};d=Object(i.a)([Object(n.a)({moduleName:r,componentName:"bbSliderTabItemIcon",template:o,bindings:{iconName:"<"},requireModules:[a.a]})],d)},aSyE:function(e,t){e.exports='\x3c!-- TODO: LRN-194211 - Remove ng-class when the feature flag behind the property is removed. --\x3e\n<div class="test-grading uit-submission-grading-wrapper"\n     ng-class="{\'slide-panel-open\': grading.isSlidePanelOpen(), \'isGradingBarAttemptNavigationEnabled\': grading.isGradingBarAttemptNavigationEnabled}">\n  <div class="panel-wrap">\n    <header class="panel-header">\n      <div class="columns medium-12 large-10">\n        <h1 class="panel-title" bb-translate>course.grades.submission-grading.title</h1>\n        <button class="left-off-canvas-toggle menu-toggle"\n                analytics-id="course.grades.submissionGrading.menu.button">\n          <bb-svg-icon size="small" icon="main-menu"></bb-svg-icon>\n          <span class="sr-only" bb-translate>course.grades.submission-grading.menu</span>\n        </button>\n      </div>\n    </header>\n    <section class="panel-content slide names-slider">\n      \x3c!-- TODO: Check if title should be editable & update can-edit & max-length --\x3e\n      <bb-panel-header\n        content="grading.column"\n        panel-title="grading.column.columnName"\n        can-edit="false"\n        show-visibility="false"\n        disable-restricted="true"\n        show-conversations="false"\n        show-course="true"\n        show-delete="false"\n        has-slider="true"\n        show-submissions-grading="::!grading.isOpenFromStudentList"\n        summary="grading.column.summary"\n        is-filtered="grading.isFiltered"\n        filtered-count="grading.membershipCount">\n      </bb-panel-header>\n\n      \x3c!-- START slide toggle --\x3e\n      <div class="panel-content-slide-toggle slide-toogle-container" ng-if="grading.canViewAttempts">\n        \x3c!-- left arrow --\x3e\n        <div class="panel-content-left-trigger center-icon carousel-arrow"\n             ng-attr-aria-disabled="{{!grading.carouselHelper.showPrevArrow()}}"\n             ng-disabled="!grading.carouselHelper.showPrevArrow()"\n             ng-if="::!grading.isOpenFromStudentList">\n          <button ng-show="grading.carouselHelper.showPrevArrow()"\n                  bb-translate-attrs="{\'aria-label\': \'course.grades.submission-grading.previous\'}"\n                  ng-click="grading.transitionTo(-1)"\n                  analytics-id="course.grades.submissionGrading.previousSubmission.button">\n            <bb-svg-icon size="medium" icon="back-arrow" role="presentation"></bb-svg-icon>\n          </button>\n        </div>\n\n        <div class="panel-content-center-trigger single-user" ng-if="!grading.groupId && grading.isOpenFromStudentList">\n          <span class="slider-name page-title assessment-exception">\n            <span class="submission-grading__username">\n              <bb-username user="grading.carouselHelper.currentRow.user" format="short"></bb-username>\n              <button\n                  class="assessment-exception__btn-tooltip"\n                  bb-complex-tooltip\n                  enhanced-tooltip="true"\n                  tooltip-position="top-center"\n                  tooltip-center-content="true"\n                  tooltip-enable-on-mouse-over-for-all-breakpoints="true"\n                  tooltip-enable-on-mouse-leave-for-all-breakpoints="true"\n                  tooltip-scope="grading.tooltipScope"\n                  tooltip-template="{{grading.getTooltipTemplate()}}"\n                  analytics-id="components.features.course.grades.submissionGrading.exception.button"\n                  ng-if="grading.shouldShowTimeExtraIcon"\n                  >\n                <bb-ui-icon-medium-time-extra></bb-ui-icon-medium-time-extra>\n              </button>\n            </span>\n          </span>\n        </div>\n\n        <div class="panel-content-center-trigger single-group" ng-if="grading.groupId && grading.isOpenFromStudentList">\n          <span class="slider-name" ng-class="\'slick_title\' + grading.groupId" bb-foundation-defer>\n            <bb-multi-user-usercard ng-show="grading.carouselHelper.currentRow.group.ui.users.length"\n                                    class="group-header"\n                                    users="grading.carouselHelper.currentRow.group.ui.users"\n                                    view="\'group-users\'"\n                                    group-users-title="grading.carouselHelper.currentRow.group.title"\n                                    list-header="grading.carouselHelper.currentRow.group.ui.membersText"\n                                    selected-user="grading.carouselHelper.currentRow.group.ui.submittedUser"\n                                    selected-text="{{grading.carouselHelper.currentRow.group.ui.submittedDate}}"\n                                    user-course-availabilities="grading.userCourseAvailabilities">\n            </bb-multi-user-usercard>\n            <span ng-if="grading.carouselHelper.currentRow.group.ui.users.length"\n                  bb-translate\n                  translate-values="{number: grading.carouselHelper.currentRow.group.ui.users.length}">\n              course.grades.submission-grading.members.pural\n            </span>\n          </span>\n        </div>\n\n        <div class="panel-content-center-trigger" ng-show="grading.attemptsWereDeleted || grading.carouselHelper.ready" ng-if="::!grading.isOpenFromStudentList">\n          <bb-next-peer-visibility-ftue\n            class="next-peer-guidance-ftue"\n            ng-if="grading.showNextPeerVisibilityFTUE()"\n          ></bb-next-peer-visibility-ftue>\n          <ul class="names-slide" ng-if="!grading.groupId"\n              bb-carousel="grading.namesCarousel"\n              slides-to-show="3"\n              before-slide-change="grading.contentCarousel.slide($direction)"\n              override-slide-click="grading.overrideSlideClick($toSlide)"\n              responsive="[{ media: \'small-only\', options: { slidesToShow: 1 } }]"\n              support-swipe="true"\n              initial-slide="grading.carouselHelper.initialSlide">\n            <li class="no-select" bb-carousel-slide ng-repeat="row in grading.carouselHelper.rows track by $index">\n              \x3c!-- since we use lazy loading (first show 1 row, then other rows), the data of $index = 0 will change, need auto-update="true" --\x3e\n              <button class="slider-name page-title"\n                      ng-if="$visible"\n                      analytics-id="course.grades.submissionGrading.user.button">\n                \x3c!-- Peer grading has a unique label for anonymous "Peer X", so use that in this case instead\n                of the default anonymous handled by bb-username directive --\x3e\n                <span ng-if="::grading.isPeerGradingAndAnonymousUser(row.user)"\n                      class="js-carousel-peer-username"\n                      bb-translate="course.grades.submission-grading.peer"\n                      translate-values="{peerNumber: $index + 1}"></span>\n                <bb-username ng-if="::!grading.isPeerGradingAndAnonymousUser(row.user)"\n                             user="row.user"\n                             format="short"\n                             class="ellipse username js-carousel-username"\n                             ng-attr-auto-update="{{::$index === 0}}"></bb-username>\n                <bb-ui-icon-small-time-extra ng-if="row.hasDueDateException"\n                                             class="time-extra-icon-carousel"\n                                             bb-translate-attrs="{\'aria-label\': \'course.grades.submission-grading.carouselStudentException\'}"></bb-ui-icon-small-time-extra>\n              </button>\n              <span class="slider-name page-title assessment-exception"\n                    ng-if="$visible">\n                <span ng-if="::grading.isPeerGradingAndAnonymousUser(row.user)"\n                      class="js-carousel-peer-username"\n                      bb-translate\n                      translate-values="{peerNumber: $index + 1}">course.grades.submission-grading.peer</span>\n                <span class="submission-grading__username">\n                  <bb-username ng-if="::!grading.isPeerGradingAndAnonymousUser(row.user)"\n                  user="row.user"\n                  format="short"\n                  class="ellipse username js-carousel-username"\n                  ng-class="{\'has-accommodation\': grading.carouselHelper.currentRow.hasDueDateException}"\n                  ng-attr-auto-update="{{::$index === 0}}"></bb-username>\n                  <button\n                      class="assessment-exception__btn-tooltip"\n                      bb-complex-tooltip\n                      enhanced-tooltip="true"\n                      tooltip-position="top-center"\n                      tooltip-center-content="true"\n                      tooltip-enable-on-mouse-over-for-all-breakpoints="true"\n                      tooltip-enable-on-mouse-leave-for-all-breakpoints="true"\n                      tooltip-scope="grading.tooltipScope"\n                      tooltip-template="{{grading.getTooltipTemplate()}}"\n                      analytics-id="components.features.course.grades.submissionGrading.exception.button"\n                      ng-if="grading.shouldShowTimeExtraIcon"\n                      >\n                    <bb-ui-icon-medium-time-extra></bb-ui-icon-medium-time-extra>\n                  </button>\n                </span>\n              </span>\n            </li>\n          </ul>\n          \x3c!-- Group Card --\x3e\n          <ul class="names-slide" ng-if="grading.groupId && !grading.isOpenFromStudentList"\n              bb-carousel="grading.namesCarousel"\n              slides-to-show="3" focus-on-select="true"\n              before-slide-change="grading.contentCarousel.slide($direction)"\n              override-slide-click="grading.overrideSlideClick($toSlide)"\n              prev-arrow=".panel-content-left-trigger" next-arrow=".panel-content-right-trigger" as-nav-for=".student-submission-content-wrapper"\n              responsive="[{ media: \'small-only\', options: { slidesToShow: 1 } }]"\n              initial-slide="grading.carouselHelper.initialSlide">\n            <li class="no-select group" bb-carousel-slide ng-repeat="row in grading.carouselHelper.rows track by $index">\n              <button class="slider-name page-title ellipse"\n                      ng-if="$visible"\n                      analytics-id="course.grades.submissionGrading.group.button">\n                <bdi>{{row.group.title}}</bdi>\n              </button>\n              <span class="slider-name group-title ellipse" ng-if="grading.carouselHelper.isCurrent($index)" ng-class="\'slick_title\' + grading.groupId" bb-foundation-defer>\n                <bb-multi-user-usercard ng-show="grading.carouselHelper.currentRow.group.ui.users.length"\n                                        users="grading.carouselHelper.currentRow.group.ui.users"\n                                        view="\'group-users\'"\n                                        group-users-title="row.group.title"\n                                        list-header="grading.carouselHelper.currentRow.group.ui.membersText"\n                                        selected-user="grading.carouselHelper.currentRow.group.ui.submittedUser"\n                                        selected-text="{{grading.carouselHelper.currentRow.group.ui.submittedDate}}"\n                                        user-course-availabilities="grading.userCourseAvailabilities">\n                </bb-multi-user-usercard>\n                \x3c!-- Group submissions sub title --\x3e\n                <span ng-if="grading.carouselHelper.currentRow.group.ui.users.length"\n                      bb-translate\n                      translate-values="{number: grading.carouselHelper.currentRow.group.ui.users.length}">\n                  course.grades.submission-grading.members.pural\n                </span>\n              </span>\n            </li>\n          </ul>\n        </div>\n\n        \x3c!-- right arrow --\x3e\n        <div class="panel-content-right-trigger center-icon carousel-arrow"\n             ng-attr-aria-disabled="{{!grading.carouselHelper.showNextArrow()}}"\n             ng-disabled="!grading.carouselHelper.showNextArrow()"\n             ng-if="::!grading.isOpenFromStudentList">\n          <button ng-show="grading.carouselHelper.showNextArrow()"\n                  bb-translate-attrs="{\'aria-label\': \'course.grades.submission-grading.next\'}"\n                  ng-click="grading.transitionTo(1)"\n                  analytics-id="course.grades.submissionGrading.nextSubmission.button">\n            <bb-svg-icon size="medium" icon="forward-arrow" role="presentation"></bb-svg-icon>\n          </button>\n        </div>\n      </div>\n      \x3c!-- END slide toggle --\x3e\n\n      \x3c!-- submission content: single slide slick navigated by slick toggle above --\x3e\n      <div class="student-submission-content-wrapper" ready="{{grading.carouselHelper.ready}}" ng-show="grading.carouselHelper.ready"\n           bb-sliding="grading.contentCarousel"\n           after-sliding="grading.carouselHelper.updateSlide(grading.namesCarousel.currentSlide)"\n      >\n        <div class="slider-submission-content">\n            <div class="slider-bar-container" ng-if="grading.canRenderSubmission()"\n                 ng-switch="grading.column.isMultipleAttempts() || grading.hasExceptionAttempts"\n                 ng-class="::{\'grading-bar-double\': grading.column.isMultipleAttempts() || grading.hasExceptionAttempts}">\n              <div class="grading-bar-wrapper">\n                \x3c!-- TODO: LRN-194211 - Remove below when the feature flag behind the property is removed. --\x3e\n                \x3c!-- final score  & attempt grading bars for multiple attempt assessment --\x3e\n                <bb-grading-bar ng-switch-when="true"\n                                ng-if="!grading.isGradingBarAttemptNavigationEnabled"\n                                is-exception-attempt="grading.hasExceptionAttempts"\n                                is-privileged="true"\n                                column="::grading.column"\n                                grade-detail="grading.carouselHelper.currentRow.grade"\n                                user="grading.carouselHelper.currentRow.user"\n                                on-update="grading.afterGradingBarUpdate(newGrade)"\n                                on-delete="grading.afterGradingBarDelete()"\n                                has-due-date-accommodation="grading.carouselHelper.currentRow.hasDueDateException"\n                                hide-grade="grading.slideoutPanelService.isRubricState() && grading.isSlidePanelOpen()"\n                                has-rubric-clear-confirmation-callout="grading.column.hasRubricAssociation()"\n                                row="grading.getSubmissionListRow()">\n                </bb-grading-bar>\n\n                \x3c!-- grading bar for multiple attempts assessment --\x3e\n                \x3c!-- TODO: LRN-194211 - Replace ng-class with class when the feature flag behind the property is removed. --\x3e\n                <div ng-switch-when="true" ng-class="{\'multiple-attempt-grading-bar\': grading.isGradingBarAttemptNavigationEnabled }">\n                  \x3c!-- grading bar for non-group multiple attempts assessments --\x3e\n                  <bb-grading-bar ng-if="::!grading.column.isGroupContent()"\n                    is-exception-attempt="grading.hasExceptionAttempts"\n                    is-privileged="true"\n                    disable-feedback-buttons="!grading.column.isScorm()"\n                    disable-rubric-action="!grading.column.isScorm()"\n                    enable-editable-input-mode="true"\n                    is-readonly="grading.isDelegatedGradingReadonly()"\n                    column="grading.column"\n                    attempt="grading.getAttempt(grading.carouselHelper.currentRow)"\n                    attempt-index="{{grading.getAttemptIndex(grading.carouselHelper.currentRow)}}"\n                    user="grading.carouselHelper.currentRow.user"\n                    save-as-override="grading.saveAsOverride"\n                    has-due-date-accommodation="grading.carouselHelper.currentRow.hasDueDateException"\n                    on-update="grading.afterGradingBarUpdate(newGrade)"\n                    on-delete="grading.afterGradingBarDelete()"\n                    hide-grade="grading.slideoutPanelService.isRubricState() && grading.isSlidePanelOpen()"\n                    show-comment="!grading.isSlidePanelOpen()"\n                    show-overflow-menu="grading.showOverflowMenu()"\n                    has-rubric-clear-confirmation-callout="grading.column.hasRubricAssociation()"\n                    row="grading.getSubmissionListRow()">\n                  </bb-grading-bar>\n\n                  \x3c!-- grading bar for group assessments with multiple attempts --\x3e\n                  <bb-grading-bar ng-if="::grading.column.isGroupContent()"\n                    is-exception-attempt="grading.hasExceptionAttempts"\n                    is-privileged="true"\n                    disable-feedback-buttons="!grading.column.isScorm()"\n                    disable-rubric-action="!grading.column.isScorm()"\n                    enable-editable-input-mode="true"\n                    is-readonly="grading.isDelegatedGradingReadonly()"\n                    column="grading.column"\n                    attempt="grading.getAttempt(grading.carouselHelper.currentRow)"\n                    attempt-index="{{grading.getAttemptIndex(grading.carouselHelper.currentRow)}}"\n                    user="grading.carouselHelper.currentRow.user"\n                    save-as-override="grading.saveAsOverride"\n                    has-due-date-accommodation="grading.carouselHelper.currentRow.hasDueDateException"\n                    on-update="grading.afterGradingBarUpdate(newGrade)"\n                    on-delete="grading.afterGradingBarDelete()"\n                    hide-grade="grading.slideoutPanelService.isRubricState() && grading.isSlidePanelOpen()"\n                    show-comment="!grading.isSlidePanelOpen()"\n                    show-overflow-menu="grading.showOverflowMenu()"\n                    has-rubric-clear-confirmation-callout="grading.column.hasRubricAssociation()"\n                    show-group-list="grading.column.isGroupContent()"\n                    row="grading.getSubmissionListRow()"\n                    user-course-availabilities="grading.userCourseAvailabilities"\n                    selected-user="grading.carouselHelper.currentRow.group.ui.submittedUser"\n                    selected-text="{{grading.carouselHelper.currentRow.group.ui.submittedDate}}"\n                    user-list="grading.carouselHelper.currentRow.group.ui.users">\n                  </bb-grading-bar>\n                </div>\n\n                \x3c!-- grading bar for single attempt assessment --\x3e\n                \x3c!-- TODO: LRN-194211 - Replace ng-class with class when the feature flag behind the property is removed. --\x3e\n                <div ng-switch-default ng-class="{\'single-attempt-grading-bar\': grading.isGradingBarAttemptNavigationEnabled }">\n                  \x3c!-- grading bar for non-peer single attempt assessments --\x3e\n                  <bb-grading-bar ng-if="!grading.isPeerGrading()"\n                                  is-exception-attempt="grading.hasExceptionAttempts"\n                                  is-privileged="true"\n                                  disable-feedback-buttons="!grading.column.isScorm()"\n                                  disable-rubric-action="!grading.column.isScorm()"\n                                  enable-editable-input-mode="true"\n                                  is-readonly="grading.isDelegatedGradingReadonly()"\n                                  row="grading.carouselHelper.currentRow"\n                                  column="::grading.column"\n                                  grade-detail="grading.carouselHelper.currentRow.grade"\n                                  attempt="grading.getAttempt(grading.carouselHelper.currentRow)"\n                                  user="grading.carouselHelper.currentRow.user"\n                                  on-update="grading.afterGradingBarUpdate(newGrade)"\n                                  on-delete="grading.afterGradingBarDelete()"\n                                  save-as-override="grading.saveAsOverride"\n                                  has-due-date-accommodation="grading.carouselHelper.currentRow.hasDueDateException"\n                                  hide-grade="grading.slideoutPanelService.isRubricState() && grading.isSlidePanelOpen()"\n                                  show-comment="!grading.isSlidePanelOpen()"\n                                  show-overflow-menu="grading.showOverflowMenu()"\n                                  selected-user="grading.carouselHelper.currentRow.group.ui.submittedUser"\n                                  selected-text="{{grading.carouselHelper.currentRow.group.ui.submittedDate}}"\n                                  user-list="grading.carouselHelper.currentRow.group.ui.users"\n                                  user-course-availabilities="grading.userCourseAvailabilities"\n                                  has-rubric-clear-confirmation-callout="grading.column.hasRubricAssociation()"></bb-grading-bar>\n\n                  \x3c!-- grading bar for peer assessments --\x3e\n                  <bb-grading-bar ng-if="grading.isPeerGrading()"\n                                  is-exception-attempt="grading.hasExceptionAttempts"\n                                  is-privileged="true"\n                                  disable-feedback-buttons="!grading.column.isScorm()"\n                                  disable-rubric-action="!grading.column.isScorm()"\n                                  enable-editable-input-mode="true"\n                                  is-readonly="grading.isDelegatedGradingReadonly()"\n                                  row="grading.carouselHelper.currentRow"\n                                  column="::grading.column"\n                                  on-feedback-icon-click="::grading.onFeedbackIconClick()"\n                                  grade-detail="grading.carouselHelper.currentRow.grade"\n                                  attempt="grading.getAttempt(grading.carouselHelper.currentRow)"\n                                  user="grading.carouselHelper.currentRow.user"\n                                  on-update="grading.afterGradingBarUpdate(newGrade)"\n                                  on-delete="grading.afterGradingBarDelete()"\n                                  save-as-override="grading.saveAsOverride"\n                                  has-due-date-accommodation="grading.carouselHelper.currentRow.hasDueDateException"\n                                  hide-grade="grading.isPeerReviewer || (grading.slideoutPanelService.isRubricState() && grading.isSlidePanelOpen())"\n                                  show-comment="!grading.isSlidePanelOpen()"\n                                  show-overflow-menu="grading.showOverflowMenu()"\n                                  selected-user="grading.carouselHelper.currentRow.group.ui.submittedUser"\n                                  selected-text="{{grading.carouselHelper.currentRow.group.ui.submittedDate}}"\n                                  user-list="grading.carouselHelper.currentRow.group.ui.users"\n                                  user-course-availabilities="grading.userCourseAvailabilities"\n                                  has-rubric-clear-confirmation-callout="grading.column.hasRubricAssociation()"></bb-grading-bar>\n                </div>\n                \x3c!-- TODO: LRN-194211 - Remove ng-ifs when the feature flag behind the property is removed. --\x3e\n                <div class="divider" ng-if="grading.column.isMultipleAttempts() && grading.isGradingBarAttemptNavigationEnabled"></div>\n                \x3c!-- final score  & attempt grading bars for multiple attempt assessment --\x3e\n                <bb-grading-bar ng-switch-when="true"\n                                ng-if="grading.isGradingBarAttemptNavigationEnabled"\n                                is-exception-attempt="grading.hasExceptionAttempts"\n                                is-privileged="true"\n                                column="::grading.column"\n                                grade-detail="grading.carouselHelper.currentRow.grade"\n                                user="grading.carouselHelper.currentRow.user"\n                                on-update="grading.afterGradingBarUpdate(newGrade)"\n                                on-delete="grading.afterGradingBarDelete()"\n                                has-due-date-accommodation="grading.carouselHelper.currentRow.hasDueDateException"\n                                hide-grade="grading.slideoutPanelService.isRubricState() && grading.isSlidePanelOpen()"\n                                has-rubric-clear-confirmation-callout="grading.column.hasRubricAssociation()"\n                                row="grading.getSubmissionListRow()"\n                                class="final-score-grading-bar">\n                </bb-grading-bar>\n              </div>\n\n              <div ng-if="grading.showBanner" class="information-banner">\n                <bb-ui-information-banner\n                  on-close="grading.hideBanner"\n                  message="grading.bannerMessage"\n                />\n              </div>\n\n              \x3c!-- assessment specific submission content --\x3e\n              <div class="slider-bar-content" ng-if="!grading.column.isScorm()" ng-switch="grading.isExternalSubmissions">\n                <div class="slider-bar-content-attempt" ng-switch-when="true">\n                  <bb-external-submission-canvas\n                    attempt="grading.getAttempt(grading.carouselHelper.currentRow)"\n                    class="slider-bar-content-attempt"\n                    has-rubric-association="grading.column.hasRubricAssociation()"\n                    questions="::grading.getQuestionsForAttempt()"\n                    is-any-question-editing="grading.isAnyQuestionEditing"\n                    use-navigation="true"\n                  ></bb-external-submission-canvas>\n                </div>\n                <div class="slider-bar-content-attempt" ng-switch-default>\n                  <bb-attempt-canvas-with-navigation attempt="grading.getAttempt(grading.carouselHelper.currentRow)"\n                                                     peer-reviewer="grading.isPeerReviewer"\n                                                     has-rubric-association="grading.hasRubricAssociation"\n                                                     class="submission-grading-attempt-canvas-with-navigation slider-bar-content-attempt"\n                                                     graded-question-attempts="grading.gradedQuestionAttempts"\n                                                     canvas-type="grading.AssessmentCanvasMode.AttemptGrading"\n                                                     is-any-question-editing="grading.isAnyQuestionEditing"\n                                                     ng-if="grading.showAttemptCanvas()">\n                  </bb-attempt-canvas-with-navigation>\n                </div>\n              </div>\n\n              <div ng-if="grading.column.isScorm() && grading.attemptDetail" id="scorm-report">\n                <bb-scorm-submission\n                  submission-detail="grading.attemptDetail"\n                  class-average-time="grading.classAverageTime"\n                  is-organization="grading.course.isOrganization">\n                </bb-scorm-submission>\n              </div>\n            </div>\n\n            <div class="is-empty-page is-empty-fade angular-animate" ng-if="!grading.isLoading && grading.carouselHelper.wasDeleted()">\n              <div class="is-empty-wrapper">\n                <div class="is-empty-explanation">\n                  <img src="./static/images/delete-illustration.svg" bb-translate bb-translate-attrs="{\'alt\':\'course.grades.submission-grading.attemptDeleted\'}" aria-hidden="true"/>\n                  <p class="is-empty-heading js-grading-attempt-deleted" bb-translate>course.grades.submission-grading.attemptDeleted</p>\n                </div>\n              </div>\n            </div>\n        </div>\n\n      </div>\n\n      <div class="spinner bb-secondary-color-2" ng-if="grading.isLoading" aria-hidden="true"></div>\n    </section>\n  </div>\n\n  <div ui-view="submission-grading-peek"></div>\n</div>\n<div class="hide"\n     bb-confirmation-needed="x-bb-close-without-saving"\n     show-type="always"\n     modal-name="submission-question-regrading"\n     ng-click="grading.closeWithoutSaving()"\n     analytics-id="course.grades.submission-grading.confirmClose"\n    ></div>\n'},dkOF:function(e,t,s){},e0uO:function(e,t,s){"use strict";var i;!function(e){e.QuestionReview="QuestionReview",e.AttemptAuthoring="AttemptAuthoring",e.AttemptGrading="AttemptGrading",e.AttemptReview="AttemptReview"}(i||(i={})),t.a=i},eAnr:function(e,t,s){"use strict";s.d(t,"a",(function(){return d})),s.d(t,"c",(function(){return l})),s.d(t,"b",(function(){return c}));var i=s("Llzl"),n=s("g7Mf"),a=s("TnpK"),o=s("uFkY"),r=s("zGdY");const d="ultra.services.feedback",l="feedbackService",c="engagement-submissions-list:reload-on-feedback-save";class u{constructor(e,t){this.$q=e,this.$sce=t,this.emptyFeedback=()=>this.$q.when({}),this.fetchAttemptFeedback=e=>e.grade.attempts.$fetch().$asPromise().then((t=>(e.grade.attempts=t,{feedbackToUser:t[0]&&t[0].feedbackToUser,feedback:this.$sce.trustAsHtml(t[0]&&t[0].feedbackToUser?t[0].feedbackToUser.rawText:"")}))),this.findAttemptFeedback=e=>{const t=e.attemptsReadyToPost[0];return e.grade.attempts.$find(t.id).$asPromise().then((e=>e.feedbackToUser?{feedbackToUser:e.feedbackToUser,feedback:e.feedbackToUser.rawText}:this.emptyFeedback()))},this.resolveGradeFeedback=e=>this.$q.when({feedbackToUser:e.grade.instructorFeedback,feedback:this.$sce.trustAsHtml(e.grade.instructorFeedback.rawText)})}}u.$inject=["$q","$sce"];class b{constructor(e,t,s,i,n){this.$injector=e,this.$q=t,this.$rootScope=s,this.discussionService=i,this.ultraStateService=n,this.loadFeedbackFromRow=e=>e&&e.grade?this.hasGradeFeedback(e)?this.loadHelper.resolveGradeFeedback(e):this.needsGrading(e)&&this.hasAttemptReadyToPost(e)?this.loadHelper.findAttemptFeedback(e):this.loadHelper.fetchAttemptFeedback(e):this.loadHelper.emptyFeedback(),this.needsGrading=e=>e.grade&&r.J.NeedsGrading===e.grade.status,this.hasAttemptReadyToPost=e=>e.attemptsReadyToPost&&e.attemptsReadyToPost[0],this.hasGradeFeedback=e=>e.grade&&e.grade.instructorFeedback,this.refreshDiscussionPanel=()=>{this.$rootScope.$broadcast("reload-discussion-panel")},this.refreshAfterEngagementFeedbackSave=e=>{this.$rootScope.$broadcast(c,e)},this.refreshAfterAssessmentAttemptFeedbackSave=(e,t)=>Object(o.b)(this.$rootScope,e,t),this.refreshAfterIndividualfeedbackSave=e=>Object(o.c)(this.$rootScope,e),this.refreshGradeGridView=(e,t)=>{this.$rootScope.$broadcast(o.a,this.getCurrentColumn().id,t,null,e)},this.getCurrentColumn=()=>this.discussionService.column,this.getOrCreateGrade=e=>{const t=this.getCurrentColumn().grades,s=t.find((t=>t.user.$pk===e.user.id));return s?this.$q.when(s):t.$new().withParams({userId:e.user.id}).$save().$asPromise()},this.loadHelper=e.instantiate(u)}}b.$inject=["$injector","$q","$rootScope",n.c,a.d];i.module(d,[]).service(l,b)},fL5R:function(e,t){e.exports='<bb-modal id="peer-confirm-submit-feedback-modal" class="notification success"\n          modal-aria-type="alertdialog"\n          modal-title-key="course.grades.submission-grading.modal.title.review"\n          modal-translate-options="grading.submitModalTranslateOptions"\n          analytics-id-tag-prefix="course.content.assessment.test.modal.confirmSubmitAttemptAlert">\n  <div name="modal-contents">\n    <p bb-translate>course.grades.submission-grading.modal.body.review</p>\n  </div>\n  <button name="modal-footer-button-primary" class="button confirm-ok js-primary-button" ng-click="$parent.$close()" bb-translate course-org-token-resolver analytics-id="course.content.assessment.test.modal.confirmSubmitAttemptAlert.submit">\n    course.content.assessment.test.modal.confirmSubmitAttemptAlert.submit\n  </button>\n  <button name="modal-footer-button-secondary" class="button button--secondary confirm-cancel js-secondary-button" ng-click="$parent.$dismiss()" bb-translate analytics-id="global.cancel">global.cancel</button>\n</bb-modal>\n'},iq5i:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));var i=s("zYa8"),n=s("0ZnS");const a="ultra.components.directives.bbUiIcon.medium.SafeAssign";Object(i.a)(n.a,a,"bbUiIconMediumSafeAssign")},jO50:function(e,t){e.exports='<div\n  class="slider-tab-navigation-desktop"\n  ng-style="{\'min-height\': sliderTabNavigation.desktopViewHeight}"\n>\n  <div\n    class="slider-tab-navigation-desktop__main-section slider-tab-navigation-desktop__main-section-scrollable"\n    ng-style="{\'max-height\': sliderTabNavigation.mainSectionHeight}">\n    <div ng-transclude></div>\n  </div>\n\n  <div\n    class="slider-tab-navigation-desktop__browsable-section"\n    id="slider-tab-browsable-section"\n    role="region"\n    aria-labelledby="slider-tab-browsable-section-toggle-button slider-tab-browsable-section-tabIcon-button"\n    ng-class="{\n      \'slider-tab-navigation-desktop__browsable-section--expanded\': sliderTabNavigation.isSliderTabExpanded,\n      \'slider-tab-navigation-desktop__browsable-section--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n    }"\n  >\n    <div ng-if="sliderTabNavigation.shouldRenderTabs()">\n      <div bb-first-time-container>\n        <div class="guidance-wrapper">\n          <div bb-guidance-target component-key="components.directives.slider-tab-navigation.ftue.browsable-tabs">\n            <ul\n              class="slider-tab-navigation-desktop__browsable-tabs"\n              bb-arrow-key-navigation="{ tabDirection: \'vertical\', layout: \'rows\'}"\n            >\n              <li\n                class="slider-tab-navigation-desktop__tab-container"\n                ng-repeat="tab in sliderTabNavigation.scope.tabs.browsableSection.browsableTabs"\n                bb-arrow-key-container\n              >\n                <button\n                  id="{{\'slider-tab-\' + tab.nameId}}"\n                  class="slider-tab-navigation-desktop__tab"\n                  ng-class="{\n                    \'slider-tab-navigation-desktop__tab--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n                  }"\n                  ng-click="sliderTabNavigation.goToTab(tab)"\n                  analytics-id="{{::tab.analyticsIdPrefix}}.li"\n                  bb-arrow-key-destination\n                  ng-keydown="sliderTabNavigation.handleTabKeyDown($event, tab)"\n                  bb-focus="tab.nameId === sliderTabNavigation.nextTabFocusNameId"\n                  aria-expanded="false"\n                  bb-translate-attrs="{\n                    \'aria-label\': !sliderTabNavigation.isSliderTabExpanded ? \'components.directives.slider-tab-navigation.ax-only.\' + tab.nameId : null\n                  }"\n                >\n                  <div class="slider-tab-navigation-desktop__tab-details"\n                    ng-class="{\n                      \'slider-tab-navigation-desktop__tab-details--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n                    }"\n                  >\n                    <bb-slider-tab-item-icon icon-name="tab.iconName"></bb-slider-tab-item-icon>\n\n                    <div\n                      class="slider-tab-navigation-desktop__browsable-section-title"\n                      ng-class="{\n                        \'slider-tab-navigation-desktop__browsable-section-title--hidden\': !sliderTabNavigation.isSliderTabExpanded || sliderTabNavigation.isTransitioning\n                      }"\n                    >\n                      {{tab.title}}\n                    </div>\n                  </div>\n\n                  <i\n                    class="icon-chevron-right slider-tab-navigation-desktop__tab-navigation-icon"\n                    ng-class="{\n                      \'slider-tab-navigation-desktop__tab-navigation-icon--hidden\': !sliderTabNavigation.isSliderTabExpanded || sliderTabNavigation.isTransitioning\n                    }"\n                    role="presentation"\n                  >\n                  </i>\n                </button>\n              </li>\n            </ul>\n          </div>\n\n          <bb-guidance\n            class="guidance-element-overlay slider-tab-navigation-desktop__browsable-section-guidance"\n            component-key="components.directives.slider-tab-navigation.ftue.browsable-tabs"\n          >\n            <div ng-if="!sliderTabNavigation.isStudent">\n              <div class="slider-tab-navigation-desktop__browsable-section-guidance-title" bb-translate>\n                components.directives.slider-tab-navigation.ftue.instructor-title\n              </div>\n              <span class="slider-tab-navigation-desktop__browsable-section-guidance-message" bb-translate>\n                components.directives.slider-tab-navigation.ftue.instructor-message\n              </span>\n            </div>\n\n            <div ng-if="sliderTabNavigation.isStudent">\n              <div class="slider-tab-navigation-desktop__browsable-section-guidance-title" bb-translate>\n                components.directives.slider-tab-navigation.ftue.student-title\n              </div>\n              <span class="slider-tab-navigation-desktop__browsable-section-guidance-message" bb-translate>\n                components.directives.slider-tab-navigation.ftue.student-message\n              </span>\n            </div>\n          </bb-guidance>\n        </div>\n      </div>\n    </div>\n\n    <div class="slider-tab-navigation-desktop__browsable-main-section" ng-if="sliderTabNavigation.activeTab" ng-class="{\'-loading\': sliderTabNavigation.showLoader}">\n      <div\n        class="slider-tab-navigation-desktop__browsable-section-header"\n        ng-class="{\n          \'slider-tab-navigation-desktop__browsable-section-header--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n        }"\n      >\n        <button\n          analytics-id="{{::sliderTabNavigation.activeTab.analyticsIdPrefix}}.activeTab.goBack.button"\n          ng-click="sliderTabNavigation.goBack()"\n          ng-if="sliderTabNavigation.activeTab.nameId !== sliderTabNavigation.scope.tabs.browsableSection.main.nameId"\n          class="slider-tab-navigation-desktop__browsable-section-go-back"\n          ng-class="{\n            \'slider-tab-navigation-desktop__browsable-section-go-back--hidden\': !sliderTabNavigation.isSliderTabExpanded\n          }"\n          ng-keydown="sliderTabNavigation.handleBackArrowKeyDown($event)"\n          bb-translate-attrs="{\'aria-label\': \'components.directives.slider-tab-navigation.ax-only.back-arrow\'}"\n          aria-expanded="true"\n        >\n          <bb-svg-icon\n            size="medium" icon="back-arrow"\n            class="slider-tab-navigation-desktop__browsable-section-go-back-arrow-icon"\n            ng-class="{\n              \'slider-tab-navigation-desktop__browsable-section-go-back-arrow-icon--hidden\': !sliderTabNavigation.isSliderTabExpanded || sliderTabNavigation.isTransitioning\n            }"\n          >\n          </bb-svg-icon>\n        </button>\n\n        <div\n          class="slider-tab-navigation-desktop__browsable-section-details"\n          ng-class="{\n            \'slider-tab-navigation-desktop__browsable-section-details--is-active\': sliderTabNavigation.activeTab.nameId !== sliderTabNavigation.scope.tabs.browsableSection.main.nameId,\n            \'slider-tab-navigation-desktop__browsable-section-details--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n          }"\n        >\n          <button\n            analytics-id="{{::sliderTabNavigation.activeTab.analyticsIdPrefix}}.collapsed.button"\n            class="slider-tab-navigation-desktop__browsable-section-collapsed-button"\n            ng-class="{\n              \'slider-tab-navigation-desktop__browsable-section-collapsed-button--active\': !sliderTabNavigation.isSliderTabExpanded\n            }"\n            aria-controls="slider-tab-browsable-section"\n            aria-expanded="{{sliderTabNavigation.isSliderTabExpanded}}"\n            id="slider-tab-browsable-section-tabIcon-button"\n            ng-click="sliderTabNavigation.toggleVisibility()"\n            bb-translate-attrs="{\'aria-label\': \'components.directives.slider-tab-navigation.ax-only.\' + sliderTabNavigation.activeTab.nameId}"\n          >\n            <bb-slider-tab-item-icon icon-name="sliderTabNavigation.activeTab.iconName"></bb-slider-tab-item-icon>\n          </button>\n\n          <bb-slider-tab-item-icon\n            icon-name="sliderTabNavigation.activeTab.iconName"\n            class="slider-tab-navigation-desktop__browsable-section-icon"\n            ng-class="{\n              \'slider-tab-navigation-desktop__browsable-section-icon--active\': sliderTabNavigation.isSliderTabExpanded\n            }"\n          >\n          </bb-slider-tab-item-icon>\n\n          <h2\n            ng-if="sliderTabNavigation.activeTab.nameId === sliderTabNavigation.scope.tabs.browsableSection.main.nameId"\n            tabindex="-1"\n            class="slider-tab-navigation-desktop__browsable-section-title slider-tab-navigation-desktop__browsable-section-title_is-header"\n            ng-class="{\n              \'slider-tab-navigation-desktop__browsable-section-title--hidden\': !sliderTabNavigation.isSliderTabExpanded || sliderTabNavigation.isTransitioning\n            }"\n          >\n            {{sliderTabNavigation.activeTab.title}}\n          </h2>\n\n          <h1\n            ng-if="sliderTabNavigation.activeTab.nameId !== sliderTabNavigation.scope.tabs.browsableSection.main.nameId"\n            bb-focus\n            tabindex="-1"\n            class="slider-tab-navigation-desktop__browsable-section-title slider-tab-navigation-desktop__browsable-section-title_is-header"\n            ng-class="{\n              \'slider-tab-navigation-desktop__browsable-section-title--hidden\': !sliderTabNavigation.isSliderTabExpanded || sliderTabNavigation.isTransitioning\n            }"\n          >\n            {{sliderTabNavigation.activeTab.title}}\n          </h1>\n        </div>\n      </div>\n\n      <div ng-if="!sliderTabNavigation.showLoader" class="slider-tab-navigation-desktop__browsable-section-content">\n        <div ui-view="{{sliderTabNavigation.viewName}}"\n          ng-if="!sliderTabNavigation.shouldHideView"\n          class="slider-tab-navigation-desktop__view"\n          ng-class="{\n            \'slider-tab-navigation-desktop__view--hidden\': !sliderTabNavigation.isSliderTabExpanded || sliderTabNavigation.isTransitioning\n          }"\n        >\n        </div>\n      </div>\n      <div ng-if="sliderTabNavigation.showLoader" class="spinner bb-secondary-color-2"></div>\n    </div>\n    <div\n      class="slider-tab-navigation-desktop__collapsible-menu"\n      ng-class="{\n        \'slider-tab-navigation-desktop__collapsible-menu--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n      }"\n    >\n      <div bb-first-time-container>\n        <div class="guidance-wrapper">\n          <button\n            bb-tooltip\n            enhanced-tooltip="true"\n            tooltip-class-names="slider-tab-navigation-desktop__collapsible-button-tooltip"\n            tooltip-position="left-center"\n            tooltip-left-adjust-percent="-5"\n            tooltip-top-adjust-percent="50"\n            tooltip-disable-on-medium-down-breakpoint="true"\n            title="{{sliderTabNavigation.getTooltipText()}}"\n            tooltip-hide-on-activation="true"\n            tooltip-disable-on-focus="true"\n            bb-guidance-target\n            component-key="components.directives.slider-tab-navigation.ftue.collapsible-button"\n            class="slider-tab-navigation-desktop__collapsible-button"\n            analytics-id="sliderTab.toggleVisibility.button"\n            aria-controls="slider-tab-browsable-section"\n            aria-expanded="{{sliderTabNavigation.isSliderTabExpanded}}"\n            id="slider-tab-browsable-section-toggle-button"\n            ng-class="{\n              \'slider-tab-navigation-desktop__collapsible-button--collapsed\': !sliderTabNavigation.isSliderTabExpanded\n            }"\n            ng-click="sliderTabNavigation.toggleVisibility()"\n          >\n            <span\n              class="slider-tab-navigation-desktop__collapsible-arrow"\n              ng-class="{\'slider-tab-navigation-desktop__collapsible-arrow--collapsed\': !sliderTabNavigation.isSliderTabExpanded}"\n            >\n              <bb-svg-icon class="slider-tab-navigation-desktop__collapsible-arrow-icon" size="small" icon="arrow-left"></bb-svg-icon>\n            </span>\n          </button>\n          <div\n            ng-if="sliderTabNavigation.activeTab.nameId !== sliderTabNavigation.scope.tabs.browsableSection.main.nameId && sliderTabNavigation.isSliderTabExpanded"\n            tabindex="0"\n            ng-focus="sliderTabNavigation.handleLastElementFocus()"\n          >\n          </div>\n\n          <bb-guidance\n            class="guidance-element-overlay slider-tab-navigation-desktop__collapsible-section-guidance"\n            ng-if="sliderTabNavigation.tabsHasBeenSet"\n            component-key="components.directives.slider-tab-navigation.ftue.collapsible-button"\n          >\n            <div class="slider-tab-navigation-desktop__collapsible-section-guidance-content">\n              <div class="slider-tab-navigation-desktop__collapsible-section-guidance-header">\n                <span class="slider-tab-navigation-desktop__collapsible-section-guidance-title" bb-translate>\n                  components.directives.slider-tab-navigation.ftue.collapsible-panel-title\n                </span>\n                <button\n                  analytics-id="sliderTab.collapseAndExpand.ftue.close.button"\n                  aria-controls="slider-tab-navigation-desktop__collapsible-section-guidance"\n                  class="slider-tab-navigation-desktop__collapsible-section-guidance-close"\n                  tabindex="-1"\n                >\n                  <bb-svg-icon size="small" icon="close"></bb-svg-icon>\n                </button>\n              </div>\n              <span class="slider-tab-navigation-desktop__collapsible-section-guidance-message" bb-translate>\n                components.directives.slider-tab-navigation.ftue.collapsible-panel-message\n              </span>\n              <button\n                analytics-id="sliderTab.collapseAndExpand.ftue.button"\n                aria-controls="slider-tab-navigation-desktop__collapsible-section-guidance"\n                class="slider-tab-navigation-desktop__collapsible-section-guidance-button"\n                tabindex="-1"\n                bb-translate\n              >\n                components.directives.slider-tab-navigation.ftue.collapsible-panel-button\n              </button>\n            </div>\n          </bb-guidance>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},kIfn:function(e,t){e.exports='<svg viewBox="0 0 240 186" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M238.484 37.43a67.869 67.869 0 0 1-1.648 16.812c-62.272 2.694-124.644 2.145-186.966 1.596-15.93-.15-32.56 1.048-48.34-.549-4.494-16.412 15.381-13.818 25.668-14.217a5941.954 5941.954 0 0 1 51.885-1.596 5869.139 5869.139 0 0 1 102.722-1.796c4.644-.05 56.679-.55 56.679-.25ZM237.735 75.892c1.748-6.036 2.297-12.421 1.698-18.657-11.635-.898-23.271.748-34.856 2.145-59.027 6.984-118.702 6.635-178.128 4.19-5.842-.249-18.277-2.843-23.27.749C-.967 67.262-.118 75.643.581 79.933c15.23 1.447 31.56-.399 46.891-.698 15.33-.25 30.662-.549 45.993-.799l93.033-1.646c4.694-.1 50.587 1.297 51.236-.898ZM.382 130.218c79.55-7.583 159.451-.399 238.952-8.979-.749-9.628-1.449-19.256-2.198-28.884-.05-.749-2.097-3.393-3.046-3.193-31.56 5.537-211.435 5.886-222.621 4.989-6.442-.499-5.494 1.646-7.142 11.922-.4 2.295-3.246 24.045-3.945 24.145Z" fill="#009A8F"/><path d="M204.327 32.392c2.447.698 5.144.748 7.391-.35 2.297-1.097 4.045-3.442 3.895-5.986-3.496 0-6.642-1.796-9.688-3.542-.849-.499-1.698-.997-2.097-1.895-.3-.799-.2-1.846-.799-2.445-.3-.3-.7-.399-1.099-.499-.949-.25-2.097-.299-2.846.3-.7.548-.899 1.496-.999 2.344-.599 5.538.549 10.526 6.242 12.073ZM147.298 165.537c-2.447.699-5.143.748-7.39-.349-2.298-1.098-4.045-3.442-3.896-5.986 3.496 0 6.642-1.796 9.688-3.542.849-.499 1.698-.998 2.098-1.896.299-.798.199-1.846.799-2.444.299-.3.699-.399 1.098-.499.949-.25 2.098-.299 2.847.299.699.549.899 1.497.998 2.345.6 5.487-.549 10.526-6.242 12.072Z" fill="#F6AC3D"/><path d="M16.262 158.703c-.2 1.646-.5 3.342-1.448 4.639-.949 1.347-2.897 2.095-4.295 1.297-.849-.499-1.448-1.446-2.447-1.646-1.648-.299-2.596 2.145-1.648 3.492.95 1.347 2.747 1.746 4.395 1.796 2.946.15 6.242-.399 8.14-2.694.899-1.097 1.348-2.444 1.797-3.791 3.246-10.027 5.494-20.653 4.345-31.129-7.99-1.197-6.891 4.091-7.191 9.977-.35 6.136-.849 12.122-1.648 18.059ZM203.228 155.859c.5 1.148 1.099 2.295 2.098 3.093 1.298 1.098 3.046 1.447 4.744 1.497 1.748.05 3.545-.25 4.894-1.347 1.348-1.098 1.997-3.143 1.148-4.59l-6.442 1.647c-.549.149-1.148.299-1.648.049-.998-.399-1.148-1.696-1.148-2.793.05-6.236.1-12.521.1-18.757 0-2.445.349-11.574-4.744-7.782-2.497 1.895-1.748 10.226-1.798 12.87-.05 5.537.549 11.075 2.796 16.113Z" stroke="#009A8F" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M103.353 104.726c43.795-.548 87.641-.598 131.436-.199M4.477 106.772c8.59-.25 17.228-.499 25.867-.699" stroke="#000" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M189.296 79.284c-.2 3.443-.35 6.935-.55 10.377 0 .349 0 .748.25.997.2.2.549.2.849.2h4.195c.349 0 .699 0 .999-.2.449-.299.499-.897.549-1.446.15-3.592.349-7.184.499-10.776-2.746-.099-5.493.05-8.19.499M20.357 82.278c-.15 2.843-.35 5.737-.5 8.58 0 .399 0 .798.25 1.048.2.199.55.249.9.249.998 0 1.997-.2 2.945-.549.45-3.392.65-6.784.55-10.176-2.148-.2-4.295-.1-6.442.249" stroke="#009A8F" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M1.53 55.29c.3-2.196-2.496-4.29 2.048-10.427 1.548-2.095 5.293-2.294 13.084-2.943 7.84-.648 29.862-1.247 29.862-1.247M175.563 46.709c6.292.1 12.584-.948 18.527-3.043.449-.15.998-.599.749-.998-.1-.15-.25-.2-.4-.25-1.897-.797-4.194-.698-5.992.3-.3.15-.599.4-.599.699 0 .249.199.399.349.548 3.546 3.243 8.989 3.043 13.783 2.644 3.396-.3 6.891-.598 9.937-2.095M164.027 64.369c24.719-5.637 50.088-8.381 75.456-8.231-1.398 6.934-2.796 13.868-4.195 20.852a189.606 189.606 0 0 1-24.969 2.245" stroke="#000" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M202.18 32.192a16.908 16.908 0 0 0-.55 4.19M206.624 33.14c-.1 1.297-.05 2.544.05 3.841M200.082 22.065c-2.047-.15-2.447.749-3.995.25M149.446 165.338a16.95 16.95 0 0 1 .549 4.19M145.001 166.286c.1 1.297.05 2.544-.05 3.841M151.543 155.211c2.197 1.147 2.247-.399 3.645.349" stroke="#A67243" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M162.03 167.034c-.05.05-.05.1 0 .149h.05c.35-.099.15-.399-.05-.149Z" stroke="#F6AC3D" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M150.744 152.667c-.05.049-.05.099 0 .149h.05c.35-.05.15-.349-.05-.149Z" stroke="#000" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M162.729 169.378s0 .05.05.05h.05c.749-.399-.4-.648-.1-.05ZM165.476 169.129s0 .05 0 0c.15.15.2-.1.05-.2-.05.05-.1.15-.05.2Z" stroke="#F6AC3D" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M200.482 19.172c-.05.05-.05.1 0 .15h.05c.35-.05.15-.35-.05-.15Z" stroke="#000" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M63.139 31.835h9.666c1.961.057 4.946 1.024 7.334 1.905 2.303.853 7.648 19.7 7.932 24.989l-1.706 26.666 6.71 22.259s-6.71 4.122-25.757 4.122-26.865-4.975-26.865-4.975l8.159-23.453-.682-27.462c.312-2.587 3.468-21.236 5.97-22.004 3.155-.966 7.363-2.104 9.239-2.047Z" fill="#DA80A0"/><path d="m50.26 43.264-2.387 12.622 1.82 47.021" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M77.268 34.053c2.757-1.109 5.856.34 6.794 3.155l9.61 29.566s2.074 8.614-3.839 10.291c-5.998 1.677-9.267-8.102-9.267-8.102l-6.397-29.082c-.54-2.417.768-4.89 3.099-5.828Z" fill="#DA80A0"/><path d="m56.401 81.5 28.6-14.669s5.287-2.275 7.732 2.018c3.269 5.8-2.445 8.728-2.445 8.728L61.15 89.403 56.401 81.5Z" fill="#DA80A0"/><path d="m49.55 85.423-10.433 3.753s-.626 1.99 2.445 1.648l8.585-3.07-.597-2.331Z" fill="#A67243"/><path d="M61.178 84.485 56.401 81.5s-6.795 3.411-6.795 3.525c0 .142-7.818 6.396-7.818 6.396l-4.946 7.392a.868.868 0 0 0 .255 1.194l.313.199a.835.835 0 0 0 1.166-.256l4.037-6.169 1.222-.995-3.184 8.045a.859.859 0 0 0 .597 1.081l.17.056a.87.87 0 0 0 1.024-.511l2.644-6.937.625-1.052-2.16 7.449a.858.858 0 0 0 .597 1.08l.17.057a.871.871 0 0 0 1.024-.512l2.644-6.937.568-.085-2.018 6.112a.862.862 0 0 0 .483.967c.426.199.938 0 1.109-.455l2.473-5.828.142-.369c1.763-.342 4.89-.313 7.022-4.492l4.748-1.592-1.337-4.378Z" fill="#A67243"/><path d="M85 66.859 49.55 85.423l-7.76 5.998-4.35 6.482" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M56.657 34.45c-2.643-1.364-5.884-.198-7.05 2.502L37.241 65.495s-2.9 8.386 2.843 10.603c5.827 2.246 10.006-7.164 10.006-7.164l9.126-28.343a5.21 5.21 0 0 0-2.559-6.14Z" fill="#DA80A0"/><path d="M72.18 85.707 46.45 66.433s-4.832-3.127-7.96.682c-4.207 5.174.967 9.012.967 9.012l26.723 16.545 5.998-6.965Z" fill="#DA80A0"/><path d="m78.263 90.711 9.637 5.458s.285 2.075-2.7 1.222l-7.932-4.463.995-2.217Z" fill="#A67243"/><path d="m64.902 91.905 4.406 2.388c1.393 4.463 4.492 5.003 6.169 5.6l.085.398 1.45 6.169a.848.848 0 0 0 1.024.626c.398-.086.653-.455.625-.882l-.91-6.425.54.171 1.422 7.278c.085.426.483.71.91.682l.17-.029a.866.866 0 0 0 .768-.966l-.882-7.704.455 1.137 1.422 7.278c.085.426.483.71.91.682l.17-.028a.868.868 0 0 0 .768-.967L82.64 98.87l1.052 1.194 2.928 6.766c.17.426.682.625 1.109.455l.34-.143c.456-.17.655-.682.456-1.137l-3.668-8.102s-6.652-7.477-6.623-7.619c.028-.142-6.084-4.634-6.084-4.634l-5.203 2.133-2.046 4.122Z" fill="#A67243"/><path d="m46.537 80.874 18.365 11.031 2.075-4.094M56.43 49.177l-6.368 19.729 28.23 21.435 6.623 7.591 2.218 4.975" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M38.157 99.863c0-7.506 6.681-9.695 11.457-9.695l19.019-9.949c4.776 0 22.743 11.143 22.743 19.644 0 8.5-2.673 15.976-26.183 15.976-23.51 0-27.035-8.471-27.035-15.976Z" fill="#F0E7D9"/><path d="m75.314 148.959 1.478 14.072-3.374 2.047-5.098-1.621-.966-15.437c.028.029 3.724-.483 7.96.939Z" fill="#A67243"/><path d="m68.274 163.363-.227 7.051s-1.421 1.364-.825 3.638c0 0 1.678 6.795 6.568 9.495 4.89 2.701 11.57 4.293 8.556-4.434l-5.6-16.148c-.199-1.393-1.848-1.336-8.472.398Z" fill="#009A8F"/><path d="M80.442 177.293s-2.473 1.734-5.345-1.336l-3.866-13.333s4.065-1.393 4.264-.625l4.947 15.294Z" fill="#84CCAA"/><path d="M75.408 161.728c.149-.048.31.034.358.183l4.946 15.295a.285.285 0 0 1-.54.175l-4.947-15.295a.284.284 0 0 1 .183-.358ZM68.36 170.432v.011c0 .008 0 .021.002.038l.01.154c.01.136.029.335.06.586.064.504.181 1.216.395 2.046.427 1.664 1.237 3.789 2.766 5.666 1.528 1.875 4.006 3.545 6.297 4.361 1.145.408 2.22.594 3.092.501.863-.092 1.502-.451 1.852-1.118a.285.285 0 1 1 .503.263c-.46.881-1.3 1.315-2.295 1.42-.988.105-2.154-.107-3.343-.531-2.379-.847-4.947-2.574-6.546-4.537-1.598-1.961-2.437-4.171-2.877-5.883a17.371 17.371 0 0 1-.407-2.116 12.866 12.866 0 0 1-.077-.824v-.017l.283-.01-.284.01a.284.284 0 1 1 .568-.02ZM76.71 168.185a.284.284 0 1 0-.155-.547l-2.53.711a.284.284 0 1 0 .154.547l2.53-.711ZM77.418 169.228a.284.284 0 0 1-.197.35l-2.53.711a.284.284 0 1 1-.154-.547l2.53-.711a.285.285 0 0 1 .35.197ZM77.673 171.256a.283.283 0 1 0-.148-.548l-2.53.682a.284.284 0 1 0 .148.549l2.53-.683ZM78.242 172.269a.284.284 0 0 1-.196.351l-2.502.711a.284.284 0 0 1-.155-.547l2.502-.711a.284.284 0 0 1 .35.196ZM78.529 174.354a.284.284 0 1 0-.154-.547l-2.53.711a.283.283 0 1 0 .153.547l2.53-.711Z" fill="#000"/><path d="m76.86 164.017-5.06.256c-.768.028-1.337.682-1.308 1.45.028.767.682 1.336 1.45 1.307l5.572-.284a.56.56 0 0 0 .483-.767l-.597-1.592c-.057-.256-.284-.398-.54-.37Z" fill="#DA80A0"/><path d="m77.275 155.952 5.856-50.915s.768-8.586-6.169-9.922c-11.286-2.161-10.689 9.41-10.689 9.41l.029 53.19 10.973-1.763Z" fill="#F0E7D9"/><path d="m45.464 127.268-9.723 14.726 2.283 3.212h5.563l9.069-13.532c-.029.029-2.7-4.321-7.192-4.406Z" fill="#A67243"/><path d="m43.84 144.996-2.469 6.608s.797 1.802-.62 3.679c0 0-4.133 5.647-9.682 6.288-5.55.64-12.334-.426-6.23-7.354l11.316-12.808c.713-1.213 2.217-.534 7.685 3.587Z" fill="#009A8F"/><path d="M27.292 153.258s1.629 2.544 5.451.795l8.643-10.864s-3.231-2.833-3.707-2.199l-10.387 12.268Z" fill="#84CCAA"/><path d="M37.863 140.773a.284.284 0 0 0-.4.033l-10.388 12.268a.285.285 0 1 0 .434.367l10.387-12.267a.285.285 0 0 0-.033-.401ZM41.075 151.502v.002l-.004.008-.017.035a12.005 12.005 0 0 1-.347.657c-.25.442-.629 1.056-1.141 1.743-1.028 1.376-2.585 3.035-4.712 4.19-2.126 1.153-5.053 1.757-7.482 1.641-1.214-.058-2.279-.294-3.05-.711-.764-.413-1.219-.988-1.288-1.739a.283.283 0 0 0-.31-.256.283.283 0 0 0-.256.309c.091.99.703 1.71 1.584 2.186.874.472 2.032.719 3.294.779 2.522.12 5.554-.502 7.779-1.71 2.223-1.206 3.839-2.932 4.896-4.349a17.31 17.31 0 0 0 1.181-1.802c.13-.23.227-.415.292-.544l.073-.149.02-.04.004-.011.002-.003v-.001l-.259-.118.26.118a.284.284 0 1 0-.518-.235ZM34.205 146.251a.284.284 0 1 1 .35-.448l2.07 1.619a.284.284 0 0 1-.35.448l-2.07-1.619ZM33.154 146.946a.284.284 0 0 0 .049.399l2.07 1.619a.284.284 0 1 0 .35-.448l-2.07-1.618a.285.285 0 0 0-.4.048ZM32.147 148.726a.285.285 0 0 1 .346-.452l2.08 1.593a.284.284 0 1 1-.345.451l-2.081-1.592ZM31.236 149.446a.284.284 0 0 0 .048.399l2.044 1.608a.285.285 0 1 0 .351-.447l-2.044-1.607a.284.284 0 0 0-.399.047ZM30.178 151.266a.284.284 0 1 1 .35-.448l2.07 1.619a.284.284 0 0 1-.35.448l-2.07-1.619Z" fill="#000"/><path d="m35.65 142.338 4.584 2.16c.699.318.976 1.139.658 1.838-.318.699-1.139.977-1.838.659l-5.046-2.381a.56.56 0 0 1-.155-.893l1.157-1.246c.15-.215.414-.26.64-.137Z" fill="#DA80A0"/><path d="m39.55 135.171 20.014-47.163s3.582-7.846 10.263-5.601c10.888 3.696 4.662 13.447 4.662 13.447l-26.296 46.253-8.643-6.936Z" fill="#F0E7D9"/><path d="m54.987 130.111 17.967-31.158s2.132-4.577 5.941.426" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="m75.526 22.664.284 11.855-4.918 7.988-4.691-7.675-.256-6.596 9.58-5.572Z" fill="#A67243"/><path d="M69.158 3.532c-5.913-.54-11.741 4.776-10.86 13.475.938 8.983 7.25 14.64 10.718 14.64 4.349 0 9.807-8.585 9.41-15.863-.399-7.277-3.071-11.655-9.268-12.252Z" fill="#A67243"/><path d="M63.705 14.413c.215-.227.52-.394.842-.409.322-.015.658.136.796.41M70.44 14.413c.215-.227.521-.394.843-.409.32-.015.658.136.796.41" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M64.394 18.355c.38 0 .689-.434.689-.97s-.308-.97-.689-.97c-.38 0-.689.434-.689.97s.309.97.689.97ZM71.436 18.355c.38 0 .688-.434.688-.97s-.308-.97-.688-.97c-.38 0-.69.434-.69.97s.31.97.69.97Z" fill="#000"/><path d="M67.697 17.831c.06 2.112-.912 3.456-.897 3.678.015.221.553.886 1.136.782M66.222 24.533s.87 1.125 4.025 0" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M76.919 16.552s1.563-1.791 2.473-.91c.91.882 1.649 5.004-1.734 5.43 0 0-3.099-.114-.74-4.52ZM59.833 16.552s-1.563-1.791-2.473-.91c-.91.882-1.65 5.004 1.734 5.43 0 0 3.099-.114.739-4.52Z" fill="#A67243"/><path d="M70.465 31.676s4.691-2.928 5.885-6.766M79.221 17.263s-1.308-.882-1.109 2.103c0 0 .54-1.194.626-.824M57.616 17.263s1.307-.882 1.108 2.103c0 0-.54-1.194-.625-.824M69.954 43.843l.17 9.95" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M77.26 34.69c.312-.995-.711-1.65-.597-2.73.312-2.928 1.904-5.401 2.956-8.073 2.132-5.459 2.53-13.078-.597-17.825-3.155-4.776-9.95-6.112-14.64-3.525-4.009 2.217-7.96 4.32-9.95 15.266-1.251 6.823-.683 9.95 1.336 13.22 2.018 3.809 7.277 8.272 7.76 13.616 0 0 2.161-1.137 3.298-3.383 0 0 4.634 3.355 5.373 5.43-.028.029 5.487-8.841 5.06-11.996ZM67.85 9.985c7.96.768 9.523 3.781 9.523 7.05 0 4.776-2.615 9.61-3.582 11.827-.739 1.705-1.108 3.809-.625 5.6-.938-1.08-2.7-1.592-3.781-2.331 0 0-8.5-3.44-10.149-10.69-.74-3.268-.142-12.309 8.614-11.456Z" fill="#DA80A0"/><path d="M77.402 13.766c-6.738-6.197-15.238-4.918-17.796.74-2.104 4.633-1.934 13.531 13.56 19.132 2.16.796 1.791 7.277-2.502 4.974M80.415 11.435c.91-12.65-12.992-12.281-16.488-9.012" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/><path d="M66.713 40.432a33.83 33.83 0 0 1-3.213 4.236c-.511-8.7-10.632-11.144-10.206-23.312.143-4.179 3.554-17.568 16.262-16.772M67.85 42.166c1.45.91 2.729 2.16 3.752 3.639.171.256.455.569.711.426a.865.865 0 0 0 .228-.227c1.051-1.507 1.734-3.326 2.388-5.089l2.302-6.225" stroke="#000" stroke-width=".569" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/></svg>'},mnBQ:function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s("Llzl"),n=s("0JpG"),a=s("kwLz"),o=s("1ZbL");const r="ultra.components.directives.feedback.feedbackAuthoring",d={Class:a.a,bindingNames:["analyticsId","panelTitle","panelSubtitle","primaryGraderFeedback","secondaryGradersFeedback","configProps","isInlineMode"],renderLocalized:!0};i.module(r,[n.moduleName]).component("bbFeedbackAuthoring",Object(o.a)(d))},n0bV:function(e,t,s){"use strict";s.d(t,"a",(function(){return r})),s.d(t,"b",(function(){return d}));var i=s("D57K"),n=s("aHpC"),a=s("IbyE"),o=s("9OUN");const r="ultra.components.services.grade",d="delegatedAttemptGradeAdapter";let l=class{constructor(e,t){this.$ngRedux=e,this.$q=t,this.subscribeToReduxStore()}subscribeToReduxStore(){this.$ngRedux.connect(null,(e=>Object(o.b)({loadGradesOnAttempt:a.X.delegatedAttemptGrade.loadDelegatedAttemptGradesOnAttempt,loadCompletedGradesByGrader:a.X.delegatedAttemptGrade.loadCompletedDelegatedAttemptGradesByGrader,patchGrade:a.X.delegatedAttemptGrade.patchDelegatedAttemptGrade,toggleGradeVisibility:a.X.delegatedAttemptGrade.toggleVisibilityOfDelegatedAttemptGrade},e)))(this)}getDelegatedAttemptGradesByGrader(e,t){return a.gc.delegatedAttemptGrade.getCompletedDelegatedAttemptGradesByGrader(this.$ngRedux.getState(),e,t)}getDelegatedAttemptGradesOnAttempt(e){return a.gc.delegatedAttemptGrade.getCompletedDelegatedAttemptGradesOnAttempt(this.$ngRedux.getState(),e)}getDelegatedAttemptByStagedAttemptId(e){return a.gc.delegatedAttemptGrade.getDelegatedAttemptByStagedAttemptId(this.$ngRedux.getState(),e)}loadDelegatedGradesByGrader(e){return this.$q.when(this.loadCompletedGradesByGrader(e)).then((()=>this.getDelegatedAttemptGradesByGrader(e.userId,e.columnId)))}loadDelegatedGradesOnAttempt(e){return this.$q.when(this.loadGradesOnAttempt(e)).then((()=>this.getDelegatedAttemptGradesOnAttempt(e.attemptId)))}patchDelegatedGradeAttempt(e){return this.$q.when(this.patchGrade(e)).then((()=>this.getDelegatedAttemptByStagedAttemptId(e.stagedAttemptId)))}toggleDelegatedGradeVisibility(e){return this.$q.when(this.toggleGradeVisibility(e)).then((()=>this.getDelegatedAttemptByStagedAttemptId(e)))}};l=Object(i.a)([Object(i.c)(0,Object(n.b)("$ngRedux")),Object(i.c)(1,Object(n.b)("$q"))],l);angular.module(r,[]).service(d,l)},nfhp:function(e,t){e.exports='<div bb-cache-compilation="assessment-feedback">\n  <div id="react-assessment-feedback-target">\n    <div ng-class="{\'panel-wrap\': !assessmentFeedback.isInlineMode}">\n      <div ng-if="assessmentFeedback.isFeedbackAuthoringPayloadLoaded">\n        <bb-feedback-authoring\n          ng-if="!assessmentFeedback.isLoading"\n          panel-title="assessmentFeedback.feedbackAuthoringPayload.panelTitle"\n          panel-subtitle="assessmentFeedback.feedbackAuthoringPayload.panelSubtitle"\n          primary-grader-feedback="assessmentFeedback.feedbackAuthoringPayload.primaryGraderFeedback"\n          secondary-graders-feedback="assessmentFeedback.feedbackAuthoringPayload.secondaryGradersFeedback"\n          config-props="assessmentFeedback.feedbackAuthoringPayload.configProps"\n          analytics-id="assessmentFeedback.feedbackAuthoringPayload.analyticsId"\n          is-inline-mode="assessmentFeedback.isInlineMode"\n        ></bb-feedback-authoring>\n      </div>\n      <div ng-if="assessmentFeedback.isLoading && !assessmentFeedback.isInlineMode" class=\'spinner bb-secondary-color-2\'></div>\n    </div>\n  </div>\n\n  <div\n    class="hide"\n    bb-confirmation-needed="x-bb-save-feedback"\n    modal-name="assessment-feedback"\n    show-type="always"\n    ng-click="assessmentFeedback.onClickSave(true, false);"\n    dismiss-callback="assessmentFeedback.closeConfirmationModalDismissed()"\n    other-choice-action="assessmentFeedback.dontSaveAction()"\n    analytics-id="course.content.assessment.assessmentFeedback.saveChanges"\n  ></div>\n</div>\n'},"r+pC":function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-medium-back-arrow",use:"icon-medium-back-arrow-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-back-arrow"><path d="M11 23L1 12 11 1M1 12h22" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},sZYy:function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-medium-goal",use:"icon-medium-goal-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-goal"><path stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M1 1h22v4H1zM6 20h12v3H6z" /><path d="M10 14v6M14 14v6" stroke-width="2" /><path d="M4 5c0 6 3 9 8 9s8-3 8-9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /><path d="M4 8H1c0 9.5 9 9 9 9M20 8h3c0 9.5-9 9-9 9" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(a);e.exports=a},seHs:function(e,t,s){"use strict";s.d(t,"d",(function(){return i})),s.d(t,"b",(function(){return n})),s.d(t,"a",(function(){return a})),s.d(t,"c",(function(){return o}));const i=25,n=50,a=100,o=[i,n,a]},u3gM:function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var i=s("Llzl"),n=s("0JpG"),a=s("AuQm"),o=s("1ZbL");const r="ultra.components.directives.paging.panel",d={Class:a.J,attributes:["analyticsId","className"],bindingNames:["page","compact","numberOfPages","onPageChange","elementSelectorToFocus"],renderLocalized:!0};i.module(r,[n.moduleName]).component("bbPagingSelector",Object(o.a)(d))},wtKk:function(e,t,s){"use strict";(function(e){s.d(t,"c",(function(){return C})),s.d(t,"a",(function(){return A})),s.d(t,"b",(function(){return y}));var i=s("D57K"),n=(s("dkOF"),s("r+pC"),s("Llzl")),a=s("jO50"),o=s("+fEV"),r=s("0JpG"),d=s("+e2k"),l=s("TnpK"),c=s("QaOk"),u=s("+4Px"),b=s("X455"),m=s("lEL+"),g=s("en1n"),h=s("oQrK"),p=s("XQ/u"),v=s("7cYF"),f=s("aHpC"),w=s("yC9S"),S=s("nsO7"),k=s("ZzR9");const C="ultra.components.directives.sliderTabNavigation",A="consultTabStatus",y="hideCurrentActiveSliderTabContent";let T=class{constructor(e,t,s,i,n,a,o,r){this.scope=e,this.$rootScope=t,this.tabElement=s,this.$q=i,this.ultraState=n,this.timeout=a,this.membership=o,this.localizeService=r,this.isDesktop=h.a.detect().desktop(),this.tabsHasBeenSet=!1,this.isSliderTabExpanded=!0,this.isTransitioning=!1,this.navigationBlocker={navigationPromise:null},this.closeParentPeek=!1,this.navigationBlockedWasHandled=!1,this.showLoader=!1,this.nextTabFocusNameId="",this.desktopViewHeight="initial",this.shouldHideView=!1,this.isStudent=this.membership.isStudentMembership(),this.registerStateListener(),this.largeStartBreakpoint=g.e().large.start,this.translatedCollapsedKey=this.localizeService.translateSync({locale:this.localizeService.getLocale(this.scope),key:"components.directives.slider-tab-navigation.collapsible-tooltip.collapse-message"}),this.translatedExpandedKey=this.localizeService.translateSync({locale:this.localizeService.getLocale(this.scope),key:"components.directives.slider-tab-navigation.collapsible-tooltip.expand-message"}),this.scope.$watch("tabs",(()=>{a((()=>{this.initTemplateView()}),this.scope)}),!0),this.timeout((()=>{this.calculateDesktopHeights(),this.scope.$apply()}),this.scope)}initTemplateView(){const e=this.getTabFromState();if(!e)return this.activeTab=this.isDesktop?this.scope.tabs.browsableSection.main:this.scope.tabs.transcludedSection,void(this.tabsHasBeenSet=!0);this.isDesktop&&e.nameId===this.scope.tabs.transcludedSection.nameId?this.ultraState.goPeekState(this.scope.tabs.browsableSection.main.stateRoute,this.scope.tabs.browsableSection.main.stateArgs).then((()=>{this.tabsHasBeenSet=!0})):(this.activeTab=e,this.tabsHasBeenSet=!0)}getTabFromState(e){const t=e?e.name:this.ultraState.current.name;return this.stateMatches(this.scope.tabs.transcludedSection.stateRoute,t)?this.scope.tabs.transcludedSection:this.stateMatches(this.scope.tabs.browsableSection.main.stateRoute,t)?this.scope.tabs.browsableSection.main:this.scope.tabs.browsableSection.browsableTabs.find((e=>this.stateMatches(e.stateRoute,t)))}stateMatches(e,t){return new RegExp(`${e}$`).test(t)}registerStateListener(){this.scope.$on(v.b,((e,t)=>{var s;(null===(s=this.activeTab)||void 0===s?void 0:s.enableModalBlockNavigation)&&(this.$rootScope.$broadcast(A,this.activeTab.nameId,t),t.navigationPromise&&!this.isSliderTabExpanded&&this.toggleVisibility())})),this.scope.$on("$stateChangeStart",((e,t,s,i)=>this.getTabFromState(i)?this.navigationBlockedWasHandled&&this.isDesktop&&this.activeTab.nameId===this.scope.tabs.transcludedSection.nameId?void this.ultraState.goPeekState(this.scope.tabs.browsableSection.main.stateRoute,this.scope.tabs.browsableSection.main.stateArgs):this.isClosingParent(t)||this.getTabFromState(t)?this.isDesktop&&this.stateMatches(this.scope.tabs.browsableSection.main.stateRoute,i.name)&&this.stateMatches(this.scope.tabs.transcludedSection.stateRoute,t.name)||this.isClosingParent(t)&&this.activeTab.enableModalBlockNavigation?(this.closeParentPeek=!0,this.checkTabStatusAndBlockNavigation(e)):!this.isClosingParent(t)&&this.isChangingTab(t)&&(this.closeParentPeek=!1,this.activeTab.enableModalBlockNavigation&&this.getTabFromState(i))?(this.nextTab=this.getTabFromState(t),this.checkTabStatusAndBlockNavigation(e)):(this.activeTab=this.getTabFromState(t),this.showLoader=!0,this.$q.resolve(void 0)):this.$q.resolve(void 0):this.$q.resolve(void 0))),this.scope.$on("$stateChangeSuccess",((e,t,s,i)=>{if(!this.getTabFromState(i))return this.$q.resolve(void 0);this.navigationBlockedWasHandled=!1,this.showLoader=!1})),this.scope.$on(k.a.$locationChangeSuccess,(()=>{this.shouldHideView=!1,this.isSliderTabExpanded||this.toggleVisibility()})),w.b.OnWindow("resize",(()=>{this.calculateDesktopHeights(),this.scope.$apply()}),this.scope),w.b.OnRootScope(this.scope,y,(()=>{this.shouldHideView=!0})),this.isDesktop&&this.subscribeScrollListener(),this.scope.$on("$destroy",(()=>{n.element(this.scope.scrollContainer).unbind("scroll")}))}isLargeBreakpoint(){return g.g()>this.largeStartBreakpoint}calculateDesktopHeights(){if(!this.isDesktop)return;if(!this.isLargeBreakpoint())return this.mainSectionHeight="initial",void(this.desktopViewHeight="initial");const e=window.innerHeight,t=this.getSelectorHeightAndOffset(".slider-tab-navigation-desktop__main-section"),s=Math.max(t.offset,0);this.mainSectionHeight=e-s+"px",this.desktopViewHeight=`${window.innerHeight}px`}getSelectorHeightAndOffset(e){let t,s;const i=document.querySelector(e);if(i instanceof HTMLElement){const e=parseFloat(getComputedStyle(i).paddingBottom),n=parseFloat(getComputedStyle(i).paddingTop);t=i.clientHeight-n-e,s=i.getBoundingClientRect().top}return{height:t,offset:s}}subscribeScrollListener(){const e=Object(S.throttle)((()=>{this.calculateDesktopHeights(),this.scope.$apply()}),90);n.element(this.scope.scrollContainer).scroll(e)}isClosingParent(e){return!this.navigationBlockedWasHandled&&e.name.indexOf(this.scope.tabs.transcludedSection.stateRoute)<0}isChangingTab(e){return!this.navigationBlockedWasHandled&&this.activeTab&&!this.stateMatches(this.activeTab.stateRoute,e.name)}checkTabStatusAndBlockNavigation(e){return e.preventDefault(),this.navigationBlocker={navigationPromise:null},this.$rootScope.$broadcast(A,this.activeTab.nameId,this.navigationBlocker),this.navigationBlocker.navigationPromise?(this.isSliderTabExpanded||this.toggleVisibility(),this.navigationBlocker.navigationPromise.then((()=>{this.resumeNavigation()}))):(this.resumeNavigation(),this.$q.resolve(void 0))}resumeNavigation(){this.navigationBlockedWasHandled=!0,this.closeParentPeek?this.ultraState.leavePeekState(this.ultraState.current.name):(this.activeTab=this.nextTab,this.showLoader=!0,this.ultraState.goPeekState(this.activeTab.stateRoute,this.activeTab.stateArgs))}getTooltipText(){return this.isSliderTabExpanded?this.translatedCollapsedKey:this.translatedExpandedKey}goToTab(e){this.isSliderTabExpanded?this.ultraState.goPeekState(e.stateRoute,e.stateArgs):this.toggleVisibility().then((()=>{this.ultraState.goPeekState(e.stateRoute,e.stateArgs)}))}goBack(){this.nextTabFocusNameId=this.activeTab.nameId,this.ultraState.goPeekState(this.scope.tabs.browsableSection.main.stateRoute,this.scope.tabs.browsableSection.main.stateArgs)}get viewName(){return`${this.scope.tabs.transcludedSection.stateRoute}@`}shouldRenderTranscludedElement(){return this.activeTab&&this.activeTab.title===this.scope.tabs.transcludedSection.title}shouldRenderPeekRoutedElement(){return this.activeTab&&this.activeTab.title!==this.scope.tabs.transcludedSection.title}shouldRenderTabs(){return this.activeTab&&this.activeTab.nameId===this.scope.tabs.browsableSection.main.nameId&&this.scope.tabs.browsableSection.browsableTabs.length>0}toggleVisibility(){return this.isSliderTabExpanded=!this.isSliderTabExpanded,this.isTransitioning=!0,this.timeout((()=>{this.isTransitioning=!1}),this.scope,500)}handleTabKeyDown(t,s){if(t.keyCode===u.t)return t.preventDefault(),void this.goToTab(s);if(t.keyCode!==u.i){if(t.keyCode===u.e){t.preventDefault();const s=this.scope.tabs.browsableSection.browsableTabs.length;if(s>0)return void e(`#slider-tab-${this.scope.tabs.browsableSection.browsableTabs[s-1].nameId}`).focus();e(`#slider-tab-${this.scope.tabs.browsableSection.main.nameId}`).focus()}}else{t.preventDefault();const s=this.isDesktop?this.scope.tabs.browsableSection.browsableTabs[0].nameId:this.scope.tabs.transcludedSection.nameId;e(`#slider-tab-${s}`).focus()}}handleBackArrowKeyDown(e){e.keyCode===u.u&&e.shiftKey&&e.preventDefault()}handleLastElementFocus(){this.tabElement.find(".slider-tab-navigation-desktop__browsable-section-go-back").focus()}};T=Object(i.a)([Object(i.c)(0,Object(f.b)("$scope")),Object(i.c)(1,Object(f.b)("$rootScope")),Object(i.c)(2,Object(f.b)("$element")),Object(i.c)(3,Object(f.b)("$q")),Object(i.c)(4,Object(f.b)(l.d)),Object(i.c)(5,Object(f.b)(m.b)),Object(i.c)(6,Object(f.b)(b.d)),Object(i.c)(7,Object(f.b)(r.serviceName))],T);class O{constructor(){this.controller=T,this.controllerAs="sliderTabNavigation",this.template=h.a.detect().desktop()?a:o,this.transclude=!0,this.scope={tabs:"=",scrollContainer:"@"}}}n.module(C,[d.a,c.a,p.a]).directive("bbSliderTabNavigation",["$injector",e=>e.instantiate(O)])}).call(this,s("71td"))},y0xW:function(e,t){e.exports='<div class="assessment-question">\n  <fieldset ng-show="!assessmentQuestion.isEditing">\n    <div\n      class="question-header question-header-grading"\n      ng-class="{\'has-question-title\': assessmentQuestion.questionConfig.hasQuestionCountTitle, \'is-read-only\': !isPrivileged() || readOnly()}"\n      ng-if="assessmentQuestion.questionConfig.hasPoints || assessmentQuestion.questionConfig.hasQuestionCountTitle"\n      ng-switch="assessmentQuestion.questionAttempt.question.fullCredit"\n    >\n      <div bb-foundation-defer ng-if="isSmallBreakpoint" ng-switch-default>\n        <bb-svg-icon\n          ng-if="assessmentQuestion.canShowQuestionScoreRelatedDetail()"\n          class="question-indicator {{::assessmentQuestion.getCorrectnessColor()}}"\n          aria-label="{{::assessmentQuestion.getCorrectnessName()}}"\n          size="medium"\n          icon="{{::assessmentQuestion.getCorrectnessIcon()}}"\n        ></bb-svg-icon>\n        <legend\n          class="question-label"\n          ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle"\n        >{{::assessmentQuestion.questionTitle}}</legend>\n        <button ng-if="assessmentQuestion.isExtraCredit()" bb-tooltip enhanced-tooltip="true" tooltip-position="bottom"\n          bb-translate-attrs="{title: \'components.directives.assessment-question.extraCredit.tooltipText\'}"\n          analytics-id="assessments.directives.assessment-question.extra.credit.icon.button"\n          aria-label="{{::assessmentQuestion.getExtraCreditAriaLabel()}}" class="wrapper-extra-credit-icon">\n          <bb-ui-icon-medium-kudos class="extra-credit-icon" />\n        </button>\n        <bb-question-grade\n          graded-question-attempt="gradedQuestionAttempt"\n          hide-grade="!assessmentQuestion.canViewGrades"\n          input-id="{{::assessmentQuestion.elementId}}"\n          is-privileged="assessmentQuestion.canEnterGrades"\n          ng-if="assessmentQuestion.questionConfig.hasPoints"\n        >\n        </bb-question-grade>\n        <bb-overflow-menu\n          ng-show="!isAnyQuestionEditing() && !assessmentQuestion.isCurrentCourseComplete"\n          element-id="{{::assessmentQuestion.elementId}}"\n          element-name="{{::assessmentQuestion.questionTitle}}"\n          menu-items="assessmentQuestion.getQuestionRegradingOverflowMenu()"\n          ignore-accordion="true"\n          analytics-id-tag-prefix="components.directives.attempt-canvas.getQuestionRegradingOverflowMenu"\n        >\n        </bb-overflow-menu>\n      </div>\n      <div bb-foundation-defer ng-if="isSmallBreakpoint" ng-switch-when="true">\n        <div class="question-header-column question-header-first-column">\n          <bb-svg-icon\n            ng-if="assessmentQuestion.canShowQuestionScoreRelatedDetail()"\n            class="question-indicator {{::assessmentQuestion.getCorrectnessColor()}}"\n            aria-label="{{::assessmentQuestion.getCorrectnessName()}}"\n            size="medium"\n            icon="{{::assessmentQuestion.getCorrectnessIcon()}}"\n          ></bb-svg-icon>\n          <legend\n            class="question-label"\n            ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle"\n          >{{::assessmentQuestion.questionTitle}}</legend>\n          <button ng-if="assessmentQuestion.isExtraCredit()" bb-tooltip enhanced-tooltip="true" tooltip-position="bottom"\n            bb-translate-attrs="{title: \'components.directives.assessment-question.extraCredit.tooltipText\'}"\n            analytics-id="assessments.directives.assessment-question.extra.credit.icon.button"\n            aria-label="{{::assessmentQuestion.getExtraCreditAriaLabel()}}" class="wrapper-extra-credit-icon">\n            <bb-ui-icon-medium-kudos class="extra-credit-icon" />\n          </button>\n          <bb-question-grade\n            graded-question-attempt="gradedQuestionAttempt"\n            hide-grade="!assessmentQuestion.canViewGrades"\n            input-id="{{::assessmentQuestion.elementId}}"\n            is-privileged="assessmentQuestion.canEnterGrades"\n            ng-if="assessmentQuestion.questionConfig.hasPoints"\n          >\n          </bb-question-grade>\n          <bb-overflow-menu\n            ng-show="!isAnyQuestionEditing() && !assessmentQuestion.isCurrentCourseComplete"\n            element-id="{{::assessmentQuestion.elementId}}"\n            element-name="{{::assessmentQuestion.questionTitle}}"\n            menu-items="assessmentQuestion.getQuestionRegradingOverflowMenu()"\n            ignore-accordion="true"\n            analytics-id-tag-prefix="components.directives.attempt-canvas.getQuestionRegradingOverflowMenu"\n          >\n          </bb-overflow-menu>\n        </div>\n        <div class="question-header-column question-header-secondary-column">\n          <span class="question-full-credit-label" bb-translate>\n            components.directives.attempt-canvas.freeform-response.grade.question.full-credit-given\n          </span>\n        </div>\n      </div>\n      <div bb-foundation-defer ng-if="!isSmallBreakpoint">\n        <bb-svg-icon\n          ng-if="assessmentQuestion.canShowQuestionScoreRelatedDetail()"\n          class="question-indicator {{::assessmentQuestion.getCorrectnessColor()}}"\n          aria-label="{{::assessmentQuestion.getCorrectnessName()}}"\n          size="medium"\n          icon="{{::assessmentQuestion.getCorrectnessIcon()}}"\n        ></bb-svg-icon>\n        <legend\n          class="question-label"\n          ng-if="assessmentQuestion.questionConfig.hasQuestionCountTitle"\n        >{{::assessmentQuestion.questionTitle}}</legend>\n        <span\n          class="question-full-credit-label"\n          bb-translate\n          ng-if="assessmentQuestion.questionAttempt.question.fullCredit"\n          >components.directives.attempt-canvas.freeform-response.grade.question.full-credit-given</span\n        >\n        <button ng-if="assessmentQuestion.isExtraCredit()" bb-tooltip enhanced-tooltip="true" tooltip-position="bottom"\n          bb-translate-attrs="{title: \'components.directives.assessment-question.extraCredit.tooltipText\'}"\n          analytics-id="assessments.directives.assessment-question.extra.credit.icon.button"\n          aria-label="{{::assessmentQuestion.getExtraCreditAriaLabel()}}" class="wrapper-extra-credit-icon">\n          <bb-ui-icon-medium-kudos class="extra-credit-icon" />\n        </button>\n        <bb-question-grade\n          graded-question-attempt="gradedQuestionAttempt"\n          hide-grade="!assessmentQuestion.canViewGrades"\n          input-id="{{::assessmentQuestion.elementId}}"\n          is-privileged="assessmentQuestion.canEnterGrades"\n          ng-if="assessmentQuestion.questionConfig.hasPoints"\n        >\n        </bb-question-grade>\n        <bb-overflow-menu\n          ng-show="!isAnyQuestionEditing() && !assessmentQuestion.isCurrentCourseComplete"\n          element-id="{{::assessmentQuestion.elementId}}"\n          element-name="{{::assessmentQuestion.questionTitle}}"\n          menu-items="assessmentQuestion.getQuestionRegradingOverflowMenu()"\n          ignore-accordion="true"\n          analytics-id-tag-prefix="components.directives.attempt-canvas.getQuestionRegradingOverflowMenu"\n        >\n        </bb-overflow-menu>\n      </div>\n    </div>\n    <div class="question-content" ng-show="assessmentQuestion.questionSpecificTemplateReady"></div>\n  </fieldset>\n  <fieldset\n    ng-if="assessmentQuestion.isEditing"\n    class="regrading-container assessment-canvas-react"\n  ></fieldset>\n</div>\n'},"ykC+":function(e,t,s){var i=s("ziER"),n=s("5JeM"),a=new i({id:"icon-small-goal",use:"icon-small-goal-usage",viewBox:"0 0 16 16",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="icon-small-goal"><path stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M1 1h14v3H1zM4 12h8v3H4z" /><path d="M14 4s0 5-6 5-6-5-6-5M8 9v3" stroke-width="2" /></symbol>'});n.add(a);e.exports=a}}]);