(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{"0wep":function(t,e,s){"use strict";s.d(e,"a",(function(){return a}));var n=s("zYa8"),i=s("IEHd");const a="ultra.components.directives.bbUiIcon.large.Goal";Object(n.a)(i.a,a,"bbUiIconLargeGoal")},"1jPR":function(t,e){t.exports='\x3c!-- Goals--\x3e\n<div class="goal" ng-class="{\'goal-peek\': !openPeekPanel}">\n  <div class="row hide-for-small" ng-if="!openPeekPanel">\n    <div class="goal-panel">\n      <div class="goal-white-icon" >\n        <bb-svg-icon size="medium" icon="goal" bb-translate-attrs="{\'aria-label\': \'course.goal-alignment.goal.sr-only.goalImage\'}"></bb-svg-icon>\n      </div>\n      <div class="goal-head">\n        <h3 tabindex="-1" class="goal-title" bb-translate>course.goal-alignment.goal.header</h3>\n      </div>\n      <button class="button super-clear icon"\n              ng-click="hideGoals()"\n              analytics-id="course.goalAlignment.goal.closeGoals.button">\n        <i class="icon-times-bold"></i>\n        <span class="sr-only" bb-translate>course.goal-alignment.goal.sr-only.closeGoals</span>\n      </button>\n    </div>\n  </div>\n  <div class="goal-content-container">\n    <div class="row add-goal" ng-if="canAlignGoals() && !isCourseComplete()">\n      <a href="javascript:void(0);"\n         bb-focus="shouldFocus({elementId: \'add-goals\'})"\n         tabindex="0"\n         class="button button--dashed -full-width"\n         ng-if="!isMobile"\n         ng-click="addGoals()"\n         bb-translate\n         analytics-id="course.goal-alignment.goal.addGoalsButton">\n        course.goal-alignment.goal.addGoalsButton\n      </a>\n    </div>\n\n    <div class="goal-alignable-content"\n      ng-repeat="(contentIndex, content) in contents track by content.getContentIdForGoalAlignment()"\n      ng-class="[\'goal-aligned-content-\'+$index]"\n      ng-if="content.alignedGoals.length > 0">\n\n      <h3 class="goal-aligned-label"  ng-class="{\'goal-stu\': !(canAlignGoals() && !isCourseComplete())}">\n        <span>{{content.getContentTitleForGoalAlignment()}}</span>\n        <span bb-translate translate-values="{length: content.alignedGoals.length}">course.goal-alignment.goal.alignedGoalsLength</span>\n      </h3>\n\n      <ul class="goal-ul">\n        <li class="row goal-list" id="goal-{{::alignedGoal.goalId}}"\n            ng-repeat="alignedGoal in content.alignedGoals | orderBy: [\'(alignedGoal.content || content).getContentTitleForGoalAlignment()\', \'goal.goalTitle\', \'goal.goalText\'] track by (alignedGoal.goalId + (alignedGoal.content || content).getContentIdForGoalAlignment())">\n\n          <div class="columns small-12 single-goal"\n            ng-class="{\n              \'is-compacted\': !(alignedGoal.isShowDetails = alignedGoal.isShowDetails === undefined ? false:alignedGoal.isShowDetails),\n              \'goal-specific\': !(canAlignGoals() && !isCourseComplete())\n            }">\n            <div class="goal-icon">\n              <bb-ui-icon-large-goal color="primary" bb-translate-attrs="{\'aria-label\': \'course.goal-alignment.goal.sr-only.goalImage\'}"></bb-ui-icon-large-goal>\n            </div>\n            <div class="goal-description goal-details" ng-class="{\'goal-specific\': !(canAlignGoals() && !isCourseComplete())}">\n              <span class="goal-type js-goal-title" ng-class="{\'ellipse\':!alignedGoal.isShowDetails}">{{alignedGoal.goal.goalTitle}}</span>\n              <div class="goal-content-title" ng-class="{\'ellipse\':!alignedGoal.isShowDetails}" ng-bind="(alignedGoal.content || content).getContentTitleForGoalAlignment()"></div>\n              <span class="goal-content" ng-class="{\'ellipse\':!alignedGoal.isShowDetails}">{{alignedGoal.goal.goalText}}</span>\n              <div class="goal-category" ng-show="alignedGoal.isShowDetails">\n                <span class="goal-type" bb-translate>course.goal-alignment.goal.setAndCategory</span>\n                <span class="goal-category-title vertical-bar js-goal-set">{{alignedGoal.goal.goalSetTitle}}</span>\n                <span class="goal-category-title js-goal-category">{{alignedGoal.goal.goalCategoryTitle}}</span>\n              </div>\n              <button role="button"\n                      class="button anchor js-show-details"\n                      ng-click="alignedGoal.isShowDetails=!alignedGoal.isShowDetails"\n                      analytics-id="course.goalAlignment.goal.showDetails.button">\n                <span bb-translate ng-if="alignedGoal.isShowDetails" translate-attrs-values="{goalName: alignedGoal.goal.goalTitle}" bb-translate-attrs="{\'aria-label\': \'course.goal-alignment.goal.sr-only.showLess\'}">course.goal-alignment.goal.showLess</span>\n                <span bb-translate ng-if="!alignedGoal.isShowDetails" translate-attrs-values="{goalName: alignedGoal.goal.goalTitle}" bb-translate-attrs="{\'aria-label\': \'course.goal-alignment.goal.sr-only.showMore\'}">course.goal-alignment.goal.showMore</span>\n              </button>\n            </div>\n          </div>\n          <div bb-foundation-defer>\n            <bb-overflow-menu element-id="{{ generateControlId((alignedGoal.content || content), alignedGoal) + \'-\' + contentIndex }}"\n                              element-name="{{alignedGoal.goal.goalTitle}}"\n                              is-single-mode="true"\n                              menu-items="getOverflowMenuItems(content, alignedGoal)"\n                              analytics-id-tag-prefix="course.goal-alignment.goal.overflowMenu">\n            </bb-overflow-menu>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n'},"2szi":function(t,e,s){var n=s("ziER"),i=s("5JeM"),a=new n({id:"icon-medium-forward-arrow",use:"icon-medium-forward-arrow-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-forward-arrow"><path d="M13 1l10 11-10 11M23 12H1" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});i.add(a);t.exports=a},"3LmG":function(t,e){t.exports='<bb-modal id="continue-working-modal" class="notification success hide-x-button"\n          modal-title-key="course.content.assessment.test.modal.continueWorking.title"\n          bb-focus="true"\n          analytics-id-tag-prefix="course.content.assessment.test.modal.continueWorking">\n  <div name="modal-contents">\n\n    <p ng-if="::(assessmentAttempt.hasUnlimitedExtraTime && !assessmentAttempt.hasUploadsInProgress)" bb-translate>\n      course.content.assessment.test.modal.continueWorking.body.unlimited\n    </p>\n    <p ng-if="::(assessmentAttempt.hasUnlimitedExtraTime && assessmentAttempt.hasUploadsInProgress)" bb-translate>\n      course.content.assessment.test.modal.continueWorking.cancelUploads.unlimited\n    </p>\n\n    <p ng-if="::(assessmentAttempt.hasLimitedExtraTime && !assessmentAttempt.hasUploadsInProgress)"\n       bb-translate translate-values="{extraMinutes: assessmentAttempt.currentRemainingMinutes}">\n      course.content.assessment.test.modal.continueWorking.body.limited.plural\n    </p>\n    <p ng-if="::(assessmentAttempt.hasLimitedExtraTime && assessmentAttempt.hasUploadsInProgress)"\n       bb-translate translate-values="{extraMinutes: assessmentAttempt.currentRemainingMinutes}">\n      course.content.assessment.test.modal.continueWorking.cancelUploads.limited.plural\n    </p>\n  </div>\n  <button name="modal-footer-button-primary" class="button confirm-ok js-primary-button" ng-click="$parent.$close()" bb-translate analytics-id="course.content.assessment.test.modal.continueWorking.submit">\n    course.content.assessment.test.modal.continueWorking.submit\n  </button>\n  <button name="modal-footer-button-secondary" class="button button--secondary confirm-cancel js-secondary-button" ng-click="$parent.$dismiss()" bb-translate analytics-id="course.content.assessment.test.modal.continueWorking.continue">\n    course.content.assessment.test.modal.continueWorking.continue\n  </button>\n</bb-modal>\n'},"6mvz":function(t,e,s){"use strict";s.d(e,"a",(function(){return r}));var n=s("Llzl"),i=s("06dA"),a=s("1ZbL"),o=s("0JpG");const r="ultra.components.directives.rubric.rubricView",l={Class:i.c,bindingNames:["analyticsId","criteria","decimalsLength","rubricType","maxScore"],renderLocalized:!0};n.module(r,[o.moduleName]).component("bbRubricView",Object(a.a)(l))},"7eG8":function(t,e,s){"use strict";s.d(e,"a",(function(){return a}));var n=s("zYa8"),i=s("VLO0");const a="ultra.components.directives.bbUiIcon.medium.NoTimeLimit";Object(n.a)(i.a,a,"bbUiIconMediumNoTimeLimit")},B5op:function(t,e){t.exports='<bb-modal id="confirm-leaving-modal" class="notification success"\n          modal-title-key="course.content.assessment.test.modal.confirmLeaving.title"\n          bb-focus="true"\n          analytics-id-tag-prefix="course.content.assessment.test.modal.confirmLeaving">\n  <div name="modal-contents">\n    <p ng-if="assessmentAttempt.willAutoSubmit" bb-translate>\n      course.content.assessment.test.modal.confirmLeaving.body.autoSubmit\n    </p>\n    <p ng-if="!assessmentAttempt.willAutoSubmit" bb-translate>\n       course.content.assessment.test.modal.confirmLeaving.body.noAutoSubmit\n    </p>\n  </div>\n  <button name="modal-footer-button-primary" class="button confirm-ok js-primary-button" ng-click="$parent.$close()" bb-translate analytics-id="course.content.assessment.test.modal.confirmLeaving.close">\n    course.content.assessment.test.modal.confirmLeaving.close\n  </button>\n  <button name="modal-footer-button-secondary" class="button button--secondary confirm-cancel js-secondary-button" ng-click="$parent.$dismiss()" bb-translate analytics-id="course.content.assessment.test.modal.confirmLeaving.cancel">\n    course.content.assessment.test.modal.confirmLeaving.cancel\n  </button>\n</bb-modal>\n'},NxQJ:function(t,e,s){"use strict";s.d(e,"c",(function(){return r})),s.d(e,"a",(function(){return l})),s.d(e,"b",(function(){return c}));var n=s("Llzl"),i=s("pjml"),a=s("Sa5G"),o=s("fYJU");const r="ultra.components.services.courseContent.conversation";class l{constructor(t,e,s,n,i){this.currentCourse=t,this.coreContent=e,this.$q=s,this.$rootScope=n,this.contextUser=i}checkAndAddAllConversations(){const t=this.$q.defer();return this.coreContent.ui.hasConversationAttached&&!this.coreContent.attachedForumLink?(this.conversationContent=this.coreContent,this.isCourseAvailable=this.coreContent.isAvailable,this.conversationContent.forumAttacherAction=i.p.ForumAttacherAction.Add.toUpperCase(),this.conversationContent.withParams({fields:"attachedForumLink"}).$patch().$then((e=>{this.currentCourse.contents.$find(e.attachedForumLink["resource/x-bb-courselink"].courseContent).$asPromise().then((t=>this.createNewDiscussion(t))),t.resolve()}))):t.resolve(),t.promise}markAllConversationsForRemoval(){this.coreContent.ui.hasConversationAttached||this.coreContent.allowConversations||!this.coreContent.attachedForumLink||(this.coreContent.attachedForumLink=null,this.coreContent.forumAttacherAction=i.p.ForumAttacherAction.Delete.toUpperCase())}createNewDiscussion(t){const e=t.contentDetail[a.g.Discussion.handle].id,s=this.currentCourse.forums.$find(e);s.messages.$fetch().$then((n=>{if(n){const t=n.find((t=>!t.groupId));if(t)return t}return s.messages.$build({forumId:e,courseId:t.courseId,parentId:"{unset id}",userId:this.contextUser.userId,postedName:this.contextUser.userModel.userName,body:{rawText:"",displayText:""},isDeleted:!1,isAvailable:!0}).$save().$asPromise()})).$then((()=>this.initializeDiscussionStatus()))}initializeDiscussionStatus(){this.coreContent&&(this.coreContent.ui.hasConversationAttached=!0,this.coreContent.attachedForumLink&&this.currentCourse.contents.$find(this.coreContent.attachedForumLink["resource/x-bb-courselink"].courseContent).$then((t=>{const e=t.contentDetail[a.g.Discussion.handle].id;this.currentCourse.forums.$find(e).$then((t=>{t.messages.$fetch().$then((t=>{const e=t[0];e&&(e.ui.replyText="")}))}))}))),this.conversationContent.isAvailable=this.isCourseAvailable,this.conversationContent.$patch().$then((t=>{this.coreContent=t}))}static showConversations(t){return!(!t||!t.id)&&(void 0===(t.ui&&t.ui.hasConversationAttached)&&(t.ui.hasConversationAttached=null!=t.attachedForumLink),t.ui.hasConversationAttached)}}l.$inject=["currentCourse","coreContent","$q","$rootScope",o.b];class c extends l{}n.module(r,[i.N,o.a]).service("courseContentConversation",l)},QW6a:function(t,e,s){"use strict";s.d(e,"c",(function(){return o})),s.d(e,"b",(function(){return r})),s.d(e,"a",(function(){return c}));s("GkCm");var n=s("Fvsw"),i=s("0JpG"),a=s("TnpK");const o="ultra.features.course.content.assessment.attemptSafeAssignSetting.controller",r="ultra.student.assessment.submitToGRD";class l{constructor(t,e,s,n,i){this.$scope=t,this.contentData=e,this.context=s,this.bbLocalize=n,this.ultraStateService=i,this.submitToGRD=!1,this.addToUserPreference=!1,this.confirmedToClose=!1,t.attemptSafeAssignSetting=this,this.panelTitle=this.contentData.courseContent.title,this.params=this.ultraStateService.params,this.submitToGRD=this.params.submitToGRD,this.submitToGRDEnabled&&(this.originalSelection={submitToGRD:this.submitToGRD,addToUserPreference:this.addToUserPreference},this.context.getPreference(r).then((t=>{t&&"true"===t.value&&(this.submitToGRD=!0,this.addToUserPreference=!0,this.originalSelection.submitToGRD=this.submitToGRD,this.originalSelection.addToUserPreference=this.addToUserPreference)}))),t.$on("$stateChangeStart",((t,e)=>{e.name.indexOf("attempt-safe-assign-setting")<0&&this.submitToGRDEnabled&&!this.confirmedToClose&&this.isDirty&&(t.preventDefault(),this.$scope.$broadcast("show-confirmation","attempt-safe-assign-setting"))})),t.$watch((()=>this.submitToGRD),(t=>{!1===t&&(this.addToUserPreference=!1)}))}get submitToGRDEnabled(){return!!this.contentData.courseContent.canSubmitToGlobalReferenceDatabase()}get isDirty(){return!(!this.originalSelection||this.originalSelection.submitToGRD===this.submitToGRD&&this.originalSelection.addToUserPreference===this.addToUserPreference)}saveClicked(){this.confirmedToClose=!0,this.context.setPreference(r,this.addToUserPreference.toString()),this.$scope.$root.$broadcast("submit-to-global-reference",{submitToGRD:this.submitToGRD}),this.closePanel()}cancelClicked(){this.confirmedToClose=!0,this.ultraStateService.leavePeekState()}closePanel(){this.ultraStateService.leavePeekState()}}l.$inject=["$scope","contentData",n.b,i.serviceName,a.d];class c extends l{}},QyCV:function(t,e,s){"use strict";s("q1bP"),s("sZYy"),s("dV61");var n=s("nsO7"),i=s("Llzl"),a=s("Qbdf"),o=s("5Yfa"),r=s("0JpG"),l=s("JNtI"),c=s("TnpK"),m=s("gkef"),d=s("1jPR"),u=s("0wep");s.d(e,"a",(function(){return h}));const h="ultra.components.directives.bbGoalAlignment";class p{constructor(t,e,s,a,r){this.$injector=t,this.contextCourse=e,this.localize=s,this.ultraState=a,this.windowSize=r,this.scope={contents:"=",hideGoals:"&",shouldFocus:"&"},this.restrict="E",this.template=d,this.link=(t,e,s)=>{i.extend(t,{generateControlId:(t,e)=>`x-${t.getContentIdForGoalAlignment()}-${e.goalId}`.replace(/[\.;]/g,"-"),openPeekPanel:!!s.openPeekPanel&&t.$eval(s.openPeekPanel),canAlignGoals:()=>t.primaryContent.isCurrentUserEligibleToAlignGoals(),addGoals:()=>{this.ultraState.goPeekState("goal-picker-legacy",{goalAlignableContent:t.primaryContent})},deleteGoal:(e,s)=>{n.remove(e.alignedGoals,(t=>t===s));const i=s.content||e;n.remove(i.alignedGoals,(t=>t.goalId===s.goalId));const a=n.compact(i.alignedGoals.map((t=>t.goal)));t.$root.$broadcast(o.a,i,a),t.$root.$broadcast(o.e(i),a)},isCourseComplete:()=>this.contextCourse.course&&this.contextCourse.course.isComplete(),isMobile:window.Modernizr.touch&&!this.windowSize.isLargeBreakpoint(),getOverflowMenuItems:(e,s)=>[{icon:"trash",labelKey:"global.delete",ariaLabel:()=>this.localize.translateSync({locale:this.localize.getLocale(t),key:"course.goal-alignment.goal.sr-only.delete",params:{goalName:s.goal.goalTitle},noWrap:!0}),show:()=>s.content&&s.content.isCurrentUserEligibleToAlignGoals&&s.content.isCurrentUserEligibleToAlignGoals()&&!t.isCourseComplete(),onClick:()=>{t.deleteGoal(e,s)},confirmationOptions:l.a("x-bb-delete-goal-alignment")}]});let a=i.noop;const r=function(){const e={title:"",alignedGoals:[],isCurrentUserEligibleToAlignGoals:()=>!1,getContentIdForGoalAlignment:()=>"x"};t.primaryContent=(t.contents||[e])[0]||e,t.primaryContent!==e&&t.$root.$broadcast("EVENT_GOAL_PICKER_RESTORE",t.primaryContent),a(),a=t.$on(o.c,((e,s)=>{const i=t.primaryContent.coreContent||t.primaryContent,a=n.zipObject(i.alignedGoals.map((t=>t.goalId)),i.alignedGoals),r=s.sort(((t,e)=>t.goalTitle.localeCompare(e.goalTitle))).map((t=>Object.prototype.hasOwnProperty.call(a,t.id)?a[t.id]:{goalId:t.id,isVisibleToStudent:!0,goal:t,content:i}));t.primaryContent.alignedGoals=r,t.primaryContent.coreContent&&(t.primaryContent.coreContent.alignedGoals=r),t.$root.$broadcast(o.a,i,s),t.$root.$broadcast(o.e(i),s)}))};t.$watch("contents",r),r()}}}p.$inject=["$injector",a.e,r.serviceName,c.d,m.b],i.module(h,[m.a,"dibari.angular-ellipsis",r.moduleName,l.b,u.a]).directive("bbGoalAlignment",["$injector",t=>t.instantiate(p)])},"TLR+":function(t,e){t.exports='<bb-modal id="submission-receipt-modal" class="notification success submission-receipt-modal"\n          modal-title-key="components.directives.submission-receipt.submission-successful"\n          analytics-id-tag-prefix="course.content.assessment.test.modal.confirmSubmitAttemptAlert"\n          modal-dismiss-callback="onClose($close)">\n  <div name="modal-contents" class="content-container">\n    <img class="modal-banner" src="./static/images/submissions/submission-receipt-modal-banner.svg">\n    <div class="submission-date">\n      <span class="date-label" bb-translate="components.directives.submission-receipt.submission-date"></span>\n      <span class="js-submission-date" ng-bind-html="submissionDate"></span>\n    </div>\n\n    <div class="submission-id">\n      <span class="id-label" bb-translate="components.directives.submission-receipt.confirmation-number"></span>\n      <span class="js-submission-id" ng-bind-html="id"></span>\n    </div>\n\n    <span class="email-confirmation" ng-bind-html="emailConfirmation"></span>\n  </div>\n  <div name="modal-footer-button-primary">\n    <button ng-if="!hasProctoringEnabled"\n            class="button js-primary-button js-download-submission-receipt-button" ng-click="downloadClicked()"\n            bb-translate course-org-token-resolver\n            analytics-id="course.content.assessment.test.modal.confirmSubmitAttemptAlert.download">\n            components.directives.submission-receipt.download\n    </button>\n    <button ng-if="hasProctoringEnabled"\n            class="button button--primary js-close-modal" ng-click="$close()"\n            bb-translate course-org-token-resolver\n            analytics-id="course.content.assessment.test.modal.confirmSubmitAttemptAlert.close">\n            global.close\n    </button>\n  </div>\n  <div name="modal-footer-button-secondary">\n    <button ng-if="!hasProctoringEnabled"\n            class="button button--secondary js-close-modal" ng-click="$close()"\n            bb-translate course-org-token-resolver\n            analytics-id="course.content.assessment.test.modal.confirmSubmitAttemptAlert.close">\n            global.close\n    </button>\n  </div>\n\n</bb-modal>\n'},U2yg:function(t,e){t.exports='<div bb-load-bundle="components/directives/content-navigator" class="content-navigator-container" ng-if="$ctrl.shouldShowNavigator()" >\n  <div class="content-navigator-pre">\n    <a ng-click="$ctrl.navigate(\'previous\')"\n       translate-attrs-values="{contentItem: $ctrl.sibling.previous.title}"\n       bb-translate-attrs="{\'aria-label\': \'components.directives.content-navigator.previous-content-item\'}"\n       ng-if="$ctrl.sibling.previous"\n       href="javascript:void(0);"\n       ng-disabled="!$ctrl.sibling.previous.canEdit() && $ctrl.sibling.previous.isConditionalReleaseLocked()"\n       analytics-id="components.directives.content.content-navigator.previous.link"\n    >\n      <bb-svg-icon icon="back-arrow" size="medium"></bb-svg-icon>\n      <span ng-if="(!$ctrl.content.isTest() && !$ctrl.content.isGradedScorm()) || $ctrl.forceShowTitle === true" class="ellipse" title="{{::$ctrl.sibling.previous.title}}">{{$ctrl.sibling.previous.title}}</span>\n\n      <div ng-if="!$ctrl.sibling.previous.canEdit() && $ctrl.sibling.previous.isConditionalReleaseLocked()"\n           bb-complex-tooltip\n           enhanced-tooltip="true"\n           tooltip-position="bottom"\n           tooltip-open-on-activation="true"\n           tooltip-disable-on-mouse-over="true"\n           tooltip-scope="$ctrl.cr.previous.tooltipScope"\n           tooltip-template="{{::$ctrl.cr.previous.getConditionalReleaseComplexTooltipTemplate()}}"\n           tabindex="0" onclick="return false;">\n        <bb-svg-icon size="small" icon="lock"></bb-svg-icon>\n        <span class="sr-only">{{::$ctrl.cr.previous.tooltips}}</span>\n      </div>\n    </a>\n  </div>\n\n  <div class="content-navigator-next">\n    <a ng-click="$ctrl.navigate(\'next\')"\n       translate-attrs-values="{contentItem: $ctrl.sibling.next.title}"\n       bb-translate-attrs="{\'aria-label\': \'components.directives.content-navigator.next-content-item\'}"\n       ng-if="$ctrl.sibling.next"\n       href="javascript:void(0);"\n       ng-disabled="!$ctrl.sibling.next.canEdit() && $ctrl.sibling.next.isConditionalReleaseLocked()"\n       analytics-id="components.directives.content.content-navigator.previous.link"\n    >\n      <div ng-if="!$ctrl.sibling.next.canEdit() && $ctrl.sibling.next.isConditionalReleaseLocked()"\n           bb-complex-tooltip\n           enhanced-tooltip="true"\n           tooltip-position="bottom"\n           tooltip-open-on-activation="true"\n           tooltip-disable-on-mouse-over="true"\n           tooltip-scope="$ctrl.cr.next.tooltipScope"\n           tooltip-template="{{::$ctrl.cr.next.getConditionalReleaseComplexTooltipTemplate()}}"\n           tabindex="0" onclick="return false;">\n        <bb-svg-icon size="small" icon="lock"></bb-svg-icon>\n        <span class="sr-only">{{::$ctrl.cr.next.tooltips}}</span>\n      </div>\n\n      <span ng-if="(!$ctrl.content.isTest() && !$ctrl.content.isGradedScorm()) || $ctrl.forceShowTitle === true" class="ellipse" title="{{::$ctrl.sibling.next.title}}">{{$ctrl.sibling.next.title}}</span>\n      <bb-svg-icon icon="forward-arrow" size="medium"></bb-svg-icon>\n    </a>\n  </div>\n</div>\n'},ap1t:function(t,e,s){"use strict";var n=s("D57K"),i=s("Llzl"),a=s("nsO7"),o=s("d8yC"),r=s("en1n"),l=s("0JpG"),c=s("Fvsw"),m=s("X/qj"),d=s("yMoE"),u=s("pjml"),h=s("TnpK"),p=s("g66W"),b=s("fYJU"),g=s("ooAF"),v=s("nmzr"),A=s("zGdY"),f=s("aHpC"),S=s("qH3X");s.d(e,"a",(function(){return w}));const w="ultra.components.directives.grade.displayGradePill",y="--",C="na";let T=class{constructor(t,e,s,n,i,a,o,l,c){this.$injector=t,this.$sce=e,this.scope=s,this.element=n,this.bbLocalize=i,this.context=a,this.ultraState=o,this.gradebookPermissionService=l,this.contextUser=c;const m=this.scope.column()&&this.scope.column().courseId;this.bundlePromise=i.loadBundle("components/directives/grade/display-grade"),this.canViewGradebook=this.hasViewGradebook(m),this.isStudent=c.userModel.isStudent(),this.isInstructor=c.userModel.isInstructor(),this.canViewGrades=this.hasViewGrades(m),this.canViewGrades?(this.scope.$watch("::column()",(t=>{if(t){this.scope.$watchGroup(["column()","attempt()","grade()"],(()=>{this.scope.grade&&this.scope.grade();this.createGradeDisplayItem(this.scope).then((t=>{this.gradeDisplayItem=t,this.setFullDisplayValue()}))}))}})),this.scope.$watch((()=>r.g()),(()=>{this.displayValue&&this.setFullDisplayValue()}))):this.displayValue=y,s.$on(S.a.REFRESH_OVERALL_EDITOR,(()=>{this.gradeDisplayItem.displayValue||this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()||this.setNoSubmitView()}))}hasViewGradebook(t){return this.gradebookPermissionService.canView(t)}hasViewGrades(t){return this.isStudent||this.gradebookPermissionService.canViewGrades(t)}shouldShowPendingForGrade(){const t=this.scope.grade;return t&&t()&&!t().isPosted()&&t().hasAttempts()}shouldShowPendingForAttempt(){const t=this.scope.attempt;return t&&t()&&t().isNeedsGrading()}shouldRenderInlineRubric(){const t=this.scope.grade;return this.rubricEvaluationIsComplete()||this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()||t().isPastDueZero()}shouldShowExempt(){var t;const e=this.scope.grade;return!!(null===(t=null==e?void 0:e())||void 0===t?void 0:t.isExempt)}isCurrentUserGrader(){return this.contextUser.userModel.memberships.every((t=>t.role===A.V.Grader))}setNoSubmitView(){this.schema&&this.scaleType&&(this.scaleType===A.ac.Percent?this.displayValue="-- %":this.scaleType!==A.ac.Score||this.shouldShowExempt()?this.displayValue=y:this.bundlePromise.then((()=>{var t,e,s,n,i,a;const r=null===(t=this.scope)||void 0===t?void 0:t.grade(),l=null!=(null==r?void 0:r.manualGrade)?r.pointsPossible:null===(s=null===(e=this.scope)||void 0===e?void 0:e.column())||void 0===s?void 0:s.possible,c=null!==(a=null!=l?l:null===(i=null===(n=this.scope)||void 0===n?void 0:n.column())||void 0===i?void 0:i.possible)&&void 0!==a?a:0;this.displayValue=y+this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:"components.directives.grade.display-grade.total",params:{total:o.b(c,2)},noWrap:!0})})))}get colorClass(){return this.canViewGrades?this.gradeDisplayItem?this.gradeDisplayItem.displayValue||this.shouldShowExempt()?this.gradeDisplayItem.getGradeColor():this.isStudent?this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()?"na pending":"na no-attempt":"":"":C}setFullDisplayValue(){if(this.displayValue=this.gradeDisplayItem&&this.gradeDisplayItem.displayValue,this.gradeDisplayItem.displayValue)this.shouldShowPossiblePoints()&&this.isSchemaTypeScore()?this.bundlePromise.then((()=>{this.displayValue=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:"components.directives.grade.display-grade.score",params:{grade:this.gradeDisplayItem.displayValue,possible:o.b(this.scope.grade&&this.scope.grade().pointsPossible||this.scope.column().possible,2)},noWrap:!0,noEscape:!0})})):this.isDiscussionOrJournal()||this.isSchemaTypeLetterOrPercentage()?this.displayValue=this.shouldShowPossiblePoints()||!this.shouldShowExempt()||this.isSchemaTypeLetterOrPercentage()?this.gradeDisplayItem.displayValue:y:this.displayValue=this.shouldShowExempt()&&!this.scope.column().isScorm()?y:this.gradeDisplayItem.displayValue;else if(this.shouldShowExempt())this.displayValue=y;else if(this.isStudent&&(this.shouldShowPendingForGrade()||this.shouldShowPendingForAttempt()))this.bundlePromise.then((()=>{this.displayValue=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.scope),key:"components.directives.grade.display-grade.pending-grade",noWrap:!0})}));else{this.shouldShowExempt()&&this.gradeDisplayItem.getGradeColor();this.setNoSubmitView()}}get isStacked(){return!!this.scope.displayStacked}get cursorClass(){return this.scope.cursor?`cursor-${this.scope.cursor}`:""}isSchemaTypeLetterOrPercentage(){return this.scaleType===A.ac.Percent||this.scaleType===A.ac.Tabular}isSchemaTypeScore(){return this.scaleType===A.ac.Score}isDiscussionOrJournal(){return this.scope.column().isDiscussion()||this.scope.column().isJournal()}shouldShowPossiblePoints(){var t,e,s,n;return this.shouldShowExempt()?(null===(e=null===(t=this.scope.grade())||void 0===t?void 0:t.displayGrade)||void 0===e?void 0:e.isOverride)||(null===(n=null===(s=this.scope.grade())||void 0===s?void 0:s.displayGrade)||void 0===n?void 0:n.scoredByAutomaticZero)||this.gradeDisplayItem.shouldShowTotalPoints():!this.isSmallBP()&&this.gradeDisplayItem&&!a.isNaN(parseFloat(this.gradeDisplayItem.displayValue))&&this.gradeDisplayItem.shouldShowTotalPoints()}isSmallBP(){return r.a.Small===r.f()}shouldShowRubricButton(){var t,e,s;return!(this.scope.hideRubricIcon||!this.scope.column()||!this.scope.column().hasRubricAssociation())&&(!!this.isDiscussionOrJournal()||(null!=this.scope.attempt||!(!this.scope.column().isSingleAttempt()||A.l.InProgress===(null===(s=null===(e=null===(t=this.scope.grade())||void 0===t?void 0:t.ui)||void 0===e?void 0:e.attempt)||void 0===s?void 0:s.status))))}rubricEvaluationIsComplete(){const t=this.scope.column();if(t&&t.hasRubricAssociation()){const e=this.scope.attempt?this.scope.attempt():this.scope.grade().ui.attempt;return t.getRubricAssociation().isWithEvaluations&&(e&&e.isCompleted()||t.isDiscussion()||t.isJournal())}return!1}openRubricEvaluation(t){if(this.scope.disableRubricEvalClick&&this.scope.disableRubricEvalClick())return;t.stopPropagation();const e=this.getRubricStateRef();this.ultraState.current.name.endsWith("peek.assessment-submission-feedback")&&this.ultraState.leavePeekState(this.ultraState.current.name),this.ultraState.goPeekState(e.state,e.args)}getRubricStateRef(){var t;let e,s;(this.scope.grade||this.scope.attempt)&&(this.scope.attempt&&(e=null!==(t=this.scope.attempt().groupAttemptId)&&void 0!==t?t:this.scope.attempt().id),this.scope.grade&&this.scope.grade().ui&&this.scope.grade().ui.attempt&&this.scope.grade().ui.attempt.id&&(e=this.scope.grade().ui.attempt.id||this.scope.grade().ui.attempt.groupAttemptId),s=this.scope.attempt?this.scope.attempt().groupId:null,this.scope.grade&&this.scope.grade().ui.groupAttempt&&(s=this.scope.grade().ui.groupAttempt.groupId));const n={state:"",args:{attemptId:e||null,columnId:this.scope.column().id||null,contentId:this.scope.column().contentId||null,courseId:this.scope.column().courseId}};let i="inline-rubric";if(this.scope.isManualStatusPosted||this.gradeDisplayItem.displayValue&&"0"!==this.gradeDisplayItem.displayValue||this.scope.isExternalSubmission||this.scope.column().isCollectExternalSubmissions()||(i=this.shouldRenderInlineRubric()?"inline-rubric":"peek.rubric-view"),this.canViewGradebook||this.isDiscussionOrJournal()){const t=this.rubricEvaluationIsComplete()?"rubric-evaluation":"rubric-view";n.args.groupId=s||null,n.args.userId=this.scope.grade&&this.scope.grade().user&&(this.scope.grade().user.$pk||this.scope.grade().user.id)||null,n.state=t,this.scope.column().isJournal()&&(n.state=this.rubricEvaluationIsComplete()?v.B.JOURNAL_VIEW_WITH_PARTICIPATION_AND_RUBRIC_EVALUATION:v.B.JOURNAL_VIEW_WITH_PARTICIPATION_AND_RUBRIC_VIEW)}else n.args.groupId=s||null,n.state=`${v.c.ASSESSMENT_ATTEMPT_REVIEW}.${i}`;return p.d(this.ultraState.current.name,".peek.course.grades")&&(this.scope.column().isCollectExternalSubmissions()?(n.state=`${v.c.ASSESSMENT_ATTEMPT_REVIEW}.inline-rubric`,n.args.skipTransitionEvents=!0):n.state="assessment.overview"),n}createGradeDisplayItem(t){const e=this.scope.grade&&this.scope.grade(),s=this.$injector.instantiate(d.a,{gradeDetail:e,scope:t});return s.init(this.scope.column()).then((()=>{let t;return this.schema=s.schema,this.schema&&(this.scaleType=s.schema.scaleType),this.scope.attempt?t=this.scope.attempt().displayGrade:e&&this.schema&&(t=e.displayGrade),s.displayGrade=t,s}))}};T=Object(n.a)([Object(n.c)(0,Object(f.b)("$injector")),Object(n.c)(1,Object(f.b)("$sce")),Object(n.c)(2,Object(f.b)("scope")),Object(n.c)(3,Object(f.b)("element")),Object(n.c)(4,Object(f.b)(l.serviceName)),Object(n.c)(5,Object(f.b)(c.b)),Object(n.c)(6,Object(f.b)(h.d)),Object(n.c)(7,Object(f.b)(m.b)),Object(n.c)(8,Object(f.b)(b.b))],T);class I{constructor(t){this.$injector=t,this.restrict="E",this.template=g,this.scope={attempt:"&?",column:"&",disableRubricEvalClick:"&?",grade:"&?",isManualStatusPosted:"<?",cursor:"@?",hideRubricIcon:"=?",isExternalSubmission:"=?",rubricStateOverride:"@?",displayStacked:"@?"},this.link=(t,e)=>{if(!t.attempt&&!t.grade)throw new Error("An attempt or grade must be included on scope");if(t.attempt&&t.grade)throw new Error("An attempt or grade should be included on scope, not both");if(!t.column)throw new Error("A column must be included on scope");t.displayGradePill=this.$injector.instantiate(T,{scope:t,element:e})}}}I.$inject=["$injector"],i.module(w,[u.N,m.a]).directive("bbDisplayGradePill",["$injector",t=>t.instantiate(I)])},"bs/4":function(t,e){t.exports='<bb-modal id="confirm-time-up-modal"\n          modal-title-key="course.content.assessment.test.modal.confirmTimeUpAlert.title"\n          class="notification hide-x-button"\n          bb-focus="true"\n          analytics-id-tag-prefix="course.content.assessment.test.modal.confirmTimeUpAlert">\n  <div name="modal-contents">\n    <p bb-translate ng-if="::!assessmentAttempt.hasUploadsInProgress">\n      course.content.assessment.test.modal.confirmTimeUpAlert.body\n    </p>\n    <p bb-translate ng-if="::assessmentAttempt.hasUploadsInProgress">\n      course.content.assessment.test.modal.confirmTimeUpAlert.cancelUploads\n    </p>\n  </div>\n  <button name="modal-footer-button-primary" class="button confirm-ok js-primary-button" ng-click="$parent.$close()" bb-translate analytics-id="global.ok">\n    global.ok\n  </button>\n</bb-modal>\n'},ftvW:function(t,e,s){"use strict";var n=s("D57K"),i=(s("r+pC"),s("2szi"),s("lwNT"),s("yC9S")),a=s("nYZ0"),o=s("Qbdf"),r=s("X455"),l=s("TnpK"),c=s("aTRN"),m=s("Is+C"),d=s("pjml"),u=s("Q/M7"),h=s("U2yg"),p=s("zGdY"),b=s("nmzr"),g=s("Htol");s.d(e,"a",(function(){return v}));const v="ultra.components.directives.content.contentNavigator";let A=class{constructor(t,e,s,n,i,a,o,r){this.scope=t,this.$state=e,this.timeout=s,this.contentService=n,this.contextCourse=i,this.contextCourseMembership=a,this.$injector=o,this.scormService=r,this.sibling={next:null,previous:null},this.cr={next:null,previous:null}}$onChanges(){this.init()}isStudent(){return this.contextCourseMembership.isStudentMembership()}init(){this.content&&this.isStudent()&&1!==this.content.depth&&this.$state.includes("**.outline.**")&&(this.scope.content=this.content,this.getLearningModuleContent().then((t=>{t.isLearningModule()&&(this.learningModuleContent=t,this.scope.$on(g.b,((t,e,s)=>{s===p.u.Completed&&this.getSibling("next")})),this.getSibling("next"),this.getSibling("previous"))})))}getSibling(t){this.content.getSibling(t,this.learningModuleContent.id).then((e=>{e&&(this.sibling[t]=e,this.cr[t]=this.$injector.instantiate(c.a,{scope:this.scope}),this.cr[t].getConditions(e))}))}getLearningModuleContent(){const t=this.contextCourse.course,e=this.contentService.findRootNode(t,d.p.ContentRootNode.ROOT),s=n=>this.contentService.getParentFolder(n.parentId,t.id,e).$asPromise().then((t=>t.isRoot()?n:s(t)));return s(this.content)}shouldShowNavigator(){return this.isStudent()&&(!!this.sibling.next||!!this.sibling.previous)}navigate(t){if(!this.sibling[t].canEdit()&&this.sibling[t].isConditionalReleaseLocked())return;const e=this.$state.current.name.split("."),s=e.length-e.lastIndexOf("peek")-1,n=this.sibling[t],i="content-navigator-transition-"+(n.isTest()?"peek":"full");this.$state.go("^.".repeat(s)+i).then(this.timeout).then((()=>{if(n.isDiscussionInOutline()){const t=n.contentDetail[d.p.ContentHandler.CourseLink.toString()].linkSourceId;this.$state.go("^.discussion.view.with-grading",{contentId:t})}else if(n.isTest())this.$state.go("^.assessment.overview",{contentId:n.id});else if(n.isDocument())this.$state.go(`^.${b.k.DOCUMENT}`,{id:n.id});else if(n.isJournal())this.$state.go(`^.${b.H.Journal.JOURNAL_VIEW_WITH_PARTICIPATION}`,{contentId:n.id});else if(n.isFile())this.$state.go(`^.${b.H.File.PREVIEW_FILE}`,{id:n.id});else if(n.isPlaceHolderContent())this.$state.go("^.content-navigator-placeholder",{contentId:n.id});else if(n.isScorm())if(n.getAssociatedGradingColumn())this.$state.go("^.scorm-overview.student",{contentId:n.id});else{let t=u.c(this.scormService.getLaunchLinkFromContent(n));t=u.a(t,"from_ultra","true"),this.$state.go("^.scorm-launch-frame",{toolHref:t,contentId:n.id})}}))}};A.$inject=["$scope",l.d,"$timeout",a.f,o.e,r.d,"$injector",m.c],A=Object(n.a)([Object(i.a)({moduleName:v,componentName:"bbContentNavigator",template:h,bindings:{content:"<",forceShowTitle:"<"},requireModules:[a.d,o.b,r.a,l.b,m.b]})],A)},iAHr:function(t,e,s){"use strict";var n=s("D57K"),i=(s("SMOU"),s("Mak1"),s("s5UK"),s("xjJw"),s("ZKRZ"),s("dpCN"),s("D1Wg"),s("JbSi"),s("TR8k"),s("sZYy"),s("v0wN"),s("QhTW"),s("H/8/"),s("4VOk"),s("HApu"),s("nsO7")),a=s("Llzl"),o=s("Y/dt"),r=s("ihlU"),l=s("QW6a"),c=s("bd9L"),m=s("w9Zy"),d=s("mCEN"),u=s("IiJs"),h=s("vdfi"),p=s("ftvW"),b=s("nYZ0"),g=s("Fvsw"),v=s("NxQJ"),A=s("2lxm"),f=s("ZzYr"),S=s("X455"),w=s("ap1t"),y=s("QyCV"),C=s("oi1r"),T=s("o5Lu"),I=s("0JpG"),k=s("pjml"),D=s("u4ux"),$=s("YHe3"),R=s("6mvz"),x=s("zjPK"),P=s("lEL+"),O=s("TnpK"),G=s("AuQm"),L=s("1ZbL");const E="ultra.components.directives.components.connectionLostDialog",M={Class:G.i,attributes:["analyticsId"],bindingNames:["onDismiss","isVisible"],renderLocalized:!0};a.module(E,[I.moduleName]).component("connectionLostDialog",Object(L.a)(M));const j=/[\\/:*?"<>|()^#%&@+={}~']/g;function F(t,e){const s=`data:application/octet-stream,${encodeURIComponent(e)}`,n=function(t){return t.replace(j,"").substring(0,250)}(t),i=document.createElement("a");i.setAttribute("href",s),i.setAttribute("download",`${n}`),document.body.appendChild(i),i.click(),i.remove()}var z=s("zYa8"),N=s("bwTs");const U="ultra.components.directives.bbUiIcon.small.AlertError";Object(z.a)(N.a,U,"bbUiIconSmallAlertError");var V=s("iq5i"),q=s("jcim"),W=s("7eG8"),B=s("SJlu");const Q="ultra.components.directives.bbUiIcon.medium.Calendar";Object(z.a)(B.a,Q,"bbUiIconMediumCalendar");var _=s("94SL"),H=s("Oyr+"),J=s("Y+9S"),K=s("9hUw"),Y=s("3PCF"),Z=s("IbyE"),X=s("zGdY"),tt=s("IaSh");const et="ultra.components.directives.assessment-progress-bar",st={Class:tt.g,bindingNames:["answerableQuestionCount","unansweredQuestionCount"],attributes:["descriptionId"],renderLocalized:!0};a.module(et,[]).component("bbAssessmentProgressBar",Object(L.a)(st));const nt="ultra.components.directives.assessmentAttemptViewManager",it={Class:tt.d,bindingNames:["isOneQuestionAtATime","isPreventBacktracking","attemptId","courseId","onAfterInitializeQuestionAttemptView","onAfterAsyncViewAction","onBeforeQuestionAttemptsInitialized","onAfterQuestionAttemptsInitialized"],renderLocalized:!0,withProvider:!0,withErrorModalBoundary:!1};a.module(nt,[]).component("bbAssessmentAttemptViewManager",Object(L.a)(it));const at="ultra.components.directives.assessment-question-counts",ot={Class:tt.p,bindingNames:["answerableQuestionCount","unansweredQuestionCount"],attributes:["descriptionId"],renderLocalized:!0};a.module(at,[]).component("bbAssessmentQuestionCounts",Object(L.a)(ot));const rt="ultra.components.directives.assessment-applied-filters",lt={Class:tt.c,bindingNames:["filter","onFilterAvailable","onFilterChanged","questionTypes","questionAttributes"],renderLocalized:!0};a.module(rt,[]).component("bbAssessmentAppliedFilters",Object(L.a)(lt));const ct="ultra.components.directives.assessment-controls-container",mt={Class:tt.e,bindingNames:["showNavigation","showFilter","filter","isBacktrackingProhibited","canNavigateForward","canNavigateBackward","onFilterAvailable","questionsMatchingFilterCount","questionTypes","onFilterChanged","onNavigationChanged","questionAttributes"],renderLocalized:!0,withProvider:!0};a.module(ct,[]).component("bbAssessmentControlsContainer",Object(L.a)(mt));var dt=s("ohO4"),ut=s("TLR+"),ht=s("wNBd"),pt=s("bs/4"),bt=s("3LmG"),gt=s("B5op"),vt=s("ifgA"),At=s("0B2D"),ft=s("aHpC"),St=s("5uPl"),wt=s("DU7P"),yt=s("Htol"),Ct=s("e0uO"),Tt=s("gkef"),It=s("0x+l");s.d(e,"a",(function(){return kt}));const kt="ultra.components.directives.assessment.assessmentAttempt";let Dt=class extends _.a{constructor(t,e,s,n,i,a,r,m,d,u,h,p,b,g,v,A,f,S,w,y,C,T,k){var D,$,R,x;super(s.contentData(),k,p,m,A,S),this.$injector=t,this.$interval=e,this.scope=s,this.$rootScope=n,this.$q=i,this.$modal=a,this.bbOffcanvas=r,this.grade=m,this.localize=d,this.timeout=u,this.contentService=h,this.context=p,this.proctoring=b,this.ultraState=g,this.contentGoalAlignmentPeekStateService=v,this.schemaService=A,this.collabUltra=f,this.currentMembership=S,this.originalityReportService=w,this.windowSize=y,this.peerService=C,this.featureFlagService=T,this.gradableItemUserOptionService=k,this.AssessmentCanvasMode=Ct.a,this.alignedGoalsCount=0,this.customCategory="",this.confirmedToClose=!1,this.hideOverview=!1,this.preventAutoSubmit=!1,this.errorMessage="",this.submitToGRD=!1,this.showCollabLink=!1,this.hasGroupIndicator=!1,this.hasClassIndicator=!1,this._saveInProgress=!1,this._submitInProgress=!1,this.collabUltraEnabled=!1,this.localizedCourseRoles={},this.wasLostConnectionSnackbarShown=!1,this.patchDirtyStudentSubmission=()=>{const t=this.$q.defer();return this.questionAttemptView.isFreeformSaveFailed()?this.attempt.$patch(["studentSubmission"]).$asPromise().then(t.resolve).catch(t.reject):t.resolve(),t.promise},this.submitConfirmedAttempt=()=>{var t;this.preventAutoSubmit=!0;!!(null===(t=this.attempt.studentSubmission)||void 0===t?void 0:t.rawText)||(this.attempt.studentSubmission=null);const e={type:J.c.AttemptSubmitted,status:J.b.Fail};return this.patchAttempt().then((t=>{this.scope.$broadcast(H.a),this.scope.$broadcast("cancel-upload-all"),this.$rootScope.$broadcast(yt.a),this.updateContentReviewState(X.u.Completed),this.openSubmissionReceiptModal(t)}),(()=>{this.submitInProgress=!1,Object(J.r)(e)}))},this.openSubmissionReceiptModal=t=>{var e;const s=this.scope.$new(),n=this.localize.getLocale(this.scope),i=null===(e=this.content)||void 0===e?void 0:e.getDeployedAssessment(),a=this.proctoring.getCurrentProctoringProviderType(null==i?void 0:i.deploymentSettings.proctoringServiceHandle);s.submissionDate=this.localize.formatDatetimeSync(t.attemptReceipt.submissionDate),s.id=t.attemptReceipt.receiptId,s.hasProctoringEnabled=a!==wt.a.None,s.onClose=t=>{t(),this.onDismissSubmissionReceiptModal()},s.hasProctoringEnabled?s.emailConfirmation=this.localize.translateSync({locale:n,key:"components.directives.submission-receipt.proctoring-email-confirmation"}):(s.emailConfirmation=this.localize.translateSync({locale:n,key:"components.directives.submission-receipt.email-confirmation"}),s.downloadClicked=()=>{const t=this.localize.translateSync({locale:n,key:"components.directives.submission-receipt.submission-successful"}),e=this.localize.translateSync({locale:n,key:"components.directives.receiptDownload.course",params:{courseID:this.course.courseId,courseName:this.course.displayName},noWrap:!0,noEscape:!0}),i=this.localize.translateSync({locale:n,key:"components.directives.receiptDownload.assessment",params:{assessmentName:this.content.title},noWrap:!0,noEscape:!0}),a=this.localize.translateSync({locale:n,key:"components.directives.receiptDownload.submission-date",params:{submissionDate:s.submissionDate},noWrap:!0,noEscape:!0}),o=this.localize.translateSync({locale:n,key:"components.directives.receiptDownload.submitter",params:{username:this.localize.formatUsernameSync(this.contentData.submitter,I.ILocaleUsernameFormat.Short,this.scope,{noWrap:!0,noEscape:!0})},noWrap:!0,noEscape:!0}),r=this.localize.translateSync({locale:n,key:"components.directives.receiptDownload.confirmation-number",params:{GUID:s.id},noWrap:!0,noEscape:!0});F(`receipt-${this.course.courseId}-${this.content.title}.txt`,this.localize.translateSync({locale:n,key:"components.directives.receiptDownload.file-content",params:{successfulSubmission:t,course:e,assessment:i,submissionDate:a,submitter:o,GUID:r},noWrap:!0,noEscape:!0})),Object(J.o)(J.c.DownloadLinkClicked),this.submissionReceiptModalInstance.close()}),this.submissionReceiptModalInstance=this.$modal.open({template:ut,scope:s}),this.submissionReceiptModalInstance.result.finally(this.onDismissSubmissionReceiptModal)},this.onDismissSubmissionReceiptModal=()=>{this.redirectFromAttempt().then((()=>{this.submitInProgress=!1}))},this.patchAttempt=()=>this.assessmentAttemptRequest.submitAttempt(this.submitToGRD).catch((t=>{throw this.setErrorMessage(t.$response),t})),this.redirectFromAttempt=()=>{const t=this.$q.defer();return this.assessmentAttemptRequest.refreshAttempt().then(this.redirect).then((()=>{this.saveInProgress=!1,t.resolve()})).catch((e=>{this.saveInProgress=!1,this.setErrorMessage(e.$response),t.reject()})),t.promise},this.onFilterChanged=(t,e=!1)=>{this.canFilterOrNavigate()&&this.scope.$apply((()=>{var s;this.scope.$broadcast(o.f),null===(s=this.questionAttemptView)||void 0===s||s.onFilterChanged(t,e)}))},this.onNavigationChanged=t=>{this.canFilterOrNavigate()&&this.scope.$apply((()=>{var e,s,n,i;switch(this.scope.$broadcast(o.f),t){case tt.w.First:null===(e=this.questionAttemptView)||void 0===e||e.navigateFirst();break;case tt.w.Previous:null===(s=this.questionAttemptView)||void 0===s||s.navigatePrevious();break;case tt.w.Next:null===(n=this.questionAttemptView)||void 0===n||n.navigateNext();break;case tt.w.Last:null===(i=this.questionAttemptView)||void 0===i||i.navigateLast()}}))},this.onAfterInitializeQuestionAttemptView=t=>{this.questionAttemptView=t,this.questionAttemptView.setNavigationOrFilteringChangedCallback((()=>{var t;let e=".assessment-attempt-panel";this.windowSize.isLargeBreakpoint()||(e=`${e} .panel-content`),null===(t=document.querySelector(e))||void 0===t||t.scrollTo({top:0,left:0,behavior:"auto"}),G.T.getInstance().dequeueSnackbar(G.S.AssessmentQuestionFetchFailure)}))},this.launchRestoredConnectionSnackbar=()=>{G.T.getInstance().enqueueSnackbar(G.S.AssessmentConnectivity,{snackbarMessage:this.restoredConnectionSnackbarMsg,isPersistent:!1,isErrorOrWarning:!0},null,It.Connection)},this.launchLostConnectionSnackbar=()=>{G.T.getInstance().enqueueSnackbar(G.S.AssessmentConnectivity,{snackbarMessage:this.lostConnectionSnackbarMsg,isPersistent:!1,isErrorOrWarning:!0},null,It.ConnectionIssue)},this.dismissConnectionSnackbar=()=>{G.T.getInstance().dequeueSnackbar(G.S.AssessmentConnectivity)},this.canFilterOrNavigate=t=>!this.autoSaveRetryInterval||(null==t||t.preventDefault(),null==t||t.stopImmediatePropagation(),this.dismissConnectionSnackbar(),this.launchLostConnectionSnackbar(),!1),this.onAfterAsyncViewAction=t=>{this.timeout(t,this.scope,0,!0)},this.onBeforeQuestionAttemptsInitialized=t=>{let e;return t.map((t=>(e||(e=this.course.gradebook.attempts.$new(t.attemptId)),e.assessment.answers.$buildRaw(t))))},this.onAfterQuestionAttemptsInitialized=t=>{this.hasManualPageBreaks=t.hasManualPageBreaks(),this.showPageNavigation=this.isOneQuestionAtATime||this.hasManualPageBreaks},this.isNavAndFilterFooterVisible=()=>{var t;return this.isOneQuestionAtATime||this.hasManualPageBreaks||(null===(t=this.questionAttemptView)||void 0===t?void 0:t.isFilterable())},this.onDismissConnectionLostDialogCallback=()=>{this.scope.$apply((()=>{this.connectionLostDialog.isVisible=!1,this.autosaveRetriesCounter=0}))},this.buildConnectionLostDialog=()=>{this.connectionLostDialog={isVisible:!1,onDismiss:this.onDismissConnectionLostDialogCallback},this.autosaveRetriesCounter=0},this.attempt=s.attempt(),this.contentData=s.contentData(),this.init(),this.peerService.getOrCreatePeerContentWithAttemptsFromContent(this.contentData.courseContent).then((t=>this.peerReviewContentObject=t)),this.course=s.course(),this.redirect=s.redirect,this.dueDateException=this.gradableItemUserOptionService.getGradableItemUserOptionByMembershipId(this.contentData.gradingColumn.id,S.courseMembership.id);const P=null!==($=null===(D=this.dueDateException)||void 0===D?void 0:D.effectiveDueDate)&&void 0!==$?$:this.dueDate;this.timedTestAttemptDetail=this.isDueDateEnforced?this.attempt.getTimedTestAttemptDetailWithDueDate(P):this.attempt.getTimedTestAttemptDetail(),this.scoreProviderHandle=this.contentData.gradingColumn.scoreProviderHandle||Z.Q.Test;const O=null===(x=null===(R=this.content)||void 0===R?void 0:R.getDeployedAssessment())||void 0===x?void 0:x.deploymentSettings;this.isOneQuestionAtATime=X.c.Item===O.deliveryType,this.isPreventBacktracking=O.isBacktrackingProhibited,p.userHasGradebookModificationEntitlement().then((e=>{if(e)this.ultraState.goPeekState("course.outline",{courseId:this.course.id});else{s.assessmentAttempt=this,this.toolAttemptDetail=this.attempt.getToolAttemptDetailItem(this.scoreProviderHandle),Z.Q.Test.isEqualTo(this.scoreProviderHandle)&&(this.hasTimeLimit=this.timedTestAttemptDetail.hasTimeLimit,this.hasTimeLimit&&(this.canContinue=this.timedTestAttemptDetail.hasExtraTime,this.hasUnlimitedExtraTime=this.timedTestAttemptDetail.hasUnlimitedExtraTime,this.hasLimitedExtraTime=this.timedTestAttemptDetail.hasLimitedExtraTime,this.willAutoSubmit=this.timedTestAttemptDetail.willAutoSubmit,this.displayedTimeLimit=Math.floor(this.timedTestAttemptDetail.displayedTimeLimitSeconds/60),this.displayedExtraTime=Math.floor(this.timedTestAttemptDetail.displayedExtraTimeSeconds/60))),this.attemptHandlers=t.instantiate(Rt),s.$on("bb-register-question-attempt-handlers",((t,e,s,n)=>{this.attemptHandlers.registerHandler(e,s,n)})),this.safeAssignEnabled=this.content.isSafeAssignEnabled(),this.assessmentAttemptRequest=new $t(this.attempt,this.safeAssignEnabled,this.attemptHandlers,this),this.registerAutoSaveEventsAndHandlers(),null==this.contentData.gradingColumn.rubricAssociations&&this.contentData.gradingColumn.$fetch({expand:"associatedRubrics"}).$asPromise().then((t=>{this.contentData.gradingColumn.rubricAssociations=t.rubricAssociations})),this.content.$fetchIfNotExpanded({expand:"assignedGroups,alignedGoals"}).$then((t=>{v.resolveGoalAlignableContentsForStudent(this.course,this.contentData,this.attempt).then((([t,e])=>{this.goalAlignedContents=t,this.alignedGoalsCount=e}));const e=this.content.assignedGroups&&this.content.assignedGroups[0];this.content.courseId&&e&&this.collabUltra.getCollabSessionStatus(this.content.courseId,e.groupId).then((t=>{null!==t&&(this.collabUltraEnabled=!0)}))})),this.calculateKeysAndIconsBasedOnCategory(),this.content.canSubmitToGlobalReferenceDatabase()&&this.context.getPreference(l.b).then((t=>{t&&(this.submitToGRD="true"===t.value)})),s.$on(o.e,(()=>{this.save()})),s.$on("$stateChangeStart",((t,e,n,i,a)=>{const o=e.name;if(i.name!==o&&o.indexOf("attempt")<0&&o.indexOf("assessment-details")<0){const e={type:J.c.AttemptSaveAndClosed,status:J.b.Success},n={type:J.c.AttemptSubmitted,status:J.b.Success};if(this.confirmedToClose)return void Object(J.r)(e);if(!this.canFilterOrNavigate())return void t.preventDefault();if(s.currentRemainingSeconds>0&&!this.submitInProgress&&this.hasTimeLimit)return t.preventDefault(),this.confirmLeavingModal&&this.confirmLeavingModal.dismiss(),void this.showConfirmLeavingModal();if(this.submitInProgress)return void Object(J.r)(n);Object(J.r)(e)}})),s.$on("bb-test-resumed",(t=>{this.context.getPreference(this.extraTimeAcknowledgedKey).catch((t=>{404===t.$response.status&&(this.extraTimeAcknowledged="true",this.showResumeTestModal())}))})),s.$on("bb-time-is-up",((t,e)=>{const s=document.activeElement;if((null==s?void 0:s.className.includes("bb-editor"))&&s.blur(),this.preventAutoSubmit)return;this.submitModalInstance&&this.submitModalInstance.dismiss(),this.softTimeUpModal&&this.softTimeUpModal.dismiss(),this.confirmLeavingModal&&this.confirmLeavingModal.dismiss(),this.resumeTestModal&&this.resumeTestModal.dismiss();const n=this.$q.defer();n.promise.then((()=>{if(this.clearAutoSaveRetryInterval(),"hard"===e.stopMode)this.showTimeUpModal(),this.forceSave();else if("soft"===e.stopMode){const t=6e4;this.scope.showTimeUpIndicator=!0,this.timeout((()=>{this.scope.showTimeUpIndicator=!1}),this.scope,t),this.extraTimeAcknowledged="true",this.showSoftTimeUpModal()}})),this.autoSaveMonitorDeferred?this.scope.$broadcast("bb-start-auto-submission",n):n.resolve()})),s.$on("submit-to-global-reference",((t,e)=>{this.submitToGRD=e.submitToGRD})),this.content.isGroupContent&&this.content.ui.hasConversationAttached&&this.content.attachedForumLink&&this.loadCollabConfig(),this.showConversations()&&this.updateIndicators();const e=this.contentService.indicatorCacheService.$onClassConversationIndicatorRemoved(((t,e,s)=>{e===this.content.courseId&&s===this.content.id&&(this.hasClassIndicator=!1)})),n=this.contentService.indicatorCacheService.$onGroupConversationIndicatorRemoved(((t,e,s)=>{e===this.content.courseId&&s===this.content.id&&(this.hasGroupIndicator=!1)}));s.$on("$destroy",(()=>{var t,s,i,a,o;e(),n(),null===(t=this.timeUpTestModal)||void 0===t||t.dismiss(),null===(s=this.submitModalInstance)||void 0===s||s.dismiss(),null===(i=this.softTimeUpModal)||void 0===i||i.dismiss(),null===(a=this.confirmLeavingModal)||void 0===a||a.dismiss(),null===(o=this.resumeTestModal)||void 0===o||o.dismiss(),G.T.getInstance().dequeueSnackbar(G.S.AssessmentConnectivity),G.T.getInstance().dequeueSnackbar(G.S.AssessmentQuestionFetchFailure)}))}this.fetchOriginalityReportProviderType()})),this.buildConnectionLostDialog(),this.lostConnectionSnackbarMsg=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.snackbar.networkConnectivity.lost"}),this.restoredConnectionSnackbarMsg=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.snackbar.networkConnectivity.restored"}),this.scope.$on(c.c,((t,e,s,n)=>{var i;(null==n?void 0:n.area)===G.c.Assessments&&(null===(i=this.questionAttemptView)||void 0===i||i.onAutoSaveStatusChanged(n.id,n.saveNumber,e))}))}fetchOriginalityReportProviderType(){return this.originalityReportService.retrieveOriginalityIntegration(this.content)}get assessmentDueDate(){return this.studentHasDueDateException?this.dueDateException.effectiveDueDate:this.dueDate}get attemptId(){return this.content.isGroupContent&&k.A.isGroupAttempt(this.attempt)?this.attempt.attempts[0].id:this.attempt.id}get isBacktrackingProhibited(){var t,e,s;return!!(null===(s=null===(e=null===(t=this.content)||void 0===t?void 0:t.getDeployedAssessment())||void 0===e?void 0:e.deploymentSettings)||void 0===s?void 0:s.isBacktrackingProhibited)}get isPeerGrading(){var t;return!!(null===(t=this.peerReviewContentObject)||void 0===t?void 0:t.peerGrading)}get peerReviewDueDate(){var t;return null===(t=this.peerReviewContentObject)||void 0===t?void 0:t.peerReviewDueDate}get numOfPeerReviewsToComplete(){var t;return null===(t=this.peerReviewContentObject)||void 0===t?void 0:t.numOfPeerReviewsToComplete}get hasDueDateAccommodation(){return this.currentMembership.isDueDateExcepted()}get allowLatePeerReviews(){var t;return!!(null===(t=this.peerReviewContentObject)||void 0===t?void 0:t.allowLatePeerReviews)}get isPeerGradingConfigured(){var t;return!!(null===(t=this.peerReviewContentObject)||void 0===t?void 0:t.isPeerGradingConfigured)}get isSubmissionLate(){return this.isOverdue&&!this.isAssessmentSubmissionComplete||this.attemptCountSubmittedLate>0}get shouldShowTimedTestIndicator(){return this.hasTimeLimit||this.isDueDateEnforced}get shouldShowMarkedLateNotice(){return this.isOverdue&&!this.isDueDateEnforced}get isAssessmentSubmissionComplete(){return!!(this.attemptCount&&this.attemptCount>0&&this.attemptCountSubmitted&&this.attemptCountSubmitted>0)}getMembershipByUser(t){return i.find(this.course.memberships,(e=>e.user.id===t.id))}getCourseRole(t){return this.getLocalizedRoleNameByCourseRole(this.getMembershipByUser(t).courseRole)}canSendMessage(t){const e=this.getMembershipByUser(t);return!(this.course.isPrivate()||this.course.isComplete())&&e.isAvailable&&e.user.isAvailable}isInactive(t){const e=this.getMembershipByUser(t);return!e.isAvailable||!e.user.isAvailable}getLocalizedRoleNameByCourseRole(t){const e=t.identifier.toString();if(this.localizedCourseRoles[e])return this.localizedCourseRoles[e];if(e in k.w.toBeLocalizedRoleLabels){const t=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:k.w.toBeLocalizedRoleLabels[e]});return this.localizedCourseRoles[e]=t,t}return t.courseName.rawValue}set extraTimeAcknowledged(t){this.context.setPreference(this.extraTimeAcknowledgedKey,t)}get extraTimeAcknowledgedKey(){return"attempt"+this.attempt.id.split("_").join(".")+".extra.time.acknowledged"}get currentRemainingMinutes(){return Math.ceil(this.scope.currentRemainingSeconds/60)}get groupId(){return this.content&&this.content.assignedGroups&&this.content.assignedGroups[0].groupId}get showProgressHeader(){return this.shouldShowTimedTestIndicator||this.hasAnswerableQuestions}initExecAutoSubmitDeferred(){this.execAutoSubmitDeferred||(this.execAutoSubmitDeferred=this.$q.defer())}forceSave(){if(this.autoSaveMonitorDeferred){const t={type:J.c.AttemptSubmitted,status:J.b.Fail};this.initExecAutoSubmitDeferred(),this.submitInProgress=!0,this.patchAttempt().then((()=>{this.scope.$broadcast(H.a),this.scope.$broadcast("cancel-upload-all"),this.$rootScope.$broadcast(yt.a),this.execAutoSubmitDeferred.resolve()}),(()=>{this.submitInProgress=!1,Object(J.r)(t)}))}else this.autoSubmit()}calculateKeysAndIconsBasedOnCategory(){const t=this.contentData.gradingColumn.gradebookCategory,e=t&&!t.isUserDefined,s=`${this.course.isOrganization?"organization":"course"}.content.assessment.modal.confirmSubmitAttemptAlert`;let n=e?t.title:"custom",i="body";this.isOverdue&&(i="late"),this.customCategory=e?"":t&&t.title,this.iconClass=e?n.split(".")[0].toLowerCase():"custom-item",this.groupAssessmentKey=`course.content.assessment.settings.groupAssessment.${n}`,this.headerKey=`course.content.assessment.type.${n}`,this.content.isGroupContent&&(n=e?"group"+n:"groupCustom"),this.submitModalHeaderKey=`${s}.title.${n}`,this.submitModalBodyKey=`${s}.${i}.${n}`,e||(this.submitModalTranslateOptions={title:{locale:this.localize.getLocale(this.scope),key:this.submitModalHeaderKey,params:{title:this.customCategory},noWrap:!0,noEscape:!0}})}get content(){return this.contentData.courseContent}closePanel(){this.confirmedToClose=!0,this.redirectFromAttempt()}showAlreadySubmittedDialog(){const t=this.scope.$new();return t.customClose=()=>{this.closePanel()},this.$modal.open({scope:t,template:At})}showConfirmLeavingModal(){this.confirmLeavingModal=this.$modal.open({template:gt,scope:this.scope}),this.confirmLeavingModal.result.then((()=>{this.closePanel()}))}showSoftTimeUpModal(){this.softTimeUpModal=this.$modal.open({template:bt,backdrop:"static",scope:this.scope}),this.softTimeUpModal.result.then((()=>{this.forceSave(),this.execAutoSubmitDeferred.promise.then((()=>{this.updateContentReviewState(X.u.Completed),this.openSubmissionReceiptModal(this.attempt)}))}),(()=>{this.scope.showTimeUpIndicator=!1,this.scope.$broadcast("bb-cancel-auto-submission")}))}updateContentReviewState(t){var e;if(null===(e=this.content.permissions)||void 0===e?void 0:e.canHaveReviewState)return this.content.updateState(t)}showResumeTestModal(){this.resumeTestModal=this.$modal.open({template:bt,backdrop:"static",scope:this.scope}),this.resumeTestModal.result.then((()=>{this.forceSave(),this.execAutoSubmitDeferred.promise.then((()=>{this.updateContentReviewState(X.u.Completed),this.openSubmissionReceiptModal(this.attempt)}))}))}showTimeUpModal(){this.timeUpTestModal=this.$modal.open({template:pt,backdrop:"static",scope:this.scope}),this.timeUpTestModal.result.then((()=>{this.execAutoSubmitDeferred.promise.then((()=>{this.updateContentReviewState(X.u.Completed),this.openSubmissionReceiptModal(this.attempt)}))}),(()=>{this.execAutoSubmitDeferred.promise.then((()=>{this.redirectFromAttempt()}))}))}save(){if(this.saveInProgress||!this.canFilterOrNavigate())return;this.saveInProgress=!0;const t={type:J.c.AttemptSaveAndClosed,status:J.b.Fail};this.saveDeferred?this.saveDeferred.promise.then((()=>{this.attemptHandlers.patchAllDirtyAttempts(this.isBacktrackingProhibited).then(this.patchDirtyStudentSubmission).then(this.redirectFromAttempt).catch((()=>{this.saveInProgress=!1,Object(J.r)(t)}))})).catch((()=>{this.saveInProgress=!1,Object(J.r)(t)})):(this.saveInProgress=!0,this.attemptHandlers.patchAllDirtyAttempts(this.isBacktrackingProhibited).then(this.patchDirtyStudentSubmission).then(this.redirectFromAttempt).catch((()=>{this.saveInProgress=!1,Object(J.r)(t)})))}submit(){!this.saveInProgress&&this.canFilterOrNavigate()&&(this.saveDeferred?(this.saveInProgress=!0,this.saveDeferred.promise.then((()=>{this.doSubmit(),this.saveInProgress=!1}),(()=>{this.saveInProgress=!1}))):this.doSubmit())}get shouldShowInProgressWarning(){return this.questionAttemptView.unansweredQuestionCount>0}doSubmit(){this.submitInProgress=!0,this.calculateKeysAndIconsBasedOnCategory(),this.submitModalInstance=this.$modal.open({template:ht,scope:this.scope}),this.submitModalInstance.result.then(this.submitConfirmedAttempt,(()=>{var t;this.shouldShowInProgressWarning&&!this.isBacktrackingProhibited&&(null===(t=this.questionAttemptView)||void 0===t||t.onFilterChanged({status:tt.A.Unanswered},!0)),this.submitInProgress=!1}))}getStudentSubmissionRawText(t){return t.studentSubmission&&t.studentSubmission.rawText||""}disableButtonsOnEmptySubmission(){return""===this.getStudentSubmissionRawText(this.attempt)}disableButtonsOnNoAttempt(){var t,e,s;const{toolAttemptDetail:n}=this.attempt,i=n&&n[this.scoreProviderHandle.toString()],a=i&&i.status;return X.l.Completed===a?!(null===(t=i.assessment)||void 0===t?void 0:t.hasAnswerableQuestions)&&((null===(e=i.assessment)||void 0===e?void 0:e.hasPresentationOnlyQuestions)||0===(null===(s=i.assessment)||void 0===s?void 0:s.questionCount)):X.l.NotAttempted===a}shouldDisableSaveSubmitButtons(){var t,e,s;const n=this.disableButtonsOnEmptySubmission(),i=this.disableButtonsOnNoAttempt(),a=(null===(t=this.attempt.toolAttemptDetail)||void 0===t?void 0:t[this.scoreProviderHandle.toString()]).assessment,o=!(null==a?void 0:a.hasAnswerableQuestions)&&(null==a?void 0:a.hasPresentationOnlyQuestions);return this.saveInProgress||(null===(e=this.assessmentAttemptRequest)||void 0===e?void 0:e.isRequestInProgress())||(null===(s=this.questionAttemptView)||void 0===s?void 0:s.isWaitingForAnswersToPersist())||n&&i&&o||n&&i&&!this.lastSaved&&""===this.errorMessage}autoSubmit(){const t={type:J.c.AttemptSubmitted,status:J.b.Fail};this.submitInProgress=!0,this.attempt.status=X.l.NeedsGrading,this.attempt.toolAttemptDetail={},this.attempt.toolAttemptDetail[this.scoreProviderHandle.toString()]={type:X.h.Test},this.safeAssignEnabled&&(this.attempt.submissionParams={[Y.b]:{globalReferenceDatabase:this.submitToGRD}}),this.initExecAutoSubmitDeferred(),this.attempt.$patch().$then((()=>{this.scope.$broadcast(H.a),this.scope.$broadcast("cancel-upload-all"),this.execAutoSubmitDeferred.resolve()}),(e=>{Object(J.m)()&&401!==e.$response.status&&(e.$response.status=null),Object(J.r)(t)}))}set saveInProgress(t){this._saveInProgress=t,this.$rootScope.$broadcast(t?o.b:o.a),this.scope.$broadcast("bb-assessment-attempt-question-readonly",this._saveInProgress)}get saveInProgress(){return this._saveInProgress}set submitInProgress(t){this.$rootScope.$broadcast(t?o.d:o.c),this._submitInProgress=t}get submitInProgress(){return this._submitInProgress}setErrorMessage(t){var e;-1===t.status?(this.setupAutoSaveRetryInterval(),this.errorMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.footer.errorMessage.lostConnection"})):(null===(e=t.data)||void 0===e?void 0:e.code)===X.T?(this.clearAutoSaveRetryInterval(),this.errorMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.footer.errorMessage.answerTooLong",params:{maxInputSize:t.data.developerMessage?parseInt(t.data.developerMessage,10):-1}})):(this.clearAutoSaveRetryInterval(),this.errorMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.footer.errorMessage.default"}))}registerAutoSaveEventsAndHandlers(){this.scope.$on("bb-autosave-form",((t,e,s)=>{switch(e){case G.d.Change:this.saveInProgress||(this.saveDeferred=this.$q.defer(),this.autoSaveMonitorDeferred=this.$q.defer());break;case G.d.Saved:this.errorMessage="",this.clearAutoSaveRetryInterval(),this.saveDeferred&&this.timeout((()=>{this.saveDeferred.resolve(),this.scope.$broadcast(o.f),this.lastSaved=new Date}),this.scope),this.autoSaveMonitorDeferred&&this.autoSaveMonitorDeferred.resolve();break;case G.d.SaveFailure:this.saveDeferred&&this.saveDeferred.resolve(),s&&this.setErrorMessage(s.$response)}}))}setupAutoSaveRetryInterval(){this.autoSaveRetryInterval||(this.wasLostConnectionSnackbarShown||(this.dismissConnectionSnackbar(),this.launchLostConnectionSnackbar(),this.wasLostConnectionSnackbarShown=!0),this.autoSaveRetryInterval=this.$interval((()=>{this.scope.$broadcast(o.f),this.autosaveRetriesCounter++,this.autosaveRetriesCounter===c.d&&(this.dismissConnectionSnackbar(),this.connectionLostDialog.isVisible=!0)}),c.e))}clearAutoSaveRetryInterval(){this.autoSaveRetryInterval&&(this.wasLostConnectionSnackbarShown&&(this.dismissConnectionSnackbar(),this.launchRestoredConnectionSnackbar(),this.wasLostConnectionSnackbarShown=!1),this.$interval.cancel(this.autoSaveRetryInterval),this.autoSaveRetryInterval=null,this.autosaveRetriesCounter=0,this.connectionLostDialog.isVisible=!1)}showGoals(){this.hideOverview=!0}hideGoals(){this.hideOverview=!1}showConversations(){return v.a.showConversations(this.content)}openRubricView(){this.timeout((()=>{const t={columnId:this.contentData.gradingColumn.id};this.ultraState.goPeekState("rubric-view",t)}),this.scope,0,!1)}openSafeAssignView(){this.ultraState.goPeekState("attempt-safe-assign-setting",{submitToGRD:this.submitToGRD})}loadCollabConfig(){this.collabUltra.getCollabB2Info().then((t=>{200===t.$response.status?this.showCollabLink=!0:this.showCollabLink=!1}),(t=>{this.showCollabLink=!1})),!this.forumId&&this.content.attachedForumLink&&this.content.attachedForumLink["resource/x-bb-courselink"]&&this.course.contents.$find(this.content.attachedForumLink["resource/x-bb-courselink"].courseContent).$then((t=>{this.forumId=t.contentDetail["resource/x-bb-forumlink"].id}))}get shouldShowCollabLink(){return this.showCollabLink&&a.isDefined(this.forumId)&&this.collabUltraEnabled}launchCollabSession(){const t=window.open();this.collabUltra.launchDiscussionSession(this.content.courseId,this.forumId,this.content.assignedGroups[0].groupId).then((e=>{t.location.href=e.url}),(e=>{t.close(),e.$response.status=null}))}updateIndicators(){this.content&&this.contentService.fetchIndicators(this.content.courseId).then((()=>{const t=this.contentService.getCourseContentCache(this.content.courseId,this.content.id);t&&(this.hasClassIndicator=t.classConversationHasIndicator,this.hasGroupIndicator=!!t.groupIds)}))}getProctoringBrowserText(){return this.proctoring.getProctoringOverviewBrowserText(this.content)}get hasAnswerableQuestions(){var t,e;const s=(null===(t=this.attempt.toolAttemptDetail)||void 0===t?void 0:t[this.scoreProviderHandle.toString()]).assessment;return null!==(e=null==s?void 0:s.hasAnswerableQuestions)&&void 0!==e&&e}get hasFilterApplied(){var t,e;return null!==(e=null===(t=this.questionAttemptView)||void 0===t?void 0:t.hasFilterApplied())&&void 0!==e&&e}};Dt=Object(n.a)([Object(n.c)(0,Object(ft.b)("$injector")),Object(n.c)(1,Object(ft.b)("$interval")),Object(n.c)(2,Object(ft.b)("scope")),Object(n.c)(3,Object(ft.b)("$rootScope")),Object(n.c)(4,Object(ft.b)("$q")),Object(n.c)(5,Object(ft.b)("$modal")),Object(n.c)(6,Object(ft.b)(m.e)),Object(n.c)(7,Object(ft.b)(T.n)),Object(n.c)(8,Object(ft.b)(I.serviceName)),Object(n.c)(9,Object(ft.b)(P.b)),Object(n.c)(10,Object(ft.b)(b.f)),Object(n.c)(11,Object(ft.b)(g.b)),Object(n.c)(12,Object(ft.b)($.b)),Object(n.c)(13,Object(ft.b)(O.d)),Object(n.c)(14,Object(ft.b)(h.d)),Object(n.c)(15,Object(ft.b)(C.b)),Object(n.c)(16,Object(ft.b)(u.b)),Object(n.c)(17,Object(ft.b)(S.d)),Object(n.c)(18,Object(ft.b)(St.b)),Object(n.c)(19,Object(ft.b)(Tt.b)),Object(n.c)(20,Object(ft.b)(K.b)),Object(n.c)(21,Object(ft.b)(dt.b)),Object(n.c)(22,Object(ft.b)(A.b))],Dt);class $t{constructor(t,e,s,n){this.attempt=t,this.isSafeAssignEnabled=e,this.attemptHandlers=s,this.assessmentAttemptView=n,this.isAttemptPatchInProgress=!1,this.isAttemptRefreshInProgress=!1}waitForInProgressAttemptPatch(){return this.attempt.$asPromise()}refreshAttempt(){return this.isAttemptRefreshInProgress=!0,this.attempt.$fetch({expand:"toolAttemptDetail"}).$asPromise().finally((t=>(this.isAttemptRefreshInProgress=!1,t)))}submitAttempt(t){return this.isAttemptPatchInProgress=!0,this.attemptHandlers.patchAllDirtyAttempts(this.assessmentAttemptView.isBacktrackingProhibited).then(this.assessmentAttemptView.patchDirtyStudentSubmission).then((()=>this.waitForInProgressAttemptPatch().then((()=>(this.attempt.status=X.l.NeedsGrading,this.attempt.toolAttemptDetail={},this.attempt.toolAttemptDetail[Z.Q.Test.toString()]={type:X.h.Test},this.isSafeAssignEnabled&&(this.attempt.submissionParams={[Y.b]:{globalReferenceDatabase:t}}),this.attempt.$patch().$asPromise()))).finally((t=>t)))).finally((()=>{this.isAttemptPatchInProgress=!1}))}isRequestInProgress(){return this.isAttemptPatchInProgress||this.isAttemptRefreshInProgress}}class Rt{constructor(t){this.$q=t,this.attempts=[]}registerHandler(t,e,s){this.attempts.push(new xt(t,e,s))}patchAllDirtyAttempts(t){const e=[];return this.attempts.forEach((s=>{!s.isDirty()||t&&s.getAttempt().attemptStatus===X.l.InProgress||(s.getAttempt().$cancel(),s.prepareGivenAnswer(),e.push(s.getAttempt().$patch(["questionType","givenAnswer","givenAnswers"]).$asPromise()))})),this.$q.all(e)}length(){return this.attempts.length}}Rt.$inject=["$q"];class xt{constructor(t,e,s){this.isDirty=t,this.getAttempt=e,this.prepareQuestionAttemptGivenAnswer=s}prepareGivenAnswer(){return this.prepareQuestionAttemptGivenAnswer(this.getAttempt())}}class Pt{constructor(t,e){this.$compile=t,this.$injector=e,this.restrict="E",this.scope={attempt:"&",contentData:"&",course:"&",redirect:"&"},this.template=vt,this.link=(t,e,s)=>{t.assessmentAttempt=this.$injector.instantiate(Dt,{scope:t,element:e,attrs:s})}}}Pt.$inject=["$compile","$injector"],a.module(kt,[et,at,rt,ct,nt,r.a,U,V.a,q.a,W.a,Q,f.a,w.a,y.a,D.b,R.a,x.a,u.a,p.a,$.a,K.a,d.a,dt.a,A.a,E,Tt.a]).directive("bbAssessmentAttempt",["$injector",t=>t.instantiate(Pt)])},ifgA:function(t,e){t.exports='<div class="tests test-attempt assessment-attempt" ng-class="{\'late-attempt\': assessmentAttempt.isOverdue }"\n     bb-timed-test-indicator="assessmentAttempt.timedTestAttemptDetail">\n  <bb-assessment-attempt-view-manager\n    is-one-question-at-a-time="::assessmentAttempt.isOneQuestionAtATime"\n    is-prevent-backtracking="::assessmentAttempt.isPreventBacktracking"\n    attempt-id="::assessmentAttempt.attemptId"\n    course-id="::assessmentAttempt.course.id"\n    on-after-initialize-question-attempt-view="::assessmentAttempt.onAfterInitializeQuestionAttemptView"\n    on-after-async-view-action="::assessmentAttempt.onAfterAsyncViewAction"\n    on-before-question-attempts-initialized="::assessmentAttempt.onBeforeQuestionAttemptsInitialized"\n    on-after-question-attempts-initialized="::assessmentAttempt.onAfterQuestionAttemptsInitialized"\n  ></bb-assessment-attempt-view-manager>\n  <div class="panel-wrap panel-wrap-flex has-bb-panel-header assessment-attempt-panel" ng-class="{\'over-close-button-small\': assessmentAttempt.hideOverview, \'has-footer\': !assessmentAttempt.hideOverview}">\n    <header class="black-panel-header">\n      <div class="black-header-contents">\n        <button class="left-off-canvas-toggle menu-toggle standard-button dark-background" type="button" analytics-id="course.content.assessment.left.canvas.toggle.button">\n          <bb-svg-icon size="small" icon="main-menu"></bb-svg-icon>\n          <span class="sr-only" bb-translate>course.content.assessment.attempt.menu</span>\n        </button>\n        <h1 class="panel-title" bb-translate="{{::assessmentAttempt.headerKey}}" translate-values="{\'title\': assessmentAttempt.customCategory}"></h1>\n        <button bb-peek-sref="conversations({courseId: assessmentAttempt.content.courseId, contentId: assessmentAttempt.content.id})"\n                bb-translate-attrs="{\'aria-label\':\'components.directives.header.openAria\'}"\n                class="open-conversation standard-button dark-background" ng-show="assessmentAttempt.showConversations()"\n                analytics-id="course.content.assessment.conversation.button" ng-click="assessmentAttempt.canFilterOrNavigate($event)">\n          <bb-svg-icon size="small" icon="conversation" ng-class="{\'has-indicator\': assessmentAttempt.hasClassIndicator}"></bb-svg-icon>\n        </button>\n        <button class="standard-button dark-background" id="details-info-button" type="button" tabindex="0"\n                bb-translate-attrs="{\'aria-label\': \'course.content.assessment.overview.detailsAriaLabel\'}"\n                bb-peek-sref="assessment-details({courseId: assessmentAttempt.content.courseId, contentId: assessmentAttempt.content.id, submitToGRD: assessmentAttempt.submitToGRD})"\n                analytics-id="course.content.assessment.details.button" ng-click="assessmentAttempt.canFilterOrNavigate($event)">\n          <bb-svg-icon size="small" icon="information"></bb-svg-icon>\n        </button>\n      </div>\n    </header>\n    <header class="row panel-header show-for-small-only" ng-show="assessmentAttempt.hideOverview">\n      <div class="goal-small-panel">\n        <button class="button super-clear icon" ng-click="assessmentAttempt.hideGoals()" analytics-id="course.content.assessment.goals.button">\n          <bb-svg-icon size="small" icon="arrow-left"></bb-svg-icon>\n          <span class="sr-only" bb-translate>course.goal-alignment.goal.sr-only.closeGoals</span>\n        </button>\n        <div class="goal-head">\n          <span class="goal-title" bb-translate>course.goal-alignment.goal.header</span>\n        </div>\n      </div>\n    </header>\n    <section class="panel-content has-slide-up-section" ng-class="{\'section-slide\': assessmentAttempt.hideOverview}">\n      \x3c!-- do not hide header on small - it is needed --\x3e\n      <bb-panel-header\n        show-course="true"\n        show-conversations="assessmentAttempt.showConversations()"\n        ng-class="{\'has-indicator\': assessmentAttempt.hasClassIndicator}"\n        content="assessmentAttempt.content"\n        panel-title="assessmentAttempt.content.title"\n        can-edit="false"\n        on-navigate-to-conversation="assessmentAttempt.canFilterOrNavigate()">\n      </bb-panel-header>\n      <div ng-if="::assessmentAttempt.contentData.gradingColumn.anonymousGrading" class="assessment-attempt__anonymous-grading-info" bb-translate>course.content.assessment.overview.anonymousGrading</div>\n      <div class="panel-content-flex panel-content-inner assessment-overview-panel">\n        <div class="panel-content-full panel-content-separator">\n          <div class="assessment-progress-header"\n               ng-if="::assessmentAttempt.showProgressHeader">\n            <div class="assessment-progress-header-first-row" ng-if="::assessmentAttempt.hasAnswerableQuestions">\n              <bb-assessment-progress-bar\n                description-id="assessment-question-counts-description"\n                answerable-question-count="assessmentAttempt.questionAttemptView.answerableQuestionCount"\n                unanswered-question-count="assessmentAttempt.questionAttemptView.unansweredQuestionCount"\n              ></bb-assessment-progress-bar>\n            </div>\n            <div\n              class="assessment-progress-header-second-row"\n              ng-class="{\'has-time-limit\': assessmentAttempt.shouldShowTimedTestIndicator}"\n            >\n              <div ng-if="::assessmentAttempt.shouldShowTimedTestIndicator">\n                <span bb-timed-test-indicator-label></span>\n              </div>\n              <div ng-if="::assessmentAttempt.hasAnswerableQuestions">\n                <bb-assessment-question-counts\n                  description-id="assessment-question-counts-description"\n                  answerable-question-count="assessmentAttempt.questionAttemptView.answerableQuestionCount"\n                  unanswered-question-count="assessmentAttempt.questionAttemptView.unansweredQuestionCount"\n                ></bb-assessment-question-counts>\n              </div>\n            </div>\n            <div ng-if="assessmentAttempt.hasFilterApplied"\n                 class="assessment-progress-header-third-row">\n              <bb-assessment-applied-filters\n                filter="assessmentAttempt.questionAttemptView.filter"\n                on-filter-available="assessmentAttempt.canFilterOrNavigate"\n                on-filter-changed="assessmentAttempt.onFilterChanged"\n                question-types="assessmentAttempt.questionAttemptView.questionTypes"\n                question-attributes="assessmentAttempt.questionAttemptView.questionAttributes"\n              ></bb-assessment-applied-filters>\n            </div>\n          </div>\n          <bb-attempt-canvas attempt="assessmentAttempt.attempt"\n                             canvas-type="assessmentAttempt.AssessmentCanvasMode.AttemptAuthoring"\n                             question-attempt-view="assessmentAttempt.questionAttemptView"\n                             gradebook-category="assessmentAttempt.contentData.gradingColumn.gradebookCategory"\n                             on-navigation-available="assessmentAttempt.canFilterOrNavigate()"\n                             ng-if="assessmentAttempt"></bb-attempt-canvas>\n          <div class="spinner bb-secondary-color-2"\n               ng-if="assessmentAttempt.questionAttemptView.isWaitingForQueuedNavigationOrFiltering()"\n               role="status">\n            <span class="sr-only" bb-translate>course.content.assessment.attempt.loadingQuestions</span>\n          </div>\n        </div>\n        <div class="panel-content-info assessment-summary">\n          <div class="row collapse">\n            <div class="small-10 columns">\n              <h2 bb-translate>course.content.assessment.overview.detailsHeader</h2>\n            </div>\n          </div>\n          <ul class="row assessment-features">\n            <li>\n              <bb-ui-icon-medium-calendar ng-class="{\'alert\': assessmentAttempt.shouldShowMarkedLateNotice && !assessmentAttempt.contentData.gradeDetail.isExempt}"></bb-ui-icon-medium-calendar>\n              <div class="js-date-box"\n                   ng-switch="assessmentAttempt.dueDate != null">\n                <span class="settings-label" bb-translate>course.content.assessment.overview.dueDate</span>\n                <span class="settings-link" ng-switch-when="true">\n                  <span class="settings-due-date-label" ng-if="assessmentAttempt.shouldShowMarkedLateNotice && !assessmentAttempt.contentData.gradeDetail.isExempt">\n                    <span bb-translate>course.content.assessment.overview.pastDue</span>\n                  </span>\n                  <bb-datetime class="js-due-date"\n                               value="::assessmentAttempt.assessmentDueDate"\n                               format="Short"\n                               timezone-format="Short"\n                  >\n                  </bb-datetime>\n                </span>\n                <ul class="due-date-options" ng-switch-when="true">\n                  <li ng-if="::assessmentAttempt.shouldShowMarkedLateNotice && !assessmentAttempt.contentData.gradeDetail.isExempt">\n                    <span class="late-attempts-description" bb-translate>course.content.assessment.attempt.pastDueDescription</span>\n                  </li>\n                  <li ng-if="::assessmentAttempt.isDueDateEnforced">\n                    <span bb-translate="course.content.assessment.overview.enforceDueDate"></span>\n                  </li>\n                  <li ng-if="::assessmentAttempt.isLateAttemptCreationDisallowed">\n                    <span bb-translate="course.content.assessment.overview.lateAttemptCreationDisallowed"></span>\n                  </li>\n                </ul>\n                <span class="settings-link" ng-switch-default bb-translate>course.content.assessment.overview.noDueDate</span>\n              </div>\n            </li>\n\n            \x3c!--Time Limit --\x3e\n            <li ng-if="assessmentAttempt.hasTimeLimit" class="js-time-limit-type">\n              <bb-ui-icon-medium-no-time-limit ng-if="::assessmentAttempt.willDueDateOverrideTimeLimit" class="assessment-attempt-item__icon time-limit-overridden grayed-out"></bb-ui-icon-medium-no-time-limit>\n              <bb-ui-icon-medium-time-limit ng-if="::(!assessmentAttempt.willDueDateOverrideTimeLimit)" class="assessment-attempt-item__icon"></bb-ui-icon-medium-time-limit>\n              <div>\n                <span ng-class="::{\'time-limit-overridden grayed-out\' : assessmentAttempt.willDueDateOverrideTimeLimit }"\n                      class="settings-label"\n                      bb-translate>course.content.assessment.test.settings.timeLimit.label</span>\n                <span class="settings-link">\n                  <span ng-class="::{\'time-limit-overridden grayed-out line-through\' : assessmentAttempt.willDueDateOverrideTimeLimit }"\n                        class="js-time-limit-info"\n                        ng-bind-html="assessmentAttempt.displayedTimeLimit * 60 | timeSpan: \'m\': this"></span>\n                  <span class="time-limit-description"\n                        ng-if="!assessmentAttempt.canContinue"\n                        bb-translate>course.content.assessment.test.settings.timeLimit.autoSubmission</span>\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Rubric--\x3e\n            <li class="js-rubric-view" ng-if="assessmentAttempt.rubricViewIsVisible">\n              <bb-svg-icon size="medium" icon="rubric"></bb-svg-icon>\n              <div class="tool-text">\n                <span class="settings-label" bb-translate>course.content.assessment.overview.rubric</span>\n                <span class="settings-link">\n                  <button class="button button--text" ng-click="assessmentAttempt.openRubricView()" bb-translate analytics-id="course.content.assessment.overview.gradedWithRubric">course.content.assessment.overview.gradedWithRubric</button>\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Goals--\x3e\n            <li class="goal-alignment-li" ng-if="assessmentAttempt.alignedGoalsCount">\n              <bb-svg-icon size="medium" icon="goal"></bb-svg-icon>\n              <div class="goal-text">\n                <span class="settings-label" bb-translate>course.goal-alignment.goal.header</span>\n                <span class="settings-link">\n                  <a class="show-for-large-up" role="button" tabindex="0" bb-peek-sref="content-goal-alignment-for-student" bb-translate\n                     translate-values="{number: assessmentAttempt.alignedGoalsCount}" analytics-id="course.goal-alignment.goal.alignedGoals.plural">\n                    course.goal-alignment.goal.alignedGoals.plural\n                  </a>\n                  <a href="javascript:void(0);" class="hide-for-large-up" role="button" ng-click="assessmentAttempt.showGoals()" bb-translate\n                     translate-values="{number: assessmentAttempt.alignedGoalsCount}" analytics-id="course.goal-alignment.goal.alignedGoals.plural">\n                    course.goal-alignment.goal.alignedGoals.plural\n                  </a>\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Attempt Count--\x3e\n            <li>\n              <bb-svg-icon size="medium" icon="attempts"></bb-svg-icon>\n              <div ng-if="assessmentAttempt.showAttemptDescription()">\n                <span class="settings-label" bb-translate>course.content.assessment.overview.attempts</span>\n                <span class="settings-link">\n                  <span ng-class="{\'vertical-bar\' : assessmentAttempt.showAttemptsSubmittedDescription() }"\n                        bb-translate translate-values="{count: assessmentAttempt.unsubmittedAttemptsLeft}">\n                    {{::assessmentAttempt.attemptsRemainingDescriptionKey}}\n                  </span>\n                  <span ng-if="::assessmentAttempt.showAttemptsSubmittedDescription()">\n                    <span bb-translate translate-values="{submitted: assessmentAttempt.attemptCountSubmitted, late: assessmentAttempt.attemptCountSubmittedLate}">\n                      {{::assessmentAttempt.attemptsSubmittedDescriptionKey}}\n                    </span>\n                  </span>\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Group--\x3e\n            <li ng-if="assessmentAttempt.content.isGroupContent">\n              <bb-svg-icon size="medium" icon="groups"></bb-svg-icon>\n              <div>\n                <span class="settings-label" bb-translate="{{::assessmentAttempt.groupAssessmentKey}}" translate-values="{title: assessmentAttempt.customCategory}"></span>\n                <span class="settings-link ellipsis" title="{{assessmentAttempt.content.assignedGroups[0].groupTitle}}">{{assessmentAttempt.content.assignedGroups[0].groupTitle}}</span>\n              </div>\n            </li>\n\n            \x3c!--Safe Assign--\x3e\n            <li ng-if="assessmentAttempt.originalityReportService.isOriginalityReportEnabled() &&\n                       assessmentAttempt.originalityReportService.isSafeAssignActiveOriginalityProvider()">\n              <bb-ui-icon-medium-safe-assign class="assessment-attempt-item__icon"></bb-ui-icon-medium-safe-assign>\n              <div class="tool-text">\n                <span class="settings-label" bb-translate>course.content.originalityReport.settings.label</span>\n                <span class="settings-link">\n                  \x3c!-- htmlhint:analytics-id:disable --\x3e\n                  <a href="javascript:void(0);"\n                    class="js-setting-safeAssign"\n                    ng-click="assessmentAttempt.openSafeAssignView()"\n                    role="button"\n                    tabindex="0"\n                    analytics-id="course.content.assessment.test.settings.safeAssign.enabled">\n                      {{assessmentAttempt.originalityReportService.getOriginalityReportLinkText(false)}}\n                  </a>\n                  \x3c!-- htmlhint:analytics-id:enable --\x3e\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Originality Integration--\x3e\n            <li ng-if="assessmentAttempt.originalityReportService.isOriginalityReportEnabled() &&\n                       assessmentAttempt.originalityReportService.isIntegrationActiveOriginalityProvider()">\n              <bb-ui-icon-medium-safe-assign class="assessment-attempt-item__icon"></bb-ui-icon-medium-safe-assign>\n              <div class="tool-text">\n                <span class="settings-label" bb-translate>course.content.originalityReport.settings.label</span>\n                <span class="js-setting-originality-integration settings-link">\n                  {{assessmentAttempt.originalityReportService.getOriginalityReportLinkText(false)}}\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Proctoring--\x3e\n            <li class="proctoring-summary" ng-if="::assessmentAttempt.content.isSecureBrowserRequiredToTake()">\n              <bb-svg-icon size="medium" icon="privacy-policy"></bb-svg-icon>\n              <div class="proctoring-peek-container">\n                <span class="settings-label" bb-translate>components.services.proctoring.overview.label</span>\n                <span class="settings-link">\n                  <span bb-translate>{{assessmentAttempt.getProctoringBrowserText()}}</span>\n                </span>\n              </div>\n            </li>\n\n            \x3c!--Peer review--\x3e\n            <li ng-if="assessmentAttempt.isPeerGradingConfigured">\n              <bb-svg-icon icon="peer-review" size="medium"></bb-svg-icon>\n              <div class="peer-review-container">\n                <span bb-translate class="settings-label">course.content.assessment.test.settings.peerGrading.summary.label</span>\n                <span class="settings-link">\n                  <span bb-translate\n                        translate-values="{numOfPeersToReview: assessmentAttempt.numOfPeerReviewsToComplete, datetime: assessmentAttempt.peerReviewDueDate}">\n                    course.content.assessment.test.settings.peerGrading.summary.formattedDate\n                  </span>\n                </span>\n              </div>\n            </li>\n          </ul>\n          <div class="row">\n            <span class="settings-label" bb-translate>course.content.assessment.overview.gradingHeader</span>\n            <div class="no-submission-card">\n              <bb-ui-content-icon class="no-submission-icon" icon="assessmentAttempt.iconClass" color="primary"></bb-ui-content-icon>\n              <div class="no-submission-text">\n                <span class="no-submission-label" bb-translate>course.content.assessment.overview.highestPossible</span>\n              </div>\n              <div class="no-submission-value"><span bb-translate translate-values="{point: assessmentAttempt.highestPossibleScore}">course.content.assessment.overview.maxPoint.plural</span></div>\n            </div>\n            <div class="no-submission-card" ng-if="::assessmentAttempt.showExtraCreditCard">\n              <bb-ui-icon-large-kudos class="no-submission-icon" color="primary">\n              </bb-ui-icon-large-kudos>\n              <div class="no-submission-text">\n                <span class="no-submission-label" bb-translate>course.content.assessment.overview.extraCredit</span>\n              </div>\n              <div class="no-submission-value">\n                <span bb-translate translate-values="{point: assessmentAttempt.extraCreditPoints}">\n                  course.content.assessment.overview.maxExtraCredit.plural</span></div>\n            </div>\n          </div>\n          \x3c!--Assigned Peer Reviews--\x3e\n          <bb-assigned-peer-grading ng-if="assessmentAttempt.isPeerGradingConfigured"\n                                    submission-due-date="::assessmentAttempt.dueDate"\n                                    peer-review-due-date="::assessmentAttempt.peerReviewDueDate"\n                                    peer-reviews-per-student="::assessmentAttempt.numOfPeerReviewsToComplete"\n                                    allow-late-peer-reviews="::assessmentAttempt.allowLatePeerReviews"\n                                    has-due-date-accommodation="::assessmentAttempt.hasDueDateAccommodation"\n                                    is-submission-complete="assessmentAttempt.isAssessmentSubmissionComplete"\n                                    is-submission-late="assessmentAttempt.isSubmissionLate"\n                                    content="assessmentAttempt.content">\n          </bb-assigned-peer-grading>\n\n          <div class="row" ng-if="assessmentAttempt.content.description">\n            <span class="settings-label" bb-translate>course.content.assessment.overview.descriptionHeader</span>\n            <span>\n              {{assessmentAttempt.content.description}}\n            </span>\n          </div>\n          \x3c!--Additional Notes --\x3e\n          <div class="proctoring-additional-notes" ng-if="::assessmentAttempt.content.isSecureBrowserRequiredToTake()">\n            <span class="settings-label" bb-translate>components.services.proctoring.delivery.attempt.additionalNotes.label</span>\n            <span class="desc-content" bb-translate>components.services.proctoring.delivery.attempt.additionalNotes.description</span>\n          </div>\n\n          <div class="row group-assignment-members" ng-if="assessmentAttempt.content.isGroupContent">\n            <h2 class="peek-title-h2">\n              <bb-translate translate-values="{number: assessmentAttempt.contentData.groupMembers.length}">course.content.assessment.test.group.assignmentGroupMembers.plural</bb-translate>\n              <div class="group-buttons">\n                <button ng-show="assessmentAttempt.shouldShowCollabLink" ng-click="assessmentAttempt.launchCollabSession()"\n                        bb-translate-attrs="{\'aria-label\':\'course.content.conversation.collaborate\', \'title\': \'course.content.conversation.collaborate\'}"\n                        class="button super-clear icon" analytics-id="course.content.conversation.collaborate.button">\n                  <bb-svg-icon size="medium" icon="collab-session"></bb-svg-icon>\n                </button>\n                <button ng-if="assessmentAttempt.showConversations()"\n                        bb-peek-sref="conversations({courseId: assessmentAttempt.content.courseId, contentId: assessmentAttempt.content.id, groupId: assessmentAttempt.groupId})"\n                        bb-translate-attrs="{\'aria-label\':\'components.directives.header.openAriaGroup\', \'title\': \'components.directives.header.openAriaGroup\'}"\n                        class="button super-clear icon" analytics-id="components.directives.header.openAriaGroup.button">\n                  <bb-svg-icon\n                    ng-class="{\'has-indicator\': assessmentAttempt.hasGroupIndicator}"\n                    size="medium"\n                    icon="group-conversation">\n                  </bb-svg-icon>\n                </button>\n              </div>\n            </h2>\n\n            <div class="member-container">\n              <div class="member" ng-repeat="member in assessmentAttempt.contentData.groupMembers track by member.id">\n                <bb-usercard usercard-show="avatar"\n                             user="member" course-id="{{assessmentAttempt.course.id}}"\n                             course-role="assessmentAttempt.getCourseRole(member)"\n                             can-send-message="assessmentAttempt.canSendMessage(member)"\n                             inactive="assessmentAttempt.isInactive(member)">\n                </bb-usercard>\n                <bb-username class="member-name" user="member" format="short" tabindex="-10" has-title-attr="false" show-pronouns="true" show-pronunciation="true"></bb-username>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="goals-panel slide-small-container slide-animation hide-for-large-up" ng-class="{slideUp: assessmentAttempt.hideOverview}">\n        <bb-goal-alignment contents="assessmentAttempt.goalAlignedContents"\n                           hide-goals="assessmentAttempt.hideGoals()"\n                           class="content-assessment-goal-peek"\n                           ng-show="assessmentAttempt.hideOverview"\n                           analytics-id="course.content.assessment.goalAlignedContents.goalAlignment">\n        </bb-goal-alignment>\n      </div>\n    </section>\n  </div>\n  <footer class="submit-footer panel-footer">\n    <div class="submit-footer-inner-container">\n      <div class="autosave-footer-left" ng-class="{\'last-saved-visible\': assessmentAttempt.lastSaved, \'navigation-visible\': assessmentAttempt.isNavAndFilterFooterVisible() }">\n        <div class="last-saved-status-message" ng-if="assessmentAttempt.lastSaved || assessmentAttempt.errorMessage">\n          <div role="status" aria-live="polite" class="last-saved-notice js-last-saved" ng-if="assessmentAttempt.lastSaved && !assessmentAttempt.errorMessage">\n            <span bb-translate>course.content.assessment.footer.lastSaved</span>\n            <span bb-time="{{assessmentAttempt.lastSaved}}" auto-update="true" format="Medium"></span>\n          </div>\n          <div class="error-message-notice js-error-message" ng-if="assessmentAttempt.errorMessage">\n            <bb-ui-icon-small-alert-error></bb-ui-icon-small-alert-error>\n            <span class="error-message-text">\n              <strong role="status" aria-live="assertive">{{assessmentAttempt.errorMessage}}</strong>\n              <span ng-if="assessmentAttempt.lastSaved"> |\n                <span bb-translate>course.content.assessment.footer.lastSaved</span>\n                <span bb-time="{{assessmentAttempt.lastSaved}}" auto-update="true" format="Medium"></span>\n              </span>\n            </span>\n          </div>\n        </div>\n        <bb-assessment-controls-container\n          show-navigation="::assessmentAttempt.showPageNavigation"\n          show-filter="assessmentAttempt.questionAttemptView.isFilterable()"\n          filter="assessmentAttempt.questionAttemptView.filter"\n          can-navigate-forward="assessmentAttempt.questionAttemptView.canNavigateForward"\n          can-navigate-backward="assessmentAttempt.questionAttemptView.canNavigateBackward"\n          on-filter-available="assessmentAttempt.canFilterOrNavigate"\n          is-backtracking-prohibited="assessmentAttempt.isBacktrackingProhibited"\n          questions-matching-filter-count="assessmentAttempt.questionAttemptView.questionsMatchingFilterCount"\n          question-types="assessmentAttempt.questionAttemptView.questionTypes"\n          on-filter-changed="assessmentAttempt.onFilterChanged"\n          on-navigation-changed="assessmentAttempt.onNavigationChanged"\n          question-attributes="assessmentAttempt.questionAttemptView.questionAttributes"\n        ></bb-assessment-controls-container>\n      </div>\n      <div class="autosave-footer-right">\n        <div class="save-submit-buttons">\n          <div class="equal-buttons buttons-2">\n            <button\n              ng-click="assessmentAttempt.save($event)"\n              ng-class="{disabled: assessmentAttempt.shouldDisableSaveSubmitButtons()}"\n              ng-disabled="assessmentAttempt.shouldDisableSaveSubmitButtons()"\n              ng-attr-tabindex="{{assessmentAttempt.shouldDisableSaveSubmitButtons() ? -1 : undefined}}"\n              class="button button--secondary js-save-draft-button assessment-save-draft-button"\n              analytics-id="course.content.assessment.footer.buttons.saveAndClose"\n              bb-translate>course.content.assessment.footer.buttons.saveAndClose</button>\n            <button\n              ng-click="assessmentAttempt.submit($event)"\n              ng-class="{disabled: assessmentAttempt.shouldDisableSaveSubmitButtons()}"\n              ng-attr-tabindex="{{assessmentAttempt.shouldDisableSaveSubmitButtons() ? -1 : undefined}}"\n              ng-disabled="assessmentAttempt.shouldDisableSaveSubmitButtons()"\n              class="button js-send-draft-button assessment-send-draft-button"\n              analytics-id="{{!assessmentAttempt.isOverdue ? \'course.content.assessment.footer.buttons.submit\' : \'course.content.assessment.footer.buttons.submitLate\'}}">\n              <bb-translate ng-if="!assessmentAttempt.isOverdue || assessmentAttempt.contentData.gradeDetail.isExempt">course.content.assessment.footer.buttons.submit</bb-translate>\n              <bb-translate ng-if="assessmentAttempt.isOverdue && !assessmentAttempt.contentData.gradeDetail.isExempt">course.content.assessment.footer.buttons.submitLate</bb-translate>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </footer>\n  <connection-lost-dialog\n    analytics-id="course.content.assessment.unsavedChanges"\n    on-dismiss="assessmentAttempt.connectionLostDialog.onDismiss"\n    is-visible="assessmentAttempt.connectionLostDialog.isVisible"\n  >\n  </connection-lost-dialog>\n</div>\n'},jcim:function(t,e,s){"use strict";s.d(e,"a",(function(){return a}));var n=s("zYa8"),i=s("9eyz");const a="ultra.components.directives.bbUiIcon.medium.TimeLimit";Object(n.a)(i.a,a,"bbUiIconMediumTimeLimit")},nsQ1:function(t,e,s){var n=s("ziER"),i=s("5JeM"),a=new n({id:"icon-small-timer",use:"icon-small-timer-usage",viewBox:"0 0 16 16",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="icon-small-timer"><path d="M8 4V1c4 0 7 3.134 7 7s-3.134 7-7 7-7-3.134-7-7" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /><path d="M8.5 8.5l-1 1L3 4l5.5 4.5z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});i.add(a);t.exports=a},ooAF:function(t,e){t.exports='<div class="grade-color" ng-class="{\'flex-column\': displayGradePill.isStacked}">\n    <div class="wrapping-input-style readonly pill-style {{displayGradePill.colorClass}} {{displayGradePill.cursorClass}}">\n      <div ng-if="!displayGradePill.shouldShowRubricButton()">\n        <span class="grade-input-display grade-ellipsis"><bdi>{{displayGradePill.displayValue}}</bdi></span>\n      </div>\n      <div ng-if="displayGradePill.shouldShowRubricButton()">\n        <a ng-click="displayGradePill.openRubricEvaluation($event)"\n           ng-class="{\'disable-click\': !!disableRubricEvalClick()}"\n           class="grade-rubric-detail"\n           aria-disabled="{{!!disableRubricEvalClick()}}"\n           href=""\n           analytics-id="components.directives.grade.gradePill.showRubric.link">\n          <bb-svg-icon size="small" icon="rubric"></bb-svg-icon>\n          <span class="grade-input-display ready grade-ellipsis">{{displayGradePill.displayValue}}</span>\n        </a>\n      </div>\n    </div>\n    <div ng-if="displayGradePill.shouldShowExempt()" class="left">\n      <span class="exempt-indicator" bb-translate>components.directives.grade.grade-input.exempt</span>\n    </div>\n</div>\n'},wNBd:function(t,e){t.exports='<bb-modal id="confirm-submit-attempt-modal" class="notification success"\n          modal-title-key="{{assessmentAttempt.submitModalHeaderKey}}"\n          modal-translate-options="assessmentAttempt.submitModalTranslateOptions"\n          analytics-id-tag-prefix="course.content.assessment.test.modal.confirmSubmitAttemptAlert">\n  <div name="modal-contents">\n    <span ng-if="assessmentAttempt.shouldShowInProgressWarning" bb-translate translate-values="{number: assessmentAttempt.questionAttemptView.unansweredQuestionCount}">\n      course.content.assessment.modal.confirmSubmitAttemptAlert.inProgressWarning.plural\n    </span>\n    <span bb-translate="{{::assessmentAttempt.submitModalBodyKey}}" translate-values="{\'title\': assessmentAttempt.customCategory}"></span>\n  </div>\n  <button name="modal-footer-button-primary" class="button confirm-ok js-primary-button" ng-click="$parent.$close()" bb-translate course-org-token-resolver analytics-id="course.content.assessment.test.modal.confirmSubmitAttemptAlert.submit">\n    course.content.assessment.test.modal.confirmSubmitAttemptAlert.submit\n  </button>\n  <button name="modal-footer-button-secondary" class="button button--secondary confirm-cancel js-secondary-button" ng-click="$parent.$dismiss()" bb-translate analytics-id="global.cancel">\n    {{assessmentAttempt.shouldShowInProgressWarning ? \'course.content.assessment.modal.confirmSubmitAttemptAlert.keepWorking\' : \'global.cancel\'}}\n  </button>\n</bb-modal>\n'},zjPK:function(t,e,s){"use strict";s("nsQ1");var n=s("nsO7"),i=s("Llzl"),a=s("0+Qs"),o=s("0JpG"),r=s("Fvsw"),l=s("ohO4"),c=s("IbyE"),m=s("94iD"),d=s("AuQm"),u=s("iU4J");class h{constructor(t,e,s,n,i,a,o,r=[],l=[],c){this.tickInterval=1e4,this.thresholdsInSeconds=[],this.bbInterval=t,this.scope=e,this.localize=s,this.context=n,this.fetchedAttemptTime=i,this.dueDateAsEpochTime=a,this.continuedFromLastStage=c,this.remainSecondsWhenFetch=this.calcRemainSecondsWhenFetch(),this.usedSecondsWhenFetch=this.calcUsedSecondsWhenFetch(),this.upcomingTimers=o,this.fetchTime=(new Date).getTime(),this.remainingTimeReminderThresholds=r,this.upcomingRemainingTimeReminderThresholds=l,this.calculateRoundedUpThresholdsInSeconds()}calculateRoundedUpThresholdsInSeconds(){this.thresholdsInSeconds=this.remainingTimeReminderThresholds.map((t=>{this.validateThreshold(t);const e=this.fetchedAttemptTime.softlimitSeconds*t;return 60*Math.ceil(e/60)}))}validateThreshold(t){if(t<0||t>1)throw new Error("Threshold must be between 0.0 and 1.0")}hasThresholdPassed(t){return!(t>this.remainSecondsWhenFetch)&&t>=this.scope.currentRemainingSeconds}enqueueRemainingTimeReminder(t){let e;e=t<=60?this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.remainingTimeReminderSeconds.plural",params:{secondsRemaining:t},noWrap:!0,noEscape:!0}):this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.remainingTimeReminderMinutes.plural",params:{minutesRemaining:t/60},noWrap:!0,noEscape:!0}),d.T.getInstance().enqueueSnackbar(d.S.AssessmentTimerToasts,{snackbarMessage:e,isPersistent:!1})}validateRemainingTimeReminderThresholds(){this.thresholdsInSeconds=this.thresholdsInSeconds.filter((t=>{const e=this.hasThresholdPassed(t);return e&&this.enqueueRemainingTimeReminder(t),!e}))}updateCurrentMessage(){this.scope.currentRemainingSeconds<=60?this.scope.currentTimerMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.remainingTimeSeconds.plural",params:{secondsRemaining:Math.floor(this.scope.currentRemainingSeconds)},noWrap:!0}):this.scope.currentTimerMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.remainingTime.plural",params:{minutesRemaining:Math.ceil(this.scope.currentRemainingSeconds/60)},noWrap:!0})}hideTimer(){return!1}tick(){const t=((new Date).getTime()-this.fetchTime)/1e3;this.scope.currentRemainingSeconds=this.remainSecondsWhenFetch-t,this.scope.currentUsedSeconds=this.usedSecondsWhenFetch+t;if(this.scope.currentRemainingSeconds<=60+this.tickInterval/1e3&&this.tickInterval>1e3&&(this.tickInterval=1e3,this.bbInterval.cancel(this.timer),this.timer=this.bbInterval(this.tick.bind(this),this.scope,this.tickInterval)),this.scope.hideTimer=this.hideTimer(),this.updateCurrentMessage(),this.validateRemainingTimeReminderThresholds(),this.scope.currentRemainingSeconds<=0&&(null!=this.endEmission&&(this.scope.$broadcast("bb-time-is-up",this.endEmission),this.bbInterval.cancel(this.timer)),this.upcomingTimers.length>0)){const t=!0,e=this.upcomingTimers.shift(),s=this.upcomingRemainingTimeReminderThresholds.shift();new e(this.bbInterval,this.scope,this.localize,this.context,this.fetchedAttemptTime,this.dueDateAsEpochTime,this.upcomingTimers,s,this.upcomingRemainingTimeReminderThresholds,t).start()}}start(){this.scope.currentTestStage=this.currentTestStage,this.continuedFromLastStage||null==this.resumeEmission||this.scope.$broadcast("bb-test-resumed",this.resumeEmission),this.timer=this.bbInterval(this.tick.bind(this),this.scope,this.tickInterval),this.tick()}}function p(t){return Math.max(t.elapsedSeconds,0)}function b(t){return Math.max(t.softlimitSeconds-Math.max(t.elapsedSeconds,0),0)}function g(t){return Math.max(t.elapsedSeconds-t.softlimitSeconds,0)}class v extends h{constructor(){super(...arguments),this.currentTestStage=m.b.Stage0NoExtraTime,this.endEmission={stopMode:"hard"}}calcRemainSecondsWhenFetch(){return b(this.fetchedAttemptTime)}calcUsedSecondsWhenFetch(){return p(this.fetchedAttemptTime)}}class A extends h{constructor(){super(...arguments),this.currentTestStage=m.b.Stage0UnlimitedExtraTime,this.endEmission={stopMode:"soft"}}calcRemainSecondsWhenFetch(){return b(this.fetchedAttemptTime)}calcUsedSecondsWhenFetch(){return p(this.fetchedAttemptTime)}}class f extends h{constructor(){super(...arguments),this.currentTestStage=m.b.Stage1UnlimitedExtraTime,this.resumeEmission=!0}calcRemainSecondsWhenFetch(){return Number.POSITIVE_INFINITY}calcUsedSecondsWhenFetch(){return g(this.fetchedAttemptTime)}updateCurrentMessage(){this.scope.currentTimerMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.usedExtraTime.plural",params:{usedExtraTime:Math.floor(this.scope.currentUsedSeconds/60)},noWrap:!0})}}class S extends h{constructor(){super(...arguments),this.currentTestStage=m.b.Stage0LimitedExtraTime,this.endEmission={stopMode:"soft"}}calcRemainSecondsWhenFetch(){return b(this.fetchedAttemptTime)}calcUsedSecondsWhenFetch(){return p(this.fetchedAttemptTime)}}class w extends h{constructor(){super(...arguments),this.currentTestStage=m.b.Stage1LimitedExtraTime,this.resumeEmission=!0,this.endEmission={stopMode:"hard"}}calcRemainSecondsWhenFetch(){return t=this.fetchedAttemptTime,Math.max(t.hardlimitSeconds-Math.max(t.softlimitSeconds,t.elapsedSeconds),0);var t}calcUsedSecondsWhenFetch(){return g(this.fetchedAttemptTime)}calculateRoundedUpThresholdsInSeconds(){this.thresholdsInSeconds=this.remainingTimeReminderThresholds.map((t=>{this.validateThreshold(t);const e=(this.fetchedAttemptTime.hardlimitSeconds-this.fetchedAttemptTime.softlimitSeconds)*t;return 60*Math.ceil(e/60)}))}updateCurrentMessage(){this.scope.currentRemainingSeconds<=60?this.scope.currentTimerMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.extraRemainingTimeSeconds.plural",params:{secondsRemaining:Math.floor(this.scope.currentRemainingSeconds)},noWrap:!0}):this.scope.currentTimerMessage=this.localize.translateSync({locale:this.localize.getLocale(this.scope),key:"course.content.assessment.test.settings.timeLimit.extraRemainingTime.plural",params:{minutesRemaining:Math.ceil(this.scope.currentRemainingSeconds/60)},noWrap:!0})}}class y extends h{constructor(){super(...arguments),this.currentTestStage=m.b.StageEnforcedDueDate,this.endEmission={stopMode:"hard"}}calcRemainSecondsWhenFetch(){return Math.max(this.dueDateAsEpochTime-this.context.getServerTimeAsEpochTime(),0)}calcUsedSecondsWhenFetch(){return g(this.fetchedAttemptTime)}hideTimer(){return this.scope.currentRemainingSeconds>y.MAX_SECONDS_TO_SHOW}}y.MAX_SECONDS_TO_SHOW=60*u.b.DEFAULT_MAX_TIME_LIMIT;class C extends h{constructor(){super(...arguments),this.currentTestStage=m.b.StageE,this.endEmission={stopMode:"hard"}}calcRemainSecondsWhenFetch(){return 0}calcUsedSecondsWhenFetch(){return NaN}}const T=[.1],I=[.1,.5],k=[.1],D=t=>t.stages.map((t=>(t=>{let e;switch(t){case m.b.Stage0NoExtraTime:e=v;break;case m.b.Stage0UnlimitedExtraTime:e=A;break;case m.b.Stage1UnlimitedExtraTime:e=f;break;case m.b.Stage0LimitedExtraTime:e=S;break;case m.b.Stage1LimitedExtraTime:e=w;break;case m.b.StageEnforcedDueDate:e=y;break;case m.b.StageE:e=C}return e})(t)));var $=s("1ZbL");const R="ultra.components.directives.assessment-timer-toggle",x={Class:s("IaSh").q,bindingNames:["onToggle","isVisible"],attributes:["assessmentTimerTextId"],renderLocalized:!0};i.module(R,[]).component("bbAssessmentTimerToggle",Object($.a)(x)),s.d(e,"a",(function(){return P}));const P="ultra.features.course.content.assessment.attempt.assessmentAttempt.timedIndicator",O="bbTimedTestIndicator",G=i.module(P,[a.a,R,l.a]);G.directive(O,["$compile",a.b,"$filter",o.serviceName,r.b,l.b,function(t,e,s,i,a,o){return{restrict:"A",link:(t,s,r)=>{t.$on("$destroy",(()=>{d.T.getInstance().dequeueSnackbar(d.S.AssessmentTimerToasts)})),t.getCurrentLevelClass=()=>{if(t.showTimeUpIndicator)return"bbTimedTestIndicator-lv-0";if(null==t.currentRemainingSeconds)return"";const e=[0,300,600,Number.POSITIVE_INFINITY];return"bbTimedTestIndicator-lv-"+n.findIndex(e,(e=>t.currentRemainingSeconds<=e)).toString()},t.timerDetailsVisible=!0,t.onToggleTimerDetails=e=>{t.$apply((()=>{t.timerDetailsVisible=e}))};const l=t.$watch(r.bbTimedTestIndicator,(n=>{if(!n)return;if(l(),t.footerNoticeShow=n.hasTimeLimit||n.testType===m.c.EnforcedDueDateTest,!t.footerNoticeShow)return;s.addClass("is-timed-test");const r=D(n);o.createWaiter(c.r.AssessmentTimerToasts).catch((()=>!0)).then((s=>{const o=s?(l=n).stages.map((t=>{if(l.displayedTimeLimitSeconds<600)return[];switch(t){case m.b.Stage0NoExtraTime:case m.b.Stage0UnlimitedExtraTime:case m.b.Stage0LimitedExtraTime:return l.displayedTimeLimitSeconds<3600?T:I;case m.b.Stage1LimitedExtraTime:return k;default:return[]}})):[];var l;if(r.length>0){const s=r.shift(),l=o.shift();new s(e,t,i,a,n.adaptedTime,n.dueDateAsEpochTime,r,l,o).start()}}))}))}}}]),G.directive("bbTimedTestIndicatorLabel",["$compile",a.b,function(t,e){return{restrict:"A",link:(e,s,n)=>{t('\n          <span class="label-timed-indicator" ng-show="!hideTimer" ng-class="getCurrentLevelClass()" aria-live="off" role="timer">\n            <bb-svg-icon ng-show="currentRemainingSeconds > 600 && !showTimeUpIndicator" size="small" icon="timer" status="active"></bb-svg-icon>\n            <bb-svg-icon ng-show="currentRemainingSeconds <= 600 || showTimeUpIndicator" size="small" icon="timer" status="alert"></bb-svg-icon>\n            <span id="assessment-timer-text" ng-if="timerDetailsVisible">\n              <span ng-show="currentRemainingSeconds <= 0 || showTimeUpIndicator" bb-translate="course.content.assessment.test.settings.timeLimit.timeIsUp"></span>\n              <span ng-show="currentRemainingSeconds >= 60 && !showTimeUpIndicator" class="js-remaining-time" aria-live="polite" >{{ currentTimerMessage }}</span>\n              <span ng-show="currentRemainingSeconds  < 60 && !showTimeUpIndicator" aria-live="off" class="js-remaining-time" >{{ currentTimerMessage }}</span>\n            </span>\n            <bb-assessment-timer-toggle assessment-timer-text-id="assessment-timer-text" on-toggle="onToggleTimerDetails" is-visible="timerDetailsVisible"></bb-assessment-timer-toggle>\n          </span>\n        ')(e).prependTo(s)}}}])}}]);