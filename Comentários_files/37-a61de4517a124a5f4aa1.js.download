(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{"217T":function(e,t){e.exports='<bb-modal class="notification"\n          modal-title-key="course.content.assessment.groupAlreadySubmitted.title"\n          analytics-id-tag-prefix="course.content.assessment.groupAlreadySubmitted">\n    <div name="modal-contents">\n        <p bb-translate>course.content.assessment.groupAlreadySubmitted.description</p>\n    </div>\n    <button name="modal-footer-button-primary" role="button" class="button js-primary-button" ng-click="$parent.$dismiss()"\n            bb-translate-attrs="{\'aria-label\':\'course.content.assessment.groupAlreadySubmitted.ok\'}" analytics-id="course.content.assessment.groupAlreadySubmitted.ok">\n      <bb-translate>course.content.assessment.groupAlreadySubmitted.ok</bb-translate>\n    </button>\n</bb-modal>\n'},"94SL":function(e,t,s){"use strict";s.d(t,"a",(function(){return r}));var n=s("o5Lu"),i=s("pjml"),a=s("zGdY");class r{constructor(e,t,s,n,i,r){var o,l,c,d;this.contentData=e,this.gradableItemUserOptionService=t,this.context=s,this.grade=n,this.schemaService=i,this.contextCourseMembership=r,this.currentAttempt=e.groupAttempt||e.attempt,this.highestPossibleScore=e.gradingColumn.possible,this.extraCreditPoints=null!==(d=null===(c=null===(l=null===(o=e.courseContent.contentDetail[a.t.TestLink])||void 0===o?void 0:o.test)||void 0===l?void 0:l.assessment)||void 0===c?void 0:c.extraCreditPoints)&&void 0!==d?d:0,this.dueDate=e.gradingColumn.dueDate,this.gradableItemUserOptionService.getGradableItemUserOption(e.courseContent.courseId,e.gradingColumn.id,[r.courseMembership.id]).then((e=>{var t;this.studentHasDueDateException=!!e.byCourseMembershipId[r.courseMembership.id],this.studentHasDueDateException&&(this.dueDateException=e.byCourseMembershipId[r.courseMembership.id],this.studentHasNoDueDateAsException=(null===(t=this.dueDateException)||void 0===t?void 0:t.dueDateExceptionType)===a.qb.Unlimited)}))}init(){this.dueDateException=this.gradableItemUserOptionService.getGradableItemUserOptionByMembershipId(this.contentData.gradingColumn.id,this.contextCourseMembership.courseMembership.id),this.studentHasDueDateException=!!this.dueDateException,this.setAttemptCountsAndDate()}get unsubmittedAttemptsLeft(){var e;if(!this.contentData.gradeDetail)return this.contentData.gradingColumn.multipleAttempts;let t=this.contentData.gradeDetail.attemptsLeft;return this.contentData.attempt&&(null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())&&t++,t}isUnlimitedAttempts(){return this.contentData.gradingColumn.isUnlimitedAttempts()}get isDueDateEnforced(){var e,t;return(null===(t=null===(e=this.contentData.courseContent.getDeployedAssessment())||void 0===e?void 0:e.deploymentSettings)||void 0===t?void 0:t.isDueDateEnforced)&&!this.contentData.courseContent.hasDueDateException()}get isLateAttemptCreationDisallowed(){var e;return(null===(e=this.contentData.courseContent.getDeployedAssessment())||void 0===e?void 0:e.deploymentSettings.isLateAttemptCreationDisallowed)&&!this.contentData.courseContent.hasDueDateException()}get isOverdue(){var e;const t=this.isDueDateEnforced&&(null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress()),s=this.studentHasDueDateException?this.dueDateException.effectiveDueDate:this.dueDate;return s&&s.getTime()-this.context.getServerTime().getTime()<0&&!this.contentData.courseContent.hasDueDateException()&&!t}get noNewAttemptsAreAllowed(){const e=this.studentHasDueDateException?this.dueDateException.effectiveDueDate:this.dueDate;return e&&e.getTime()-this.context.getServerTime().getTime()<0&&this.isLateAttemptCreationDisallowed}get willDueDateOverrideTimeLimit(){var e;return!(!this.isDueDateEnforced||!this.timedTestAttemptDetail.hasTimeLimit)&&((null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())?this.timedTestAttemptDetail.withinDueDatelimit&&(this.dueDate.getTime()-this.currentAttempt.creationDate.getTime())/1e3<this.timedTestAttemptDetail.adaptedTime.softlimitSeconds:this.timedTestAttemptDetail.dueDateIsSoonerThanSoftTimeLimit)}get showExtraCreditCard(){return this.extraCreditPoints>0}isRubricAssociated(){return this.contentData.gradingColumn.hasRubricAssociation()}get rubric(){return this.contentData.gradingColumn.getAssociatedRubric()}isRubricScoreOverridden(){return this.contentData.gradeDetail&&this.contentData.gradeDetail.isOverrideGrade()}get rubricViewIsVisible(){return this.isRubricAssociated()&&!this.rubricEvaluationIsVisible}get rubricEvaluationIsVisible(){return this.isRubricAssociated()&&!this.isRubricScoreOverridden()&&angular.isDefined(this.currentAttempt)&&this.currentAttempt.isCompleted()&&angular.isDefined(this.currentAttempt.rubricEvaluation)}setAttemptCountsAndDate(){this.contentData.gradeDetail?this.contentData.gradingColumn.grades.$buildRaw(this.contentData.gradeDetail).attempts.$refresh({fields:"id,status,attemptDate"}).$then((e=>{this.attemptCount=e.length,this.attemptCountSubmitted=e.getNumAttemptsSubmitted(),this.attemptCountSubmittedLate=e.getNumAttemptsSubmittedLate(this.studentHasDueDateException?this.dueDateException.effectiveDueDate:this.dueDate),this.areAllAttemptsCompleted=e.isAllGradedAndPosted(),this.isAtLeastOneAttemptCompleted=e.isAtLeastOneGradedAndPosted();const t=i.C.parseAttemptAggregationModel(this.contentData.gradingColumn&&this.contentData.gradingColumn.aggregationModel),s=n.e.getDefaultAttemptIdToLoad(t,this.contentData.gradeDetail),a=e.find((e=>e.id===s));this.aggregationModelRelevantAttemptDate=a&&a.attemptDate,this.onAttemptCountComplete()})):this.attemptCount=0}get attemptsSubmittedDescriptionKey(){return"course.content.assessment.overview.attemptsSubmitted.status."+(this.isOverdue?"late":"onTime")}get attemptsRemainingDescriptionKey(){return"course.content.assessment.overview.attemptsRemaining."+(this.isUnlimitedAttempts()?"unlimited":"plural")}showAttemptDescription(){return this.contentData.gradingColumn&&angular.isDefined(this.attemptCount)}showAttemptsSubmittedDescription(){return this.contentData.gradingColumn&&this.contentData.gradingColumn.isMultipleAttempts()&&(this.currentAttempt&&this.currentAttempt.isSubmitted()||this.attemptCount>1)}}},"9G/E":function(e,t,s){var n=s("ziER"),i=s("5JeM"),a=new n({id:"icon-medium-profile-user",use:"icon-medium-profile-user-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-profile-user"><path d="M12 13c3.3137 0 6-2.6863 6-6s-2.6863-6-6-6-6 2.6863-6 6 2.6863 6 6 6zM23 23c-.5-5-4.5-10-11-10S1.5 18 1 23" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});i.add(a);e.exports=a},"9ah5":function(e,t){e.exports='<div class="tests assessment-overview" ng-class="{\'late-attempt\': assessmentOverview.shouldHaveLateAttemptClass}" bb-group-attempt-activities-peek="assessmentOverview.currentAttempt">\n  <div class="panel-wrap panel-wrap-flex"\n       ng-class="{\n         \'over-close-button\': assessmentOverview.hideOverview,\n         \'has-footer\': assessmentOverview.hasFooter,\n         \'has-extended-footer\': assessmentOverview.startPeerReviewsButtonVisible,\n         \'has-footer-password\': assessmentOverview.isAssessmentPasswordProtected && !assessmentOverview.shouldShowProctoringErrorMessage && !assessmentOverview.showAfterAttemptedFooter,\n         \'has-footer-password-error\': assessmentOverview.passwordErrorMessageKey,\n         \'has-footer-proctoring-error\': assessmentOverview.shouldShowProctoringErrorMessage\n        }">\n    <header class="black-panel-header" ng-show="!assessmentOverview.hideOverview">\n      <div class="black-header-contents">\n        <button class="left-off-canvas-toggle menu-toggle standard-button dark-background" type="button" analytics-id="course.content.assessment.overview.menu.button">\n          <bb-svg-icon class="assessment-overview-item__icon" size="small" icon="main-menu"></bb-svg-icon>\n          <span class="sr-only" bb-translate>course.content.assessment.overview.menu</span>\n        </button>\n        <h1 class="panel-title" bb-translate translate-values="{\'title\': assessmentOverview.customCategory}">{{::assessmentOverview.panelTitle}}</h1>\n        <a class="standard-button dark-background" ui-sref-active="active"\n           ng-if="assessmentOverview.content.ui.hasConversationAttached && assessmentOverview.content.attachedForumLink"\n           bb-peek-sref="conversations({courseId: assessmentOverview.content.courseId, contentId: assessmentOverview.content.id})"\n           bb-translate-attrs="{\'aria-label\':\'components.directives.header.openAria\'}" analytics-id="assessmentOverview.content.id.link">\n          <bb-svg-icon size="small" icon="conversation" ng-class="{\'has-indicator\': assessmentOverview.hasClassIndicator}"></bb-svg-icon>\n        </a>\n      </div>\n    </header>\n    <header class="row panel-header show-for-small-only">\n      <div class="goal-small-panel" ng-if="assessmentOverview.showGoalDetails">\n        <button class="button super-clear icon" ng-click="assessmentOverview.hideGoals()" analytics-id="assessmentOverview.hideGoals.button">\n          <bb-svg-icon class="assessment-overview-item__icon" size="small" icon="arrow-left"></bb-svg-icon>\n          <span class="sr-only" bb-translate>course.goal-alignment.goal.sr-only.closeGoals</span>\n        </button>\n        <div class="goal-head">\n          <span class="goal-title" bb-translate>course.goal-alignment.goal.header</span>\n        </div>\n      </div>\n      <div class="js-rubric-small-header slide-menu-small-panel" ng-if="assessmentOverview.showRubricDetails">\n        <div class="slide-menu-header">\n          <button class="button super-clear icon"  ng-click="assessmentOverview.hideRubricPanel()" analytics-id="assessmentOverview.hideRubricPanel.button">\n            <bb-svg-icon size="small" icon="arrow-left"></bb-svg-icon>\n            <span class="sr-only" bb-translate>global.close</span>\n          </button>\n          <span class="slide-menu-title" bb-translate>course.content.assessment.overview.rubricPanelHeader</span>\n        </div>\n      </div>\n    </header>\n    <div class="spinner bb-secondary-color-2" ng-if="assessmentOverview.isLoading" aria-hidden="true"></div>\n    <section class="panel-content has-slide-up-section" ng-class="{\'section-slide\': assessmentOverview.hideOverview}" bb-first-time-container>\n      <bb-panel-header\n        ng-class="{\'hide-header-small\': assessmentOverview.hideOverview, \'has-indicator\': assessmentOverview.hasClassIndicator}"\n        class="bb-panel-header"\n        show-course="true"\n        show-conversations="true"\n        content="assessmentOverview.content"\n        panel-title="assessmentOverview.content.title"\n        can-edit="false">\n      </bb-panel-header>\n      <bb-peer-review-has-been-deleted-banner\n        ng-if="assessmentOverview.showPeerReviewHasBeenDeletedBanner()"\n        assign-and-navigate-to-peer-review="assessmentOverview.assignAndNavigateToPeerReview"\n        dismiss-banner="assessmentOverview.dismissPeerReviewsDeletedBanner"\n        has-enough-submissions-for-peer-assessment="assessmentOverview.hasEnoughSubmissionsForPeerAssessment()"\n        can-retrieve-new-peer-review="assessmentOverview.canRetrieveNewPeerReview()"\n      ></bb-peer-review-has-been-deleted-banner>\n      <bb-time-limit-overridden-by-due-date-banner ng-if="assessmentOverview.showDueDateWarnings"></bb-time-limit-overridden-by-due-date-banner>\n      <bb-content-navigator content="assessmentOverview.content"></bb-content-navigator>\n      \x3c!--View class conversation FTUE--\x3e\n      <div ng-if="assessmentOverview.content.ui.hasConversationAttached && assessmentOverview.content.attachedForumLink" class="guidance-wrapper class-conversation-ftue">\n        <bb-guidance component-key="components.features.course.content.assessment.ftue.class-conversation" class="guidance-element-overlay">\n          <span bb-translate="{{::assessmentOverview.classConversationFtueKey}}" translate-values="{title: assessmentOverview.customCategory}"></span>\n        </bb-guidance>\n      </div>\n      <div class="panel-content-flex panel-content-inner assessment-overview-panel">\n        <div class="panel-content-info assessment-summary" ng-show="!assessmentOverview.hideOverview">\n          <bb-group-student-enrollment-asmt-banner  ng-if="assessmentOverview.content.userNeedsToSelfEnrollInGroup()"\n                                                    content="assessmentOverview.content"\n                                                    from-view="assessment.overview"></bb-group-student-enrollment-asmt-banner>\n          <div class="row collapse">\n            <div class="small-10 columns">\n              <h2 bb-translate>course.content.assessment.overview.detailsHeader</h2>\n            </div>\n          </div>\n          <ul class="row assessment-features" tabindex="-1" ng-show="!assessmentOverview.isLoading">\n            \x3c!--Due date--\x3e\n            <li class="js-due-date">\n              <bb-svg-icon class="assessment-overview-item__icon" size="medium" aria-hidden="true" icon="calendar"\n              ng-class="{\'alert\': assessmentOverview.showPastDueForDueDate() && !assessmentOverview.contentData.gradeDetail.isExempt}"></bb-svg-icon>\n              <div ng-switch="assessmentOverview.dueDate != null">\n                <span class="settings-label" bb-translate>course.content.assessment.overview.dueDate</span>\n                <span class="settings-link" ng-switch-when="true">\n                  <div class="alert vertical-bar" ng-if="assessmentOverview.showPastDueForDueDate() && !assessmentOverview.contentData.gradeDetail.isExempt">\n                    <span class="alert-text" bb-translate ng-if="!assessmentOverview.isAssessmentSubmissionComplete">course.content.assessment.overview.pastDue</span>\n                    <span class="alert-text" bb-translate ng-if="assessmentOverview.isAssessmentSubmissionComplete">course.content.assessment.overview.late</span>\n                  </div>\n                  <bb-datetime ng-if="!assessmentOverview.studentHasDueDateException" value="::assessmentOverview.dueDate" format="Short"></bb-datetime>\n                  <bb-datetime ng-if="assessmentOverview.studentHasDueDateException" value="assessmentOverview.dueDateException.effectiveDueDate" format="Short"></bb-datetime>\n                  <span class="settings-link" ng-if="::assessmentOverview.studentHasNoDueDateAsException" bb-translate>course.content.assessment.overview.noDueDate</span>\n                </span>\n                <ul class="due-date-options" ng-switch-when="true">\n                  <li ng-if="::assessmentOverview.isDueDateEnforced">\n                    <span bb-translate="course.content.assessment.overview.enforceDueDate"></span>\n                  </li>\n                  <li ng-if="::assessmentOverview.isLateAttemptCreationDisallowed">\n                    <span bb-translate="course.content.assessment.overview.lateAttemptCreationDisallowed"></span>\n                  </li>\n                </ul>\n                <span class="settings-link" ng-switch-default bb-translate>course.content.assessment.overview.noDueDate</span>\n              </div>\n            </li>\n            \x3c!--Time Limit --\x3e\n            <li ng-if="assessmentOverview.hasTimeLimit" class="js-time-limit-type">\n              <bb-ui-icon-medium-no-time-limit ng-if="assessmentOverview.showDueDateWarnings" class="assessment-overview-item__icon time-limit-overridden grayed-out"></bb-ui-icon-medium-no-time-limit>\n              <bb-ui-icon-medium-time-limit ng-if="!assessmentOverview.showDueDateWarnings" class="assessment-overview-item__icon"></bb-ui-icon-medium-time-limit>\n              <div>\n                <span ng-class="{\'time-limit-overridden grayed-out\' : assessmentOverview.showDueDateWarnings }"\n                      class="settings-label"\n                      bb-translate>course.content.assessment.test.settings.timeLimit.label</span>\n                <span class="settings-link js-time-limit-auto-submission">\n                  <span ng-class="{\'time-limit-overridden grayed-out line-through\' : assessmentOverview.showDueDateWarnings }"\n                        class="js-time-limit-numerical"\n                        ng-bind-html="assessmentOverview.displayedTimeLimitSeconds | timeSpan: \'m\': this"></span>\n                  <span class="time-limit-description"\n                        ng-if="!assessmentOverview.canContinue"\n                        bb-translate>course.content.assessment.test.settings.timeLimit.autoSubmission</span>\n                </span>\n                <div ng-if="assessmentOverview.showRemainingTime">\n                  <span class="settings-label settings-link"\n                        bb-translate>course.content.assessment.test.settings.timeLimit.remainingTimeLabel</span>\n                  <span class="js-time-limit-overridden"\n                        ng-bind-html="assessmentOverview.remainingTimeInMinutesBeforeDueDateOverridesSoftTimeLimit * 60 | timeSpan: \'m\': this"></span>\n                </div>\n              </div>\n            </li>\n            \x3c!--Rubric--\x3e\n            <li class="js-rubric-overview" ng-if="assessmentOverview.rubricEvaluationIsVisible || assessmentOverview.rubricViewIsVisible">\n              <bb-svg-icon class="assessment-overview-item__icon" size="medium" icon="rubric"></bb-svg-icon>\n              <div class="tool-text">\n                <span class="settings-label" bb-translate>course.content.assessment.overview.rubric</span>\n                <span class="settings-link">\n                  <button class="button button--text" ng-click="assessmentOverview.showRubricPanel()" bb-click-focus=".rubric-evaluation-subpanel" bb-translate analytics-id="course.content.assessment.overview.gradedWithRubric">course.content.assessment.overview.gradedWithRubric</button>\n                </span>\n              </div>\n            </li>\n            \x3c!--Goals--\x3e\n            <li class="goal-alignment-li" ng-if="assessmentOverview.alignedGoalsCount">\n              <bb-svg-icon class="assessment-overview-item__icon" size="medium" icon="goal"></bb-svg-icon>\n              <div class="goal-text">\n                <span class="settings-label" bb-translate>course.goal-alignment.goal.header</span>\n                <span class="settings-link">\n                  <a href="javascript:void(0);" role="button" tabindex="{{assessmentOverview.hideOverview ? -1 : 0}}" class="js-view-goals"\n                     ng-click="assessmentOverview.showGoals()" bb-translate\n                     translate-values="{number: assessmentOverview.alignedGoalsCount}" analytics-id="course.goal-alignment.goal.alignedGoals.plural">\n                    course.goal-alignment.goal.alignedGoals.plural\n                  </a>\n                </span>\n              </div>\n            </li>\n            \x3c!--Number of attempts remaining and submitted--\x3e\n            <li>\n              <bb-svg-icon class="assessment-overview-item__icon" size="medium" icon="attempts"></bb-svg-icon>\n              <div ng-if="assessmentOverview.showAttemptDescription()">\n                <span class="settings-label" bb-translate>course.content.assessment.overview.attempts</span>\n                <span class="settings-link">\n                  <span ng-class="{\'vertical-bar\' : assessmentOverview.showAttemptsSubmittedDescription() }"\n                    bb-translate translate-values="{count: assessmentOverview.unsubmittedAttemptsLeft}">\n                    {{::assessmentOverview.attemptsRemainingDescriptionKey}}\n                  </span>\n                  <span ng-if="::assessmentOverview.showAttemptsSubmittedDescription()">\n                    <a ng-if="!assessmentOverview.detailsView" href="javascript:void(0);" ng-click="assessmentOverview.openAttemptReview()"\n                      bb-translate translate-values="{submitted: assessmentOverview.attemptCountSubmitted, late: assessmentOverview.attemptCountSubmittedLate}" analytics-id="{{::assessmentOverview.attemptsSubmittedDescriptionKey}}">\n                      {{::assessmentOverview.attemptsSubmittedDescriptionKey}}\n                    </a>\n                    <span ng-if="assessmentOverview.detailsView" bb-translate translate-values="{submitted: assessmentAttempt.attemptCountSubmitted, late: assessmentAttempt.attemptCountSubmittedLate}">\n                      {{::assessmentAttempt.attemptsSubmittedDescriptionKey}}\n                    </span>\n                  </span>\n                </span>\n              </div>\n            </li>\n            \x3c!--Peer review--\x3e\n            <li class="peer-grading-li" ng-if="assessmentOverview.isPeerGradingConfigured">\n              <bb-svg-icon class="assessment-overview-item__icon" ng-class="{\'alert\': assessmentOverview.isPeerReviewsLate()}" size="medium" icon="peer-review"></bb-svg-icon>\n              <div ng-if="assessmentOverview.showAttemptDescription()">\n                <span class="settings-label" bb-translate>course.content.assessment.test.settings.peerGrading.summary.label</span>\n                <span class="settings-link">\n                  <span class="peer-reviews-left vertical-bar" bb-translate translate-values="{ numOfPeersToReview: assessmentOverview.numOfPeerReviewsLeft }">\n                    course.content.assessment.test.settings.peerGrading.summary.peerReviewsLeft\n                  </span>\n                  <span class="alert" ng-if="assessmentOverview.isPeerReviewsLate()">\n                    <span class="alert-text" ng-if="!assessmentOverview.arePeerReviewsComplete()" bb-translate>course.content.assessment.overview.pastDue</span>\n                    <span class="alert-text" ng-if="assessmentOverview.arePeerReviewsComplete()" bb-translate translate-values="{numReviewsLate: assessmentOverview.numberOfLatePeerReviews()}">course.content.assessment.overview.assignedPeerReviews.numberOfReviewsLate</span>\n                  </span>\n                  <span ng-if="!assessmentOverview.isPeerReviewsLate()" class="peer-review-due-date" bb-translate translate-values="{ datetime: assessmentOverview.peerReviewDueDate }">\n                    course.content.assessment.test.settings.peerGrading.summary.reviewDueDate\n                  </span>\n                </span>\n                <span ng-if="assessmentOverview.isPeerReviewsLate()" class="peer-review-due-date" bb-translate translate-values="{ datetime: assessmentOverview.peerReviewDueDate }">\n                  course.content.assessment.test.settings.peerGrading.summary.reviewDueDate\n                </span>\n              </div>\n            </li>\n            \x3c!--Group information--\x3e\n            <li ng-if="assessmentOverview.content.isGroupContent">\n              <bb-svg-icon class="assessment-overview-item__icon" size="medium" icon="groups"></bb-svg-icon>\n              <div ng-if="assessmentOverview.content.userNeedsToSelfEnrollInGroup()">\n                <span class="settings-label" bb-translate="{{::assessmentOverview.groupAssessmentKey}}" translate-values="{\'title\': assessmentOverview.customCategory}"></span>\n                <bb-group-student-enrollment content="assessmentOverview.content" from-view="assessment.overview"></bb-group-student-enrollment>\n              </div>\n              <div ng-if="!assessmentOverview.content.userNeedsToSelfEnrollInGroup()">\n                <span class="settings-label" bb-translate="{{::assessmentOverview.groupAssessmentKey}}" translate-values="{\'title\': assessmentOverview.customCategory}"></span>\n                <span class="settings-link ellipsis" title="{{assessmentOverview.content.assignedGroups[0].groupTitle}}">{{assessmentOverview.content.assignedGroups[0].groupTitle}}</span>\n              </div>\n            </li>\n            \x3c!--Safe Assign--\x3e\n            <li ng-if="assessmentOverview.originalityReportService.isOriginalityReportEnabled() &&\n                       assessmentOverview.originalityReportService.isSafeAssignActiveOriginalityProvider()">\n              <bb-ui-icon-medium-safe-assign class="assessment-overview-item__icon"></bb-ui-icon-medium-safe-assign>\n              <div>\n                <span class="settings-label" bb-translate>course.content.originalityReport.settings.label</span>\n                <span class="settings-link" ng-if="assessmentOverview.detailsView">\n                  \x3c!-- htmlhint:analytics-id:disable --\x3e\n                  <button class="button button--text"\n                          ng-click="assessmentOverview.openSafeAssign()"\n                          analytics-id="course.content.assessment.test.settings.safeAssign.enabled">\n                            {{assessmentOverview.originalityReportService.getOriginalityReportLinkText(false)}}\n                  </button>\n                  \x3c!-- htmlhint:analytics-id:enable --\x3e\n                </span>\n                <span class="settings-link originality-enabled" ng-if="!assessmentOverview.detailsView && (!assessmentOverview.content.canStudentViewReports() || (!assessmentOverview.showScoreCard && !assessmentOverview.attemptCountSubmitted))">\n                  <span class="js-safeAssign-enabled">\n                    {{assessmentOverview.originalityReportService.getOriginalityReportLinkText(false)}}\n                  </span>\n                </span>\n                <span class="settings-link js-view-originality-report" ng-if="!assessmentOverview.detailsView && assessmentOverview.content.canStudentViewReports() && (assessmentOverview.showScoreCard || assessmentOverview.attemptCountSubmitted)">\n                  <ng-switch on="assessmentOverview.originalityReportAvailable">\n                    <span ng-switch-when="false" class="safe-assign-info" bb-translate="course.content.originalityReport.settings.originalityInProgress"></span>\n                    <span ng-switch-when="true">\n                      <button class="button--text"\n                                ng-click="assessmentOverview.openAttemptReview(true)"\n                                analytics-id="course.content.assessment.test.settings.safeAssign.available"\n                                bb-translate>\n                                course.content.originalityReport.settings.originalityAvailable\n                      </button>\n                    </span>\n                    <span ng-switch-when="null">\n                      {{assessmentOverview.originalityReportService.getOriginalityReportLinkText(false)}}\n                    </span>\n                    <span ng-switch-default class="safe-assign-info" bb-translate="course.content.originalityReport.settings.loadingLabel"></span>\n                  </ng-switch>\n                </span>\n              </div>\n            </li>\n            \x3c!--Originality Integration--\x3e\n            <li ng-if="assessmentOverview.originalityReportService.isOriginalityReportEnabled() &&\n                       assessmentOverview.originalityReportService.isIntegrationActiveOriginalityProvider()">\n              <bb-ui-icon-medium-safe-assign class="assessment-overview-item__icon"></bb-ui-icon-medium-safe-assign>\n              <div>\n                <span class="settings-label" bb-translate>course.content.originalityReport.settings.label</span>\n                <ng-switch on="!!assessmentOverview.attemptCountSubmitted">\n                  <span ng-switch-when="false" class="settings-link">\n                    <span class="js-safeAssign-enabled">\n                      {{assessmentOverview.originalityReportService.getOriginalityReportLinkText(false)}}\n                    </span>\n                  </span>\n                  <span ng-switch-when="true" class="settings-link">\n                    <button class="button--text"\n                          ng-click="assessmentOverview.openAttemptReview(true)"\n                          analytics-id="course.content.assessment.test.settings.integration.available"\n                          bb-translate\n                    >\n                      course.content.originalityReport.settings.originalityAvailable\n                    </button>\n                  </span>\n                </ng-switch>\n              </div>\n            </li>\n            \x3c!--Proctoring--\x3e\n            <ng-switch\n              ng-if="!!assessmentOverview.currentProctoringServiceType"\n              on="assessmentOverview.currentProctoringServiceType">\n              <li class="proctoring-summary" ng-switch-when="Respondus" ng-if="::assessmentOverview.content.isSecureBrowserRequiredToTake()">\n                <bb-ui-icon-medium-proctor-shield class="assessment-overview-item__icon"></bb-ui-icon-medium-proctor-shield>\n                <div class="proctoring-peek-container">\n                  <span class="settings-label" bb-translate>components.services.proctoring.overview.label</span>\n                  <span class="settings-link" ng-if="::assessmentOverview.getProctoringBrowserText()">\n                    <span bb-translate>{{assessmentOverview.getProctoringBrowserText()}}</span>\n                  </span>\n                  <span class="settings-link requirements" ng-if="::assessmentOverview.showBeforeAttemptedFooter && assessmentOverview.getProctoringRequirementsText()" bb-translate>{{assessmentOverview.getProctoringRequirementsText()}}</span>\n                  <span class="settings-link browser-download" ng-if="::assessmentOverview.showBeforeAttemptedFooter &&  assessmentOverview.getProctoringBrowserDownloadText()">\n                    <bb-svg-icon size="medium" icon="download"></bb-svg-icon>\n                    <a target="_blank" href="{{assessmentOverview.content.getProctoringDownloadUrl()}}" bb-translate analytics-id="{{assessmentOverview.getProctoringBrowserDownloadText()}}">{{assessmentOverview.getProctoringBrowserDownloadText()}}</a>\n                  </span>\n                </div>\n              </li>\n              <li class="ims-proctoring-overview-summary" ng-switch-when="IMS">\n                <bb-ui-icon-medium-proctor-shield class="assessment-overview-item__icon"></bb-ui-icon-medium-proctor-shield>\n                <div class="ims-proctoring-overview-summary__content">\n                  <span class="settings-label" bb-translate>course.content.assessment.overview.proctoring.sectionTitle</span>\n                  <span class="ims-proctoring-overview-summary__requirements" bb-translate>course.content.assessment.overview.proctoring.requirements</span>\n                </div>\n              </li>\n            </ng-switch>\n          </ul>\n          \x3c!--Grading section--\x3e\n          <div ng-if="assessmentOverview.isScorm" ng-show="!assessmentOverview.isLoading" class="scorm-overview-grades" ui-view="scorm-grading-section@"></div>\n          <div ng-if="!assessmentOverview.isScorm" class="row">\n            <span class="settings-label" bb-translate>course.content.assessment.overview.gradingHeader</span>\n            <div class="alert grading-notice"\n                 ng-if="assessmentOverview.showPastDueForDueDate() && !assessmentOverview.currentAttempt.isSubmitted() && !assessmentOverview.isLateAttemptCreationDisallowed && !assessmentOverview.contentData.gradeDetail.isExempt">\n              <bb-svg-icon class="alert-icon assessment-overview-item__icon" icon="attention" size="small" status="alert"></bb-svg-icon>\n              <span class="notice-text" bb-translate>course.content.assessment.overview.pastDueZero.submitNowToUpdate</span>\n            </div>\n\n            \x3c!--Past-due-zero grade card (ie. "Your grade 0")--\x3e\n            \x3c!-- this shows when past due and no attempt has been made or a draft has been saved (no previous attempts submitted)--\x3e\n            <div class="submission-card" ng-if="!assessmentOverview.showScoreCard && assessmentOverview.showPastDueForDueDate()">\n              <span bb-content-item-icon content-column="assessmentOverview.contentData.gradingColumn" show-alert-icon="!assessmentOverview.contentData.gradeDetail.isExempt"></span>\n\n              <div class="card-text">\n                <span class="submission-label" bb-translate>course.content.assessment.overview.scoreCard.yourScore</span>\n                <span ng-if="!assessmentOverview.isLateAttemptCreationDisallowed"\n                      class="submission-subtext"\n                      bb-translate>course.content.assessment.overview.pastDueZero.pastDueAndNotSubmitted</span>\n                <span ng-if="assessmentOverview.isLateAttemptCreationDisallowed"\n                      class="submission-subtext"\n                      bb-translate>course.content.assessment.overview.pastDueZero.pastDueAndNoNewAttemptsAllowed</span>\n              </div>\n              <div class="card-grade">\n                <bb-display-grade-pill grade="assessmentOverview.contentData.gradeDetail"\n                                       column="assessmentOverview.contentData.gradingColumn"\n                                       display-stacked="true"></bb-display-grade-pill>\n              </div>\n            </div>\n\n            \x3c!--Pre-submission-grade-override-or-exempt grade card (ie. "Your grade exempt")--\x3e\n            \x3c!-- this shows only when no attempt has been made or a draft has been saved and exempt (no previous attempts submitted)--\x3e\n            <div class="submission-card" ng-if="!assessmentOverview.attemptCountSubmitted && !assessmentOverview.showPastDueForDueDate() && assessmentOverview.contentData.gradeDetail.isExempt">\n              <span bb-content-item-icon content-column="assessmentOverview.contentData.gradingColumn" show-alert-icon="!assessmentOverview.contentData.gradeDetail.isExempt"></span>\n\n              <div class="card-text">\n                <span class="submission-label" bb-translate="course.content.assessment.overview.scoreCard.yourScore"></span>\n              </div>\n              <div class="card-grade">\n                <bb-display-grade-pill grade="assessmentOverview.contentData.gradeDetail"\n                                       column="assessmentOverview.contentData.gradingColumn"></bb-display-grade-pill>\n              </div>\n            </div>\n\n            \x3c!--Pre-submission grade card (ie. "Maximum score")--\x3e\n            \x3c!-- this shows only when no attempt has been made or a draft has been saved and grade not overridden (no previous attempts submitted)--\x3e\n            <div class="no-submission-card" ng-if="assessmentOverview.showPresubmissionGradeCard">\n              <span class="no-submission-icon" bb-content-item-icon content-column="assessmentOverview.contentData.gradingColumn" show-alert-icon="assessmentOverview.isOverdue"></span>\n              <div class="no-submission-text">\n                <span class="no-submission-label" bb-translate>course.content.assessment.overview.highestPossible</span>\n                <span class="no-submission-subtext" ng-if="assessmentOverview.currentAttempt.isInProgress()"\n                      bb-translate="course.content.assessment.overview.startedAt" translate-values="{ datetime: assessmentOverview.currentAttempt.modifiedDate }"></span>\n                <span class="no-submission-subtext" ng-if="!assessmentOverview.currentAttempt.isInProgress() && assessmentOverview.contentData.gradingColumn.isMultipleAttempts()"\n                      bb-translate="{{assessmentOverview.aggregationModelDescriptionKey}}"></span>\n              </div>\n              <div class="no-submission-value"><span bb-translate translate-values="{point: assessmentOverview.highestPossibleScore}">course.content.assessment.overview.maxPoint.plural</span></div>\n            </div>\n            \x3c!--Pre-submission grade card (ie. "Maximum score")--\x3e\n            \x3c!-- this shows when the current attempt is in progress and previous attempts have already been submitted and grade not overridden --\x3e\n            <a class="has-link js-attempt-submitted" href="javascript:void(0);"\n               ng-if="!assessmentOverview.contentData.gradeDetail.isOverrideGrade() && !assessmentOverview.showScoreCard && (assessmentOverview.attemptCountSubmitted > 0)"\n               ng-click="assessmentOverview.openAttemptReview()"\n               analytics-id="course.content.assessment.overview.highestPossible.link">\n              <div class="no-submission-card">\n                <span class="no-submission-icon" bb-content-item-icon content-column="assessmentOverview.contentData.gradingColumn" show-alert-icon="assessmentOverview.isSubmittedLate() && !assessmentOverview.contentData.gradeDetail.isExempt"></span>\n                <div class="no-submission-text">\n                  <span class="no-submission-label" bb-translate>course.content.assessment.overview.highestPossible</span>\n                  <span class="no-submission-subtext" ng-if="assessmentOverview.currentAttempt.isInProgress()"\n                        bb-translate="course.content.assessment.overview.startedAt" translate-values="{ datetime: assessmentOverview.currentAttempt.modifiedDate }"></span>\n                  <span class="no-submission-subtext" ng-if="!assessmentOverview.currentAttempt.isInProgress() && assessmentOverview.contentData.gradingColumn.isMultipleAttempts()"\n                        bb-translate="{{assessmentOverview.aggregationModelDescriptionKey}}"></span>\n                </div>\n                <div class="no-submission-value"><span bb-translate translate-values="{point: assessmentOverview.highestPossibleScore}">course.content.assessment.overview.maxPoint.plural</span></div>\n              </div>\n            </a>\n            \x3c!--Post-submission, pre-graded-and-posted grade card (ie. "Submission"/"Late Submission")--\x3e\n            \x3c!-- this shows only when an attempt has been submitted but not yet graded and posted by the instructor and grade not overridden --\x3e\n            <a class="has-link js-attempt-submitted" href="javascript:void(0);" ng-if="!assessmentOverview.contentData.gradeDetail.isOverrideGrade() && assessmentOverview.showScoreCard && !assessmentOverview.contentData.gradeDetail.isPosted()" ng-click="assessmentOverview.openAttemptReview()" analytics-id="course.content.assessment.overview.scoreCard.submitted.link">\n              <div class="submission-card">\n                <span bb-content-item-icon content-column="assessmentOverview.contentData.gradingColumn" show-alert-icon="assessmentOverview.isSubmittedLate() && !assessmentOverview.contentData.gradeDetail.isExempt" class="img-wrapper"></span>\n                <div class="card-text">\n                  <ng-switch on="assessmentOverview.isSubmittedLate() && !assessmentOverview.contentData.gradeDetail.isExempt">\n                    <span ng-switch-when="true" class="submission-label late-submission" bb-translate="course.content.assessment.overview.scoreCard.lateSubmission"></span>\n                    <span ng-switch-default class="submission-label" bb-translate="course.content.assessment.overview.scoreCard.submission"></span>\n                  </ng-switch>\n                  <div class="card-text-attempt">\n                    <span bb-translate\n                          translate-values="{\'attemptDate\': assessmentOverview.latestAttemptDate}">course.content.assessment.overview.scoreCard.submitted</span>\n                  </div>\n                </div>\n                <div class="card-grade">\n                  <bb-display-grade-pill grade="assessmentOverview.contentData.gradeDetail"\n                                         column="assessmentOverview.contentData.gradingColumn"\n                                         display-stacked="true"></bb-display-grade-pill>\n                </div>\n              </div>\n            </a>\n            \x3c!--Post-submission, graded-and-posted grade card (ie. "Your Score")--\x3e\n            \x3c!-- this shows only when an attempt has been submitted and graded then posted by the instructor or grade overridden --\x3e\n            <div class="js-attempt-posted" ng-if="(assessmentOverview.showScoreCard && assessmentOverview.contentData.gradeDetail.isPosted()) || (!assessmentOverview.showPastDueForDueDate() && assessmentOverview.contentData.gradeDetail.isOverrideGrade()) && !assessmentOverview.contentData.gradeDetail.isExempt">\n                <div class="submission-card">\n                  <a href="javascript:void(0);" class="has-link sub-submission-card" bb-translate-attrs="{\'aria-label\': \'course.content.assessment.overview.externalSubmissionsFtue\'}" ng-click="assessmentOverview.openAttemptReview()" analytics-id="course.content.assessment.overview.scoreCard.yourScore.link">\n                    <span bb-content-item-icon content-column="assessmentOverview.contentData.gradingColumn" show-alert-icon="assessmentOverview.isSubmittedLate() && !assessmentOverview.contentData.gradeDetail.isExempt"\n                          class="img-wrapper"></span>\n                    <div class="card-text">\n                      <span class="submission-label" bb-translate="course.content.assessment.overview.scoreCard.yourScore"></span>\n                      <span class="submission-subtext" ng-if="assessmentOverview.contentData.gradingColumn.isMultipleAttempts()"\n                            bb-translate="{{assessmentOverview.aggregationModelDescriptionKey}}"></span>\n                    </div>\n                    <div class="card-grade">\n                      <bb-display-grade-pill grade="assessmentOverview.contentData.gradeDetail"\n                                             column="assessmentOverview.contentData.gradingColumn"\n                                             display-stacked="true"></bb-display-grade-pill>\n                    </div>\n                  </a>\n                  <a href="javascript:void(0);" class="assessment-feedback-button" bb-translate-attrs="{\'aria-label\': \'course.content.assessment.overview.externalSubmissionsFtue\'}" ng-if="assessmentOverview.hasFeedback()" analytics-id="course.content.assessment.overview.assessmentResults.feedback.link" ng-click="assessmentOverview.openAttemptFeedback()" >\n                    <bb-svg-icon class="assessment-feedback-icon" size="medium" icon="feedback" role="presentation" aria-hidden="true" status="active"></bb-svg-icon>\n                  </a>\n                </div>\n            </div>\n            \x3c!--Extra Credits--\x3e\n            \x3c!-- this shows only when maximum points card is visible --\x3e\n            <div class="no-submission-card" ng-if="assessmentOverview.showExtraCreditPointsCard">\n              <span class="no-submission-icon">\n                <bb-ui-icon-large-kudos icon="contentItemIcon.iconName" color="primary" />\n              </span>\n              <div class="no-submission-text">\n                <span class="no-submission-label" bb-translate>course.content.assessment.overview.extraCredit</span>\n              </div>\n              <div class="no-submission-value">\n                <span bb-translate translate-values="{point: assessmentOverview.extraCreditPoints}">\n                  course.content.assessment.overview.maxExtraCredit.plural</span></div>\n            </div>\n          </div>\n          \x3c!--Assessment Results--\x3e\n          <div class="assessment-result-info" ng-if="assessmentOverview.showAssessmentResults">\n            <div class="row collapse">\n              <div class="small-10 columns assessment-result-info__header">\n                <h2 bb-translate>course.content.assessment.overview.assessmentResults.header</h2>\n                <button\n                  class="center-tooltip js-assessment-results-info-tooltip"\n                  bb-tooltip enhanced-tooltip="true"\n                  bb-translate-attrs="{\'aria-label\': \'course.content.assessment.overview.assessmentResults.info\',\n                                        title: \'course.content.assessment.overview.assessmentResults.info\'}"\n                  analytics-id="course.content.assessment.overview.assessmentResults.information.button">\n                  <bb-svg-icon aria-hidden="true" role="presentation" size="small" icon="information"></bb-svg-icon>\n                </button>\n              </div>\n            </div>\n            <ul class="row assessment-features">\n              <li class="assessment-result-options" ng-repeat="option in ::assessmentOverview.assessmentResultOptions">\n                <ng-switch on="assessmentOverview.isOptionAvailable(option.visible)">\n                  <bb-svg-icon ng-switch-when="true" size="medium" icon="{{::option.icon}}" status="active"></bb-svg-icon>\n                  <bb-svg-icon ng-switch-default size="medium" icon="{{::option.icon}}"></bb-svg-icon>\n                </ng-switch>\n\n                <div>\n                  <span class="settings-label">{{::option.optionLabel}}</span>\n                  <span class="settings-link" ng-bind-html="option.modeLabel"></span>\n                </div>\n\n                <span class="assessment-result-options__warning" aria-hidden="false" ng-if="assessmentOverview.shouldDisplayAssessmentResultsWarning(option) && !option.visible" bb-translate>\n                  course.content.assessment.overview.assessmentResults.availabilityCondition\n                </span>\n              </li>\n            </ul>\n          </div>\n          \x3c!--Assigned Peer Reviews--\x3e\n          <bb-assigned-peer-grading ng-if="assessmentOverview.isPeerGradingConfigured"\n                                    submission-due-date="::assessmentOverview.dueDate"\n                                    peer-review-due-date="::assessmentOverview.peerReviewDueDate"\n                                    peer-reviews-per-student="::assessmentOverview.numOfPeerReviewsToComplete"\n                                    allow-late-peer-reviews="::assessmentOverview.allowLatePeerReviews"\n                                    has-due-date-accommodation="::assessmentOverview.hasDueDateAccommodation"\n                                    is-submission-complete="assessmentOverview.isAssessmentSubmissionComplete"\n                                    is-submission-late="assessmentOverview.isSubmissionLate"\n                                    content="assessmentOverview.content"\n                                    component-updated-callback="assessmentOverview.peerReviewsComponentUpdatedCallback">\n          </bb-assigned-peer-grading>\n          \x3c!--Description--\x3e\n          <div class="row" ng-if="assessmentOverview.content.description">\n            <span class="settings-label" bb-translate>course.content.assessment.overview.descriptionHeader</span>\n            <span class="desc-content">\n              {{assessmentOverview.content.description}}\n            </span>\n          </div>\n          \x3c!--Proctoring Additional Notes --\x3e\n          <div class="proctoring-additional-notes" ng-if="::assessmentOverview.showProctoringAdditionalNotes() && assessmentOverview.content.isSecureBrowserRequiredToTake()">\n            <span class="settings-label" bb-translate>components.services.proctoring.overview.additionalNotes.label</span>\n            <span class="desc-content details-view" ng-if="::assessmentOverview.detailsView" bb-translate>components.services.proctoring.delivery.attempt.additionalNotes.description</span>\n            <span class="desc-content non-details-view" ng-if="::!assessmentOverview.detailsView" bb-translate>components.services.proctoring.overview.additionalNotes.description</span>\n          </div>\n          <div class="row group-assessment-members" ng-if="assessmentOverview.content.isGroupContent && !assessmentOverview.content.userNeedsToSelfEnrollInGroup()">\n            <h2 class="peek-title-h2">\n              <bb-translate translate-values="{number: assessmentOverview.groupUsers.length}">course.content.assessment.test.group.assignmentGroupMembers.plural</bb-translate>\n              <div class="group-buttons" bb-guidance-target component-key="components.features.course.content.assessment.ftue.group-conversation" keep-guidance-when-focusout="true">\n                <button ng-show="assessmentOverview.shouldShowCollabLink" ng-click="assessmentOverview.launchCollabSession()"\n                        bb-translate-attrs="{\'aria-label\':\'course.content.conversation.collaborate\', \'title\': \'course.content.conversation.collaborate\'}"\n                        class="button super-clear icon" aria-describedby="collab-icon-assessment" analytics-id="course.content.conversation.collobrate.button">\n                  <bb-collab-session-icon id="collab-icon-assessment" running-session-flag="assessmentOverview.runningSessionFlag"></bb-collab-session-icon>\n                </button>\n                <button ng-if="assessmentOverview.content.ui.hasConversationAttached && assessmentOverview.content.attachedForumLink"\n                        ng-click="assessmentOverview.gotoConversation(assessmentOverview.content.assignedGroups[0].groupId)"\n                        bb-translate-attrs="{\'aria-label\':\'components.directives.header.openAriaGroup\', \'title\': \'components.directives.header.openAriaGroup\'}"\n                        class="button super-clear icon" analytics-id="components.directives.header.openAriaGroup.button">\n                  <bb-svg-icon ng-class="{\'has-indicator\': assessmentOverview.hasGroupIndicator}" size="medium" icon="group-conversation"></bb-svg-icon>\n                </button>\n              </div>\n              \x3c!--View group conversation FTUE--\x3e\n              <div ng-if="assessmentOverview.content.ui.hasConversationAttached && assessmentOverview.content.attachedForumLink" class="guidance-wrapper group-conversation-ftue">\n                <bb-guidance component-key="components.features.course.content.assessment.ftue.group-conversation" class="guidance-element-overlay">\n                  <span bb-translate="{{::assessmentOverview.groupConversationFtueKey}}" translate-values="{title: assessmentOverview.customCategory}"></span>\n                </bb-guidance>\n              </div>\n            </h2>\n            <div class="member-container">\n              <div class="member js-member-{{::member.id}}" ng-repeat="member in assessmentOverview.groupUsers track by member.id"\n                ng-class="{\'is-owner\': member.id === groupAttemptOwnerId}">\n                <bb-usercard usercard-show="avatar"\n                             user="member" course-id="{{assessmentOverview.course.id}}"\n                             course-role="assessmentOverview.getCourseRole(member)"\n                             can-send-message="assessmentOverview.canSendMessage(member)"\n                             inactive="assessmentOverview.isInactive(member)">\n                </bb-usercard>\n                <bb-username class="member-name" user="member" format="short" has-title-attr="false" show-pronouns="true" show-pronunciation="true"></bb-username>\n                <span ng-if="member.id === groupAttemptOwnerId" bb-tooltip\n                      enhanced-tooltip="true"\n                      tooltip-position="bottom-right"\n                      bb-translate-attrs="{title: \'course.content.assessment.overview.currentEditingLabel\'}"\n                      translate-attrs-values="{user:{givenName: member.givenName, familyName: member.familyName}}">\n                  <bb-svg-icon class="draw" size="small" icon="draw"></bb-svg-icon>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="goals-panel slide-small-container slide-animation" ng-class="{slideUp: assessmentOverview.showGoalDetails}">\n        <div ng-show="assessmentOverview.showGoalDetails">\n          <bb-goal-alignment contents="assessmentOverview.goalAlignedContents"\n                             hide-goals="assessmentOverview.hideGoals()"\n                             class="angular-animate content-assessment-goal-peek"\n                             analytics-id="course.content.assessment.goalAlignedContents.goalAlignment">\n          </bb-goal-alignment>\n        </div>\n      </div>\n      <div class="subpanel rubric-evaluation-subpanel slide-small-container slide-animation"\n           ng-class="{slideUp: assessmentOverview.showRubricDetails, slideDown: !assessmentOverview.showRubricDetails, opened: assessmentOverview.showRubricDetails}"\n           bb-translate-attrs="{\'aria-label\': \'course.content.assignmentRubricDetails\'}"\n           tabindex="-1">\n        <div ng-if="assessmentOverview.showRubricDetails">\n          <div class="panel-section-header">\n            <div class="panel-section-header-icon">\n              <bb-svg-icon size="medium" icon="rubric"></bb-svg-icon>\n            </div>\n            <div class="panel-section-header-text">\n              <h2 bb-translate>course.content.assessment.overview.rubricPanelHeader</h2>\n            </div>\n            <button class="button super-clear icon" bb-translate-attrs="{\'aria-label\': \'global.close\'}" ng-click="assessmentOverview.hideRubricPanel()" analytics-id="course.content.assessment.closeRubricPanel.button">\n              <bb-svg-icon size="small" icon="close"></bb-svg-icon>\n            </button>\n          </div>\n          <div class="panel-section-body row">\n            <bb-rubric-view\n              ng-if="assessmentOverview.contentData != null"\n              criteria="assessmentOverview.rubricViewPayload.criteria"\n              analytics-id="assessmentOverview.rubricViewPayload.analyticsId"\n              decimals-length="assessmentOverview.rubricViewPayload.decimalsLength"\n              rubric-type="assessmentOverview.rubricViewPayload.rubricType"\n              max-score="assessmentOverview.rubricViewPayload.maxScore"\n            >\n            </bb-rubric-view>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n  \x3c!-- A footer to display after the user has submitted. Includes a \'start reviews\' button for peer review assessments --\x3e\n  <footer id="after-attempt-footer"\n          class="panel-footer after-attempt-footer"\n          ng-show="!assessmentOverview.isLoading"\n          ng-if="assessmentOverview.showAfterAttemptedFooter && assessmentOverview.isCourseOpen">\n    \x3c!-- Button for peer assessments only for navigating to assigned peer reviews --\x3e\n    <div ng-if="assessmentOverview.startPeerReviewsButtonVisible"\n         class="start-peer-review-button-container">\n      <button class="button button-start-peer-review"\n              ng-click="assessmentOverview.startNextPeerReview()"\n              ng-disabled="!assessmentOverview.startPeerReviewsButtonEnabled"\n              analytics-id="course.content.assessment.overview.peer.start-review.button" bb-translate>\n              {{assessmentOverview.startNextPeerReviewButtonKey}}\n      </button>\n    </div>\n    \x3c!-- Button to view attempt --\x3e\n    <a href="javascript:void(0);"\n       class="button button-attempt"\n       ng-class="{\'button--secondary\': assessmentOverview.startPeerReviewsButtonVisible}"\n       ng-click="assessmentOverview.openAttemptReview()"\n       analytics-id="assessmentOverview.viewSubmittedAttempt.link">\n      <span class="label-button-attempt" bb-translate="{{assessmentOverview.viewAttemptButtonLabelKey}}"></span>\n    </a>\n  </footer>\n  <footer id="start-attempt-footer"\n        class="panel-footer start-attempt-footer"\n        ng-class="{\'has-footer-extension\': assessmentOverview.isAssessmentPasswordProtected || assessmentOverview.shouldShowProctoringErrorMessage}"\n        ng-show="!assessmentOverview.isLoading"\n        ng-if="assessmentOverview.showBeforeAttemptedFooter && assessmentOverview.isCourseOpen">\n    <div class="footer-extension-container" ng-if="assessmentOverview.isAssessmentPasswordProtected && !assessmentOverview.shouldShowProctoringErrorMessage">\n      <div class="attempt-password-header row">\n        <span class="attempt-password-header-text" bb-translate>course.content.assessment.overview.passwordProtected.heading</span>\n        <div\n          bb-tooltip\n          bb-translate-attrs="{\'title\':\'course.content.assessment.overview.passwordProtected.tooltip\'}"\n          enhanced-tooltip="true"\n          tooltip-position="top-center">\n          <div class="info-icon"><bb-svg-icon size="small" icon="information"></bb-svg-icon></div>\n        </div>\n      </div>\n      <input type="text"\n            inputmode="numeric"\n            bb-translate-attrs="{\'placeholder\':\'course.content.assessment.overview.passwordProtected.placeholder\',\n                                \'aria-label\':\'course.content.assessment.overview.passwordProtected.errors.empty\'}"\n            class="attempt-password-entry"\n            ng-class="{\'attempt-password-entry-error\': assessmentOverview.passwordErrorMessageKey}"\n            aria-describedby="{{assessmentOverview.passwordErrorMessageKey ? \'footer-extension-error-message\': null }}"\n            aria-invalid="{{!!assessmentOverview.passwordErrorMessageKey}}"\n            id="assessment-password"\n            ng-model="assessmentOverview.givenPassword"\n            ng-change="assessmentOverview.onPasswordChange()"\n            analytics-id="course.content.assessment.overview.password.input.text"\n            bb-keyboard-enter="assessmentOverview.navigateAttempt()" />\n      <div class="footer-extension-error-message"\n        id="footer-extension-error-message"\n        role="alert"\n        ng-if="assessmentOverview.passwordErrorMessageKey">\n        <span bb-translate ng-if="assessmentOverview.passwordErrorMessageKey">\n          {{assessmentOverview.passwordErrorMessageKey}}\n        </span>\n      </div>\n    </div>\n\n    <div class="footer-extension-container" ng-if="assessmentOverview.shouldShowProctoringErrorMessage">\n      <div class="footer-extension-error-message"\n        id="footer-extension-error-message"\n        role="alert"\n      >\n        <span bb-translate>course.content.assessment.overview.proctoring.viewAssessmentDisabled</span>\n      </div>\n    </div>\n\n    <div\n      class="attempt-button-container"\n      ng-class="{\'has-footer-extension\': assessmentOverview.hasFooterExtension}"\n    >\n      <p ng-if="assessmentOverview.isOverdue && !assessmentOverview.contentData.gradeDetail.isExempt" class="late-button-super-text">\n        <span bb-translate="course.content.assessment.overview.markedLateNotice"></span>\n      </p>\n\n      \x3c!-- Disabled view assessment button --\x3e\n      <div\n        ng-if="assessmentOverview.shouldShowProctoringErrorMessage"\n        class="button button-attempt"\n        ng-disabled="true"\n      >\n        <span\n          class="label-button-attempt"\n          bb-translate="{{assessmentOverview.attemptButtonLabelKey}}"\n          translate-values="{count: assessmentOverview.currentAttemptNumber}">\n        </span>\n      </div>\n\n      \x3c!-- Start/continue non-timed attempt--\x3e\n      <a\n        href="javascript:void(0);"\n        ng-if="assessmentOverview.shouldShowNonTimedAttemptStartContinueButton"\n        ng-click="assessmentOverview.navigateAttempt()"\n        ng-disabled="assessmentOverview.content.userNeedsToSelfEnrollInGroup()"\n        ng-class="{\'js-multiple\': assessmentOverview.allowMultipleAttempts, \'js-continue\': assessmentOverview.attemptIsInProgress}"\n        class="button button-attempt"\n        analytics-id="course.content.assessment.overview.allowMultipleAttempts.link"\n      >\n        <span class="label-button-attempt"\n              bb-translate="{{assessmentOverview.attemptButtonLabelKey}}"\n              translate-values="{count: assessmentOverview.currentAttemptNumber}"></span>\n        <span class="label-button-group-control"\n              bb-load-bundle="features/course/content/assessment/group-attempt/activities/group-attempt-activities"\n              bb-translate="features.course.content.assessment.group-attempt.activities.takecontrol"></span>\n      </a>\n\n      \x3c!-- Start timed attempt--\x3e\n      <a href="javascript:void(0);"\n         ng-if="assessmentOverview.shouldShowTimedAttemptStartButton"\n         class="button button-attempt"\n         ng-class="{\'js-multiple\': assessmentOverview.allowMultipleAttempts, \'js-continue\': assessmentOverview.attemptIsInProgress}"\n         ng-click="assessmentOverview.createAttemptWithTimer()"\n         analytics-id="assessmentOverview.navigateAttempt.link">\n        <span class="label-button-attempt"\n              bb-translate="{{assessmentOverview.attemptButtonLabelKey}}"\n              translate-values="{count: assessmentOverview.currentAttemptNumber}"></span>\n      </a>\n\n      \x3c!-- Continue timed attempt--\x3e\n      <a href="javascript:void(0);"\n         ng-if="assessmentOverview.shouldShowTimedAttemptContinueButton"\n         ng-click="assessmentOverview.navigateAttempt()"\n         ng-class="{\'js-multiple\': assessmentOverview.allowMultipleAttempts, \'js-continue\': assessmentOverview.attemptIsInProgress}"\n         class="button button-attempt"\n         analytics-id="assessmentOverview.allowMultipleAttempts.link">\n        <span class="label-button-attempt"\n              bb-translate="{{assessmentOverview.attemptButtonLabelKey}}"\n              translate-values="{count: assessmentOverview.currentAttemptNumber}"></span>\n        <span class="label-button-group-control"\n              bb-load-bundle="features/course/content/assessment/group-attempt/activities/group-attempt-activities"\n              bb-translate="features.course.content.assessment.group-attempt.activities.takecontrol"></span>\n      </a>\n    </div>\n  </footer>\n  <footer id="start-attempt-closed-course-footer" class="panel-footer course-closed-footer" ng-if="assessmentOverview.showBeforeAttemptedFooter && !assessmentOverview.isCourseOpen">\n    <p class="course-closed-text">\n      <span class="js-course-closed-msg" bb-translate="{{::assessmentOverview.completedCourseKey}}" translate-values="{\'title\': assessmentOverview.customCategory}"></span>\n    </p>\n  </footer>\n  <div ui-view="assessment-overview-peek@"></div>\n</div>\n'},Fv8s:function(e,t){e.exports='<bb-modal class="notification"\n          modal-title-key="{{assessmentOverview.currentProctoringService ?\n            \'components.directives.confirmation-needed.title-x-bb-time-limit-assessment-attempt-proctored\'\n            : \'components.directives.confirmation-needed.title-x-bb-time-limit-assessment-attempt\'}}"\n          bb-focus="true"\n          analytics-id-tag-prefix="components.directives.confirmationNeeded">\n  <div name="modal-contents">\n    <p bb-translate="{{assessmentOverview.canContinue && !assessmentOverview.willDueDateOverrideTimeLimit ?\n                        \'components.directives.confirmation-needed.instructions-x-bb-time-limit-assessment-attempt-can-continue\'\n                        : \'components.directives.confirmation-needed.instructions-x-bb-time-limit-assessment-attempt\'}}"\n       translate-values="{\'totalTimeLimit\': assessmentOverview.startModalTranslateOptions.instructions.params.totalTimeLimit}">\n    </p>\n    <p bb-translate="components.directives.confirmation-needed.instructions-x-bb-time-limit-assessment-attempt-proctored"\n       ng-if="assessmentOverview.currentProctoringService">\n    </p>\n  </div>\n  <button name="modal-footer-button-primary"\n          class="button confirm-ok js-primary-button"\n          ng-click="assessmentOverview.closeModal(true)"\n          analytics-id="primary.button.okAction.button"\n          bb-translate="{{assessmentOverview.currentProctoringService ?\n            \'components.directives.confirmation-needed.ok-x-bb-time-limit-assessment-attempt-proctored\'\n            : \'components.directives.confirmation-needed.ok-x-bb-time-limit-assessment-attempt-can-continue\'}}">\n  </button>\n  <button name="modal-footer-button-secondary"\n          class="button button--secondary confirm-cancel js-secondary-button"\n          ng-click="assessmentOverview.closeModal(false)"\n          analytics-id="secondary.button.cancelAction.button"\n          bb-translate>\n    components.directives.confirmation-needed.cancel-x-bb-time-limit-assessment-attempt-can-continue\n  </button>\n</bb-modal>\n'},IiJs:function(e,t,s){"use strict";s.d(t,"a",(function(){return a})),s.d(t,"b",(function(){return r}));var n=s("Llzl"),i=s("pjml");const a="ultra.services.collabUltra",r="collabUltra";class o{constructor(e,t,s,n,i,a,r){this.$q=e,this.$compile=t,this.$rootScope=s,this.$timeout=n,this.CourseModel=i,this.CollabUltraModel=a,this.$sce=r}getCollabB2Info(){return this.collabB2InfoPromise=this.collabB2InfoPromise||this.CollabUltraModel.$build().getCollabUltraInfo()}getAllCollabSessions(e){return this.CourseModel.$new(e).collabUltra.getAllCollabSessions()}enableCourseRoom(e,t){return this.CourseModel.$new(e).collabUltra.enableCourseRoom(t)}disableCourseRoom(e,t){return this.CourseModel.$new(e).collabUltra.disableCourseRoom(t)}getLaunchUrl(e,t){return this.CourseModel.$new(e).collabUltra.sessions.$new(t).getLaunchUrl()}getCourseCollab(e){return this.CourseModel.$new(e).collabUltra.getCourseCollabInfo()}launchDiscussionSession(e,t,s){return this.CourseModel.$new(e).collabUltra.launchDiscussionSession(t,s)}getCollabSessionStatus(e,t){return this.getCollabB2Info().then((t=>200===t.$response.status?this.CourseModel.$new(e).collabUltra.sessions.$fetch().$allow([403,500,504]).$asPromise():this.$q.reject())).then((s=>200===s.$response.status?this.CourseModel.$new(e).groups.$new(t).collabSession.$fetch({expand:"sessionInstances"}).$allow(["400-599"]).$asPromise().then((e=>e.filter((e=>e.sessionInstances&&e.sessionInstances.length>0)).length>0)):this.$q.when(null)),(()=>this.$q.when(null)))}}o.$inject=["$q","$compile","$rootScope","$timeout",i.m.serviceName,i.j.serviceName,"$sce"];n.module(a,[i.N]).service(r,o)},QhTW:function(e,t,s){var n=s("ziER"),i=s("5JeM"),a=new n({id:"icon-medium-group-conversation",use:"icon-medium-group-conversation-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-group-conversation"><g clip-path="url(#icon-medium-group-conversation_clip0)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4.5 20C6.433 20 8 18.433 8 16.5S6.433 13 4.5 13 1 14.567 1 16.5 2.567 20 4.5 20zM19.522 20c-1.933 0-3.5-1.567-3.5-3.5s1.567-3.5 3.5-3.5 3.5 1.567 3.5 3.5-1.567 3.5-3.5 3.5zM15 23c.5-2 2-3 4.522-3M9.022 23c-.5-2-2-3-4.522-3M14 5.5c0 2.4853-2.0147 4.5-4.5 4.5A4.4927 4.4927 0 018 9.744L6 11V8.3287A4.4812 4.4812 0 015 5.5C5 3.0147 7.0147 1 9.5 1S14 3.0147 14 5.5zM14.5 1C16.9853 1 19 3.0147 19 5.5a4.4812 4.4812 0 01-1 2.8287V11l-2-1.256c-.3184.1125-.6533.2177-1 .256" /></g><defs><clipPath id="icon-medium-group-conversation_clip0"><path fill="#fff" d="M0 0h24v24H0z" /></clipPath></defs></symbol>'});i.add(a);e.exports=a},Xcx3:function(e,t,s){"use strict";s.r(t),s.d(t,"controllerName",(function(){return K})),s.d(t,"INCORRECT_PASSWORD_ENTERED",(function(){return V})),s.d(t,"BLANK_PASSWORD_KEY",(function(){return z})),s.d(t,"INCORRECT_PASSWORD_KEY",(function(){return H})),s.d(t,"TOO_MANY_ATTEMPTS_KEY",(function(){return q})),s.d(t,"START_PEER_REVIEW_BUTTON_KEY",(function(){return W})),s.d(t,"START_NEXT_PEER_REVIEW_BUTTON_KEY",(function(){return Y})),s.d(t,"AssessmentOverviewController",(function(){return J})),s.d(t,"Controller",(function(){return Z}));var n=s("D57K"),i=(s("SMOU"),s("Mak1"),s("s5UK"),s("6BRP"),s("67oV"),s("l+9M"),s("GkCm"),s("ZKRZ"),s("KXuk"),s("yCl+"),s("dpCN"),s("D1Wg"),s("2MQt"),s("JbSi"),s("TR8k"),s("6ZXc"),s("xoIb"),s("dcnw"),s("sZYy"),s("v0wN"),s("QhTW"),s("H/8/"),s("Ycix"),s("4VOk"),s("9G/E"),s("HApu"),s("zIKm"),s("nfUd"),s("nsO7")),a=s("Llzl"),r=s("8N5j"),o=s("IiJs"),l=s("vdfi"),c=s("nYZ0"),d=s("Fvsw"),m=s("bF8R"),u=s("X455"),v=s("fYJU"),p=s("k9iv"),b=s("oi1r"),h=s("o5Lu"),g=s("vhkR"),w=s("2lxm"),O=s("0JpG"),f=s("p7NW"),D=s("pjml"),A=s("12mu"),C=s("YHe3"),S=s("TnpK"),y=s("+O05"),P=s("IbyE"),x=s("zGdY"),R=s("94SL"),T=s("Kpdw"),k=s("aHpC"),E=s("nmzr"),I=s("9hUw"),L=s("0+Qs"),M=s("lEL+"),j=s("5uPl"),G=s("DU7P"),F=s("9ah5");s.d(t,"template",(function(){return F}));var $=s("0B2D");s.d(t,"alreadySubmittedTemplate",(function(){return $}));var B=s("kirn"),N=s("217T");s.d(t,"groupAlreadySubmittedTemplate",(function(){return N}));var U=s("Fv8s");s.d(t,"assessmentTimerModalTemplate",(function(){return U}));var _=s("Y+9S");const K="ultra.features.course.content.assessmentOverview.controller",V="bb-assessment-password-incorrect",z="course.content.assessment.overview.passwordProtected.errors.empty",H="course.content.assessment.overview.passwordProtected.errors.incorrect",q="course.content.assessment.overview.passwordProtected.errors.tooManyAttempts",W="course.content.assessment.overview.assignedPeerReviews.startPeerReviews",Y="course.content.assessment.overview.assignedPeerReviews.startNextReview";let J=class extends R.a{constructor(e,t,s,n,i,a,r,o,l,c,d,m,u,v,p,b,g,w,O,f,D,A,C,S,y,P,x,R,T,k,E){var I,L;super(e,E,l,c,O,y),this.contentData=e,this.course=t,this.$injector=s,this.$ngRedux=n,this.$scope=i,this.$q=a,this.$window=r,this.contentService=o,this.context=l,this.grade=c,this.ultraState=d,this.contentGoalAlignmentPeekStateService=m,this.AttemptModel=u,this.GroupAttemptModel=v,this.errorModalService=p,this.modal=b,this.ltiService=g,this.courseContent=w,this.schemaService=O,this.bbLocalize=f,this.proctoring=D,this.rubricService=A,this.collabUltra=C,this.contextUser=S,this.contextCourseMembership=y,this.assessmentService=P,this.originalityReportService=x,this.peerService=R,this.bbInterval=T,this.bbTimeout=k,this.gradableItemUserOptionService=E,this.alignedGoalsCount=0,this.currentProctoringServiceType=G.a.None,this.customCategory="",this.detailsView=!1,this.goalAlignedContents=[],this.groupUsers=[],this.hideOverview=!1,this.showGoalDetails=!1,this.showRubricDetails=!1,this.showCollabLink=!1,this.hasGroupIndicator=!1,this.hasClassIndicator=!1,this.collabUltraEnabled=!1,this.isAssessmentPasswordProtected=!1,this.givenPassword="",this.passwordErrorMessageKey="",this.isPasswordCheckInProgress=!1,this.remainingTimeInSecondsBeforeDueDateOverridesSoftTimeLimit=Number.NEGATIVE_INFINITY,this.startPeerReviewsButtonVisible=!1,this.startPeerReviewsButtonEnabled=!1,this.startNextPeerReviewButtonKey="",this.assignAndGoToNewPeerReview=null,this.localizedCourseRoles={},this.dismissPeerDeletedBanner=!1,this.assignAndNavigateToPeerReview=()=>{var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.assignNewPeerReview().then((e=>{var t;return null===(t=this.peerReviewContentObject)||void 0===t?void 0:t.navigateToPeerReview(e.delegatedGraderOrder)}))},this.dismissPeerReviewsDeletedBanner=()=>{this.dismissPeerDeletedBanner=!0},this.peerReviewsComponentUpdatedCallback=(e,t,s,n,i)=>{this.startPeerReviewsButtonEnabled=t,this.startPeerReviewsButtonVisible=(e||t)&&!n,this.startNextPeerReviewButtonKey=s?Y:W,this.assignAndGoToNewPeerReview=i},i.assessmentOverview=this,this.content=e.courseContent,this.init(),this.peerService.getOrCreatePeerContentWithAttemptsFromContent(this.content).then((e=>this.peerReviewContentObject=e)),this.content.ui.hasConversationAttached=!!this.content.attachedForumLink,this.groupUsers=e.groupMembers,this.isAssessmentPasswordProtected=null===(L=null===(I=this.content.getDeployedAssessment())||void 0===I?void 0:I.deploymentSettings)||void 0===L?void 0:L.isPasswordRequired,this.timedTestAttemptDetail=this.getTimedTestAttemptDetail(),this.startModalTranslateOptions={instructions:{pluralize:!0,params:{totalTimeLimit:Math.floor(this.displayedTimeLimitSeconds/60)},noWrap:!0,noEscape:!0}},this.registerHandlers(),this.content.$fetchIfNotExpanded({expand:"alignedGoals,assignedGroups"}).$then((s=>{m.resolveGoalAlignableContentsForStudent(t,e,this.currentAttempt).then((([e,t])=>{this.goalAlignedContents=e,this.alignedGoalsCount=t})),this.content.courseId&&this.content.assignedGroups&&this.content.assignedGroups[0]&&this.collabUltra.getCollabSessionStatus(this.content.courseId,this.content.assignedGroups[0].groupId).then((e=>{this.runningSessionFlag=e,null!==e&&(this.collabUltraEnabled=!0)}))})),this.detailsView=!!this.ultraState.params.detailsView,this.detailsView&&(this.submitToGRD=!!this.ultraState.params.submitToGRD),this.calculateKeysAndIconsBasedOnCategory(),this.safeAssignEnabled&&this.content.canStudentViewReports()&&this.getOriginalityReportStatus(),this.content.isGroupContent&&this.content.ui.hasConversationAttached&&this.content.attachedForumLink&&this.loadCollabConfig(),this.content.ui.hasConversationAttached&&this.content.attachedForumLink&&this.updateIndicators();const M=this.contentService.indicatorCacheService.$onClassConversationIndicatorRemoved(((e,t,s)=>{t===this.content.courseId&&s===this.content.id&&(this.hasClassIndicator=!1)})),j=this.contentService.indicatorCacheService.$onGroupConversationIndicatorRemoved(((e,t,s)=>{t===this.content.courseId&&s===this.content.id&&(this.hasGroupIndicator=!1)}));i.$on("$destroy",(()=>{M(),j()})),this.contentData.gradingColumn.getAssociatedRubric()&&(this.rubricViewPayload={analyticsId:"assessmentOverview",criteria:A.getCriteriaPayload(this.contentData.gradingColumn),decimalsLength:h.e.DEFAULT_GRADEBOOK_SETTINGS_AFTER_DECIMAL,rubricType:this.contentData.gradingColumn.getAssociatedRubric().rubricType,maxScore:this.contentData.gradingColumn.possible}),this.fetchOriginalityReportProviderType(),this.fetchProctoringService(),Object(_.m)()&&this.notifyMobileApp(),this.initializeRemainingTimeTimer()}notifyMobileApp(e){var t,s,n;let i,a;if(e)a={type:e,status:_.b.Success};else{i=this.showBeforeAttemptedFooter?_.c.AssessmentOverviewOpened:_.c.AssessmentDetailOpened;const e=null!==(s=null===(t=this.contentData.gradingColumn.gradebookCategory)||void 0===t?void 0:t.title)&&void 0!==s?s:null;a={type:i,status:_.b.Success,contentId:this.content.id,contentTitle:this.content.title,pageTitle:e,prevState:Object(_.i)(null===(n=this.ultraState.prev)||void 0===n?void 0:n.name)}}Object(_.r)(a)}fetchOriginalityReportProviderType(){return this.originalityReportService.retrieveOriginalityIntegration(this.content)}fetchProctoringService(){return this.currentProctoringServiceType=this.proctoring.getCurrentProctoringProviderType(this.proctoringHandle),this.proctoring.getProctoringServiceByHandle(this.proctoringHandle).then((e=>{this.currentProctoringService=e}))}get proctoringHandle(){var e;return null===(e=this.content.getDeployedAssessment())||void 0===e?void 0:e.deploymentSettings.proctoringServiceHandle}get latestAttemptDate(){return this.currentAttempt&&this.currentAttempt.attemptDate}getMembershipByUser(e){return i.find(this.course.memberships,(t=>t.user.id===e.id))}getCourseRole(e){return this.getLocalizedRoleNameByCourseRole(this.getMembershipByUser(e).courseRole)}canSendMessage(e){const t=this.getMembershipByUser(e);return!(this.course.isPrivate()||this.course.isComplete())&&t.isAvailable&&t.user.isAvailable}gotoConversation(e){this.ultraState.goPeekState("conversations",{courseId:this.content.courseId,contentId:this.content.id,groupId:e||"default"})}startNextPeerReview(){this.startPeerReviewsButtonEnabled&&this.assignAndGoToNewPeerReview()}isInactive(e){const t=this.getMembershipByUser(e);return!t.isAvailable||!t.user.isAvailable}getLocalizedRoleNameByCourseRole(e){const t=e.identifier.toString();if(this.localizedCourseRoles[t])return this.localizedCourseRoles[t];if(t in D.w.toBeLocalizedRoleLabels){const e=this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:D.w.toBeLocalizedRoleLabels[t]});return this.localizedCourseRoles[t]=e,e}return e.courseName.rawValue}registerHandlers(){this.$scope.$on("bb-assessment-attempt-save",((e,t,s,n=!1)=>{var i;this.refreshAttempt(t),this.refreshGrade(),(null===(i=this.peerReviewContentObject)||void 0===i?void 0:i.peerGrading)&&this.peerReviewContentObject.loadReviewableAttempts(),this.setAttemptCountsAndDate()}))}get panelTitle(){const e=this.content.getAssociatedGradingColumn().gradebookCategory,t=e&&!e.isUserDefined;return this.detailsView?"course.content.assessment.panelHeader.details."+(t?e.title:"custom"):"course.content.assessment.type."+(t?e.title:"custom")}getOriginalityReportStatus(){const e=new Array;if(this.contentData.gradeDetail){let t;return t=this.content.isGroupContent?this.contentData.gradingColumn.groupAssociations.$new(this.content.assignedGroups[0].groupAssociationId).groupAttempts.$fetch({excludeUnavailableMembers:!0}):this.contentData.gradingColumn.grades.$buildRaw(this.contentData.gradeDetail).attempts.$fetch({fields:"id,status"}),t.$then((t=>{const s=[];return i.forEach(t,(t=>{if(t.isSubmitted()){const n=t.originality.$fetch().$asPromise().then((t=>{t.hasAttachments()?e.push(t.overallOriginalityProcessed):e.push(void 0)}));s.push(n)}})),this.$q.all(s)})).$then((()=>{e.every((e=>a.isUndefined(e)))?this.originalityReportAvailable=null:this.originalityReportAvailable=e.every((e=>a.isUndefined(e)||!0===e))}))}}calculateKeysAndIconsBasedOnCategory(){const e=this.content.getAssociatedGradingColumn().gradebookCategory,t=this.course.isOrganization?"organization":"course";e&&!e.isUserDefined?(this.completedCourseKey=`${t}.content.assessment.overview.completedCourseNotice.${e.title}`,this.groupAssessmentKey="course.content.assessment.overview.group.groupAssessment."+e.title,this.classConversationFtueKey=`${t}.content.assessment.overview.classConversationFtue.${e.title}`,this.groupConversationFtueKey="course.content.assessment.overview.groupConversationFtue."+e.title):(this.customCategory=e&&e.title||this.content.isScorm()&&this.bbLocalize.translateSync({locale:this.bbLocalize.getLocale(this.$scope),key:"Scorm.name"}),this.completedCourseKey=`${t}.content.assessment.overview.completedCourseNotice.custom`,this.groupAssessmentKey="course.content.assessment.overview.group.groupAssessment.custom",this.classConversationFtueKey=`${t}.content.assessment.overview.classConversationFtue.custom`,this.groupConversationFtueKey="course.content.assessment.overview.groupConversationFtue.custom"),this.content.isGroupContent&&this.content.ui.hasConversationAttached&&this.content.attachedForumLink&&(e&&!e.isUserDefined?(this.classConversationFtueKey=`${t}.content.assessment.overview.classConversationFtue.${e.title}`,this.groupConversationFtueKey="course.content.assessment.overview.groupConversationFtue."+e.title):(this.classConversationFtueKey=`${t}.content.assessment.overview.classConversationFtue.custom`,this.groupConversationFtueKey="course.content.assessment.overview.groupConversationFtue.custom"))}refreshAttempt(e){this.currentAttempt=e,D.A.isGroupAttempt(e)&&(this.contentData.groupAttempt=e)}refreshGrade(){this.grade.loadGrade({courseId:this.course.id,userId:this.contextUser.userId,column:this.contentData.gradingColumn,gradeQueryParams:{expand:"attemptsLeft"}},!1).then((e=>{e.ui.attempt=this.currentAttempt,this.contentData.gradeDetail=e}))}get showPresubmissionGradeCard(){var e,t;return!((null===(e=this.contentData.gradeDetail)||void 0===e?void 0:e.isOverrideGrade())||this.showScoreCard||this.attemptCountSubmitted||this.showPastDueForDueDate()||(null===(t=this.contentData.gradeDetail)||void 0===t?void 0:t.isExempt))}get showScoreCard(){return!this.detailsView&&this.currentAttempt&&this.currentAttempt.isSubmitted()}get showDueDateWarnings(){return this.willDueDateOverrideTimeLimit&&this.showBeforeAttemptedFooter}get showRemainingTime(){return this.showDueDateWarnings&&this.remainingTimeInSecondsBeforeDueDateOverridesSoftTimeLimit>0}get remainingTimeInMinutesBeforeDueDateOverridesSoftTimeLimit(){return Math.ceil(this.remainingTimeInSecondsBeforeDueDateOverridesSoftTimeLimit/60)}initializeRemainingTimeTimer(){var e;if(!this.isDueDateEnforced||!this.timedTestAttemptDetail.hasTimeLimit||!this.showBeforeAttemptedFooter)return;if((null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())&&!this.willDueDateOverrideTimeLimit)return;let t=this.studentHasDueDateException?this.dueDateException.effectiveDueDate:this.dueDate;const s=()=>(t.getTime()-this.context.getServerTime().getTime())/1e3,n=()=>this.timedTestAttemptDetail.adaptedTime.softlimitSeconds;if(s()<0||n()<0)return;const i=()=>Math.max(0,s()-n());if(i()>28800)return;let a;const r=(e,t)=>{const s=((new Date).getTime()-e.getTime())/1e3;this.remainingTimeInSecondsBeforeDueDateOverridesSoftTimeLimit=t-s,this.remainingTimeInSecondsBeforeDueDateOverridesSoftTimeLimit<0&&this.bbInterval.cancel(a)},o=()=>{this.willDueDateOverrideTimeLimit?this.gradableItemUserOptionService.getGradableItemUserOption(this.contentData.courseContent.courseId,this.contentData.gradingColumn.id,[this.contextCourseMembership.courseMembership.id]).then((e=>{this.studentHasDueDateException=!!(null==e?void 0:e.byCourseMembershipId[this.contextCourseMembership.courseMembership.id]),this.studentHasDueDateException&&(this.dueDateException=e.byCourseMembershipId[this.contextCourseMembership.courseMembership.id]),t=this.studentHasDueDateException?this.dueDateException.effectiveDueDate:this.dueDate,this.remainingTimeInSecondsBeforeDueDateOverridesSoftTimeLimit=s(),a=this.bbInterval(r.bind(this,new Date,s()),this.$scope,1e4)})):this.bbTimeout(o,this.$scope,1e3*i())};this.bbTimeout(o,this.$scope,1e3*i())}get showAfterAttemptedFooter(){if(this.showBeforeAttemptedFooter)return!1;if(!this.hideOverview&&!this.detailsView){const e=this.allowMultipleAttempts&&0===this.unsubmittedAttemptsLeft,t=!this.allowMultipleAttempts&&this.showScoreCard,s=this.noNewAttemptsAreAllowed&&this.currentAttempt&&!this.currentAttempt.isInProgress();return e||t||this.startPeerReviewsButtonVisible||s}return!1}get showBeforeAttemptedFooter(){var e,t;return!this.hideOverview&&!this.detailsView&&(this.contentData.gradingColumn.isSingleAttempt()?(null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())||!this.currentAttempt&&!this.noNewAttemptsAreAllowed:(!this.contentData.gradeDetail||this.unsubmittedAttemptsLeft>0||this.isUnlimitedAttempts())&&((null===(t=this.currentAttempt)||void 0===t?void 0:t.isInProgress())||!this.noNewAttemptsAreAllowed))}get shouldShowProctoringErrorMessage(){return this.proctoring.isProctoringPlacementUnavailable(this.proctoringHandle,this.currentProctoringService)}get hasFooterExtension(){return this.isAssessmentPasswordProtected||this.shouldShowProctoringErrorMessage}get shouldShowNonTimedAttemptStartContinueButton(){return!this.hasTimeLimit&&void 0!==this.attemptCount&&!this.shouldShowProctoringErrorMessage}get shouldShowTimedAttemptStartButton(){return this.hasTimeLimit&&(!this.currentAttempt||!this.currentAttempt.isInProgress())&&!this.shouldShowProctoringErrorMessage}get shouldShowTimedAttemptContinueButton(){var e;return this.hasTimeLimit&&(null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())&&!this.shouldShowProctoringErrorMessage}get hasFooter(){return this.showBeforeAttemptedFooter||this.showAfterAttemptedFooter}showProctoringAdditionalNotes(){return this.contentData.gradingColumn.isSingleAttempt()?!this.currentAttempt||this.currentAttempt.isInProgress():!this.contentData.gradeDetail||this.unsubmittedAttemptsLeft>0||this.isUnlimitedAttempts()}get isCourseOpen(){return(!0===this.course.effectiveAvailability||!0===this.course.isAvailable)&&!1===this.course.isClosed}get allowMultipleAttempts(){return this.contentData.gradingColumn.isMultipleAttempts()}get currentAttemptNumber(){var e;return this.attemptCount>this.attemptCountSubmitted?this.attemptCountSubmitted+1:(null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())?this.attemptCount:this.attemptCount+1}getTimedTestAttemptDetail(){var e;return(null===(e=this.currentAttempt)||void 0===e?void 0:e.getTimedTestAttemptDetail())?this.isDueDateEnforced?this.currentAttempt.getTimedTestAttemptDetailWithDueDate(this.dueDate):this.currentAttempt.getTimedTestAttemptDetail():this.contentData.courseContent.getTimedTestDetail()}get hasTimeLimit(){var e;return null===(e=this.timedTestAttemptDetail)||void 0===e?void 0:e.hasTimeLimit}get displayedTimeLimitSeconds(){var e;return null===(e=this.timedTestAttemptDetail)||void 0===e?void 0:e.displayedTimeLimitSeconds}get canContinue(){var e;return null===(e=this.timedTestAttemptDetail)||void 0===e?void 0:e.hasExtraTime}createAttemptWithTimer(){if(!this.navigationPreCheck())return this.$q.resolve();return this.retrievePasswordCheckPromise().then((({result:e})=>{e?(this.willDueDateOverrideTimeLimit&&(this.startModalTranslateOptions.instructions.params.totalTimeLimit=this.remainingTimeInMinutesBeforeDueDateOverridesSoftTimeLimit),this.confirmTimerModal=this.modal.open({template:U,scope:this.$scope})):this.passwordErrorMessageKey=H})).catch((e=>{var t;(null===(t=null==e?void 0:e.error)||void 0===t?void 0:t.status)===x.S.TooManyRequests?this.passwordErrorMessageKey=q:this.errorModalService.handleApiError(e.error)})).finally((()=>{this.isPasswordCheckInProgress=!1}))}retrievePasswordCheckPromise(){var e,t;return this.isAssessmentPasswordProtected?(this.isPasswordCheckInProgress=!0,this.$q.when(Object(P.hb)(this.course.id,null===(t=null===(e=this.content.getDeployedAssessment())||void 0===e?void 0:e.assessment)||void 0===t?void 0:t.id,(new r).update(this.givenPassword).digest("hex")))):this.$q.when(Promise.resolve({result:!0}))}closeModal(e){this.confirmTimerModal.close(),e&&this.navigateAttempt()}navigateAttempt(){if(!this.navigationPreCheck())return;if(y.a.isExternalSubmissionsAssessment(this.content)&&this.content.id)return void this.ultraState.goPeekState(E.c.ASSESSMENT_EXTERNAL_OVERVIEW,{contentId:this.content.id});const e=this.content.isGroupContent;if(e&&this.content.assignedGroups&&0===this.content.assignedGroups.length)return void this.modal.open({scope:this.$scope,template:N});const t={type:x.h.Test};if(this.isAssessmentPasswordProtected){const e=this.bbLocalize.parseNumberSync(this.givenPassword,this.$scope).toString().padStart(6,"0");this.isPasswordCheckInProgress=!0,t.password=(new r).update(e).digest("hex")}if(this.currentProctoringServiceType===G.a.IMS||this.content.isSecureBrowserRequiredToTake())return this.navigateProctoredAttempt(t.password),void(this.isPasswordCheckInProgress=!1);const s=this.$q.defer(),n={scoreProviderHandle:P.Q.Test,status:x.l.InProgress,toolAttemptDetail:{"resource/x-bb-assessment":{...t}}},i=e?this.GroupAttemptModel.$build(n):this.AttemptModel.$build(n);this.contentData.attempt=i,e&&(this.contentData.groupAttempt=i),this.contentData.gradingColumn.launchAttempt(i,{},e,e?this.content.assignedGroups[0].groupId:null).then((t=>{var n,i,a,r;if((null===(n=t.$response)||void 0===n?void 0:n.status)===x.S.Forbidden&&t.$response.data){const e=t.$response;switch(null===(i=e.data)||void 0===i?void 0:i.code){case"bb-rest-max-group-attempt-reached":this.courseContent.loadContentAndGrades({course:this.course,content:this.contentData.courseContent}).then((e=>{this.currentAttempt=e.groupAttempt,s.resolve(this.currentAttempt.id)}));break;case"bb-rest-max-group-attempt-reached-and-all-group-attempts-submitted":this.showGroupAlreadySubmittedDialog();break;case x.i.AttemptCompletedOrForceCompletion:this.showAlreadySubmittedDialog();break;case x.i.AttemptPastDue:this.showAttemptCreationDisallowedDialog();break;default:this.errorModalService.handleApiError(e)}}else if((null===(a=t.$response)||void 0===a?void 0:a.status)===x.S.Unauthorized&&t.$response.data){const e=t.$response;e.data.code===V?this.passwordErrorMessageKey=H:this.errorModalService.handleApiError(e)}else(null===(r=t.$response)||void 0===r?void 0:r.status)===x.S.TooManyRequests?this.passwordErrorMessageKey=q:(s.resolve(t.id),this.$scope.$root.$broadcast("bb-assessment-attempt-save",t,this.contentData.gradingColumn.id,e));this.isPasswordCheckInProgress=!1})),s.promise.then((e=>{this.ultraState.goPeekState(E.c.ASSESSMENT_ATTEMPT,{attemptId:e})}))}navigateProctoredAttempt(e){const t={password:e,attemptId:null};this.content.getProctoringLaunchLink(t).then((e=>{this.currentProctoringServiceType===G.a.IMS?this.ltiService.launch(e):this.content.isSecureBrowserRequiredToTake()&&(this.openSecureLaunchLink(e),this.ultraState.goPeekState(E.c.ASSESSMENT_ATTEMPT_RESPONDUS_REQUIREMENT,{courseId:this.content.courseId,contentId:this.content.id}))})).catch((e=>{var t,s;(null===(t=e.data)||void 0===t?void 0:t.status)===x.S.Unauthorized?this.passwordErrorMessageKey=H:(null===(s=e.data)||void 0===s?void 0:s.status)===x.S.TooManyRequests?this.passwordErrorMessageKey=q:this.errorModalService.handleApiError(e)}))}openSecureLaunchLink(e){this.proctoring.openRespondusProctoringLaunchLink(e)}navigateAttemptReview(){this.courseContent.loadContentAndGrades({course:this.course,content:this.contentData.courseContent}).then((e=>{this.currentAttempt=e.groupAttempt,this.openAttemptReview()}))}navigationPreCheck(){return!this.isPasswordCheckInProgress&&(this.passwordErrorMessageKey="",!this.isAssessmentPasswordProtected||!this.isGivenPasswordBlank||(this.passwordErrorMessageKey=z,!1))}showGroupAlreadySubmittedDialog(){return this.modal.open({scope:this.$scope,template:N})}showAlreadySubmittedDialog(){const e=this.$scope.$new();return e.customClose=()=>{this.navigateAttemptReview()},this.modal.open({scope:e,template:$})}showAttemptCreationDisallowedDialog(){return this.modal.open({scope:this.$scope,template:B})}get viewAttemptButtonLabelKey(){let e="course.content.assessment.overview.viewSubmittedAttemptButton";return e+=this.allowMultipleAttempts?".multiple":".single",e}get attemptButtonLabelKey(){let e="course.content.assessment.overview.openAttemptButton.";e+=this.hasTimeLimit?"timed.":"notTimed.",e+=this.attemptIsInProgress?"continue":"start";return e+=this.allowMultipleAttempts&&(this.hasTimeLimit||this.isAssessmentSubmissionComplete)?".multiple":"",e}get safeAssignEnabled(){return this.content.isSafeAssignEnabled()}get attemptIsInProgress(){var e;return(null===(e=this.currentAttempt)||void 0===e?void 0:e.isInProgress())||this.attemptCount>this.attemptCountSubmitted}showGoals(){this.hideOverview=!0,this.showGoalDetails=!0}hideGoals(){this.hideOverview=!1,this.showGoalDetails=!1}showRubricPanel(){this.showRubricDetails=!0,this.hideOverview=!0,this.notifyMobileApp(_.c.AssessmentStudentRubricOpened)}hideRubricPanel(){this.showRubricDetails=!1,this.hideOverview=!1,this.notifyMobileApp(_.c.AssessmentStudentRubricClosed)}openAttemptReview(e=!1){this.currentAttempt&&(this.contentData.gradingColumn.isMultipleAttempts()?this.ultraState.goPeekState(E.c.ASSESSMENT_MULTIPLE_ATTEMPTS_TAB,{columnId:this.contentData.gradingColumn.id,gradeId:this.contentData.gradeDetail.id,viewOriginalityReport:e,forceOpenFeedbackPanel:!e&&this.hasFeedback()}):this.ultraState.goPeekState(E.c.ASSESSMENT_ATTEMPT_REVIEW,{attemptId:this.currentAttempt.id,columnId:this.contentData.gradingColumn.id,viewOriginalityReport:e,forceOpenFeedbackPanel:!e&&this.hasFeedback()}))}openAttemptFeedback(e=!1){this.currentAttempt&&(this.contentData.gradingColumn.isMultipleAttempts()?this.ultraState.goPeekState(E.c.ASSESSMENT_MULTIPLE_ATTEMPTS_TAB,{columnId:this.contentData.gradingColumn.id,gradeId:this.contentData.gradeDetail.id,viewOriginalityReport:e,forceOpenFeedbackPanel:!e&&this.hasFeedback()}):this.ultraState.goPeekState(E.c.ASSESSMENT_ATTEMPT_REVIEW_FEEDBACK_TAB,{attemptId:this.currentAttempt.id,columnId:this.contentData.gradingColumn.id,viewOriginalityReport:e,forceOpenFeedbackPanel:!e&&this.hasFeedback()}))}openSafeAssign(){this.ultraState.goPeekState("attempt-safe-assign-setting",{submitToGRD:this.submitToGRD})}loadCollabConfig(){this.collabUltra.getCollabB2Info().then((e=>{200===e.$response.status?this.showCollabLink=!0:this.showCollabLink=!1}),(e=>{this.showCollabLink=!1})),!this.forumId&&this.content.attachedForumLink&&this.content.attachedForumLink["resource/x-bb-courselink"]&&this.course.contents.$find(this.content.attachedForumLink["resource/x-bb-courselink"].courseContent).$then((e=>{this.forumId=e.contentDetail["resource/x-bb-forumlink"].id}))}get shouldShowCollabLink(){return this.showCollabLink&&a.isDefined(this.forumId)&&this.collabUltraEnabled}launchCollabSession(){const e=window.open();this.collabUltra.launchDiscussionSession(this.content.courseId,this.forumId,this.content.assignedGroups[0].groupId).then((t=>{e.location.href=t.url}),(t=>{e.close(),t.$response.status=null}))}isSubmittedLate(){let e=this.latestAttemptDate;this.aggregationModelRelevantAttemptDate&&(e=this.contentData.gradeDetail&&!this.contentData.gradeDetail.isPosted()?this.latestAttemptDate:this.aggregationModelRelevantAttemptDate);const t=this.studentHasDueDateException?this.dueDateException.fixedDueDate:this.dueDate;return t&&e&&t.getTime()-e.getTime()<0&&!this.contentData.courseContent.hasDueDateException()}hasPastDueZero(){return this.contentData.gradeDetail&&this.contentData.gradeDetail.isPastDueZero()}showPastDueForDueDate(){return this.isSubmissionLate}hasFeedback(){return y.a.attemptHasFeedback(this.currentAttempt)||this.hasGroupIndividualFeedback()}hasGroupIndividualFeedback(){return!(!this.content.isGroupContent||!y.a.groupAttemptHasIndividualFeedback(this.currentAttempt))}get aggregationModelDescriptionKey(){const e=this.contentData.gradingColumn,t=Object(T.parseAttemptAggregationModel)(null==e?void 0:e.aggregationModel);return t?Object(T.getAttemptAggregationModelStudentLabelKey)(t):null}updateIndicators(){this.content&&this.contentService.fetchIndicators(this.content.courseId).then((()=>{const e=this.contentService.getCourseContentCache(this.content.courseId,this.content.id);e&&(this.hasClassIndicator=e.classConversationHasIndicator,this.hasGroupIndicator=!!e.groupIds)}))}getProctoringBrowserText(){return this.proctoring.getProctoringOverviewBrowserText(this.content)}getProctoringRequirementsText(){return this.proctoring.getProctoringOverviewRequirementsText(this.content)}getProctoringBrowserDownloadText(){return this.proctoring.getProctoringOverviewDownloadText(this.content)}get isPeerGrading(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.peerGrading}get numOfPeerReviewsToComplete(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.numOfPeerReviewsToComplete}get numOfPeerReviewsLeft(){return this.numOfPeerReviewsToComplete-this.completedPeerReviews}showPeerReviewHasBeenDeletedBanner(){return this.hasDeletedPeerReviews()&&!this.dismissPeerDeletedBanner}hasDeletedPeerReviews(){var e;return!!this.isPeerGrading&&(null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.hasDeletedAttempts)}numberOfLatePeerReviews(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.numberOfLatePeerReviews}hasEnoughSubmissionsForPeerAssessment(){var e,t;return null!==(t=null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.hasEnoughSubmissionsForPeerAssessment)&&void 0!==t&&t}canRetrieveNewPeerReview(){var e;return this.isAssessmentSubmissionComplete&&this.hasEnoughSubmissionsForPeerAssessment()&&(null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.isAfterPeerSubmissionDueDate())}get completedPeerReviews(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.completedPeerReviews}get peerReviewDueDate(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.peerReviewDueDate}get isAssessmentSubmissionComplete(){return!!(this.attemptCount&&this.attemptCount>0&&this.attemptCountSubmitted&&this.attemptCountSubmitted>0)}get shouldHaveLateAttemptClass(){return this.isOverdue&&this.showBeforeAttemptedFooter}get isSubmissionLate(){return!this.isAssessmentSubmissionComplete&&this.isOverdue||this.isSubmittedLate()}get allowLatePeerReviews(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.allowLatePeerReviews}get isPeerGradingConfigured(){var e;return null===(e=this.peerReviewContentObject)||void 0===e?void 0:e.isPeerGradingConfigured}get hasDueDateAccommodation(){return this.contextCourseMembership.isDueDateExcepted()}arePeerReviewsComplete(){return this.completedPeerReviews===this.numOfPeerReviewsToComplete}isPeerReviewsLate(){const e=this.context.getServerTime().getTime()>this.peerReviewDueDate.getTime();return!(!this.isPeerGrading||!e||this.hasDueDateAccommodation)&&(!this.arePeerReviewsComplete()||!(0===this.numberOfLatePeerReviews()))}get isGivenPasswordBlank(){return 0===this.givenPassword.length}onPasswordChange(){this.passwordErrorMessageKey=""}get deployedAssessment(){return this.content.getDeployedAssessment()}initAssessmentResultOptions(){this.initAssessmentResultOptionsVisibility();const e=this.getFeedbackOptionsToDisplay(),t=e.filter((e=>!1===this.assessmentResultOptionsVisibilityMap[e]||e===x.f.UserAnswers));this.assessmentService.getFeedbackModeLabels(t,this.deployedAssessment.deploymentSettings.feedbackSettings).then((s=>{this.assessmentResultOptions=e.map((e=>{const n=this.bbLocalize.getLocale(this.$scope),i=this.bbLocalize.translateSync({key:`${y.f}.${e}`,locale:n}),a=!0===this.assessmentResultOptionsVisibilityMap[e];let r,o=y.e[e].visible;if(a)if(this.isUserAnswersVisible())r=this.isOptionAvailableForGradedAttempts(e)?this.bbLocalize.translateSync({key:"course.content.assessment.overview.assessmentResults.availableForGradedAttempts",locale:n}):this.bbLocalize.translateSync({key:"course.content.assessment.overview.assessmentResults.availableNow",locale:n});else{const e=t.indexOf(x.f.UserAnswers);r=s[e]}else{o=y.e[e].invisible;const i=t.indexOf(e);r=s[i],null===r&&(r=this.bbLocalize.translateSync({key:y.c,locale:n}))}return{icon:o,modeLabel:r,option:e,optionLabel:i,visible:a}}))}))}getFeedbackOptionsToDisplay(){var e,t;const s=null===(t=null===(e=this.deployedAssessment)||void 0===e?void 0:e.deploymentSettings)||void 0===t?void 0:t.feedbackSettings;return y.d.filter((e=>{if(e===x.f.UserAnswers)return!0;const t=y.a.isFeedbackOptionEnabled(e,s),n=e===x.f.InstructorFeedback&&this.deployedAssessment.assessment.hasAutomatedQuestionFeedback;return t&&(e!==x.f.InstructorFeedback||n)}))}initAssessmentResultOptionsVisibility(){var e;const t=this.contentData.gradingColumn.scoreProviderHandle,s=this.currentAttempt.getToolAttemptDetailItem(t),n=null==s?void 0:s.questionAttempts[0];this.assessmentResultOptionsVisibilityMap={[x.f.UserAnswers]:this.getOptionVisibility(null==n?void 0:n.isResultVisible,x.f.UserAnswers),[x.f.InstructorFeedback]:null!==(e=null==n?void 0:n.isFeedbackVisible)&&void 0!==e&&e,[x.f.Score]:this.getOptionVisibility(null==n?void 0:n.isScoreVisible,x.f.Score),[x.f.CorrectAnswers]:this.getOptionVisibility(null==n?void 0:n.isCorrectAnswersVisible,x.f.CorrectAnswers)}}getOptionVisibility(e,t){return e?t!==x.f.Score&&t!==x.f.CorrectAnswers||this.isAtLeastOneAttemptCompleted:this.assessmentService.isAfterIndividualGradeIsPostedFeedbackMode(t,this.deployedAssessment.deploymentSettings.feedbackSettings)&&this.isAtLeastOneAttemptCompleted}shouldDisplayAssessmentResultsWarning(e){return this.assessmentService.isUserAnswersOption(e.option)&&this.isUserAnswersEnabled()&&this.getFeedbackOptionsToDisplay().length>1}isUserAnswersEnabled(){return y.a.isFeedbackOptionEnabled(x.f.UserAnswers,this.deployedAssessment.deploymentSettings.feedbackSettings)}isUserAnswersVisible(){return!0===this.assessmentResultOptionsVisibilityMap[x.f.UserAnswers]}isOptionAvailable(e){return e&&this.isUserAnswersVisible()}isOptionAvailableForGradedAttempts(e){return!(!this.allowMultipleAttempts||e===x.f.InstructorFeedback||this.areAllAttemptsCompleted)&&(e===x.f.UserAnswers?this.assessmentService.isAfterIndividualGradeIsPostedFeedbackMode(e,this.deployedAssessment.deploymentSettings.feedbackSettings):!this.assessmentService.isAfterAllGradesArePostedFeedbackMode(e,this.deployedAssessment.deploymentSettings.feedbackSettings))}get showAssessmentResults(){var e,t,s;const n=null===(t=null===(e=this.deployedAssessment)||void 0===e?void 0:e.assessment)||void 0===t?void 0:t.hasAnswerableQuestions;return(null===(s=this.currentAttempt)||void 0===s?void 0:s.isSubmitted())&&n}onAttemptCountComplete(){this.showAssessmentResults&&this.initAssessmentResultOptions()}get showExtraCreditPointsCard(){var e,t;return this.extraCreditPoints>0&&!this.showScoreCard&&!this.showPastDueForDueDate()&&(!this.attemptCountSubmitted&&!(null===(t=null===(e=this.contentData)||void 0===e?void 0:e.gradeDetail)||void 0===t?void 0:t.isPosted())||this.attemptCountSubmitted>0)}};J=Object(n.a)([Object(n.c)(0,Object(k.b)("contentData")),Object(n.c)(1,Object(k.b)("currentCourse")),Object(n.c)(2,Object(k.b)("$injector")),Object(n.c)(3,Object(k.b)("$ngRedux")),Object(n.c)(4,Object(k.b)("$scope")),Object(n.c)(5,Object(k.b)("$q")),Object(n.c)(6,Object(k.b)("$window")),Object(n.c)(7,Object(k.b)(c.f)),Object(n.c)(8,Object(k.b)(d.b)),Object(n.c)(9,Object(k.b)(h.n)),Object(n.c)(10,Object(k.b)(S.d)),Object(n.c)(11,Object(k.b)(l.d)),Object(n.c)(12,Object(k.b)(D.A.serviceName)),Object(n.c)(13,Object(k.b)(D.E.serviceName)),Object(n.c)(14,Object(k.b)(p.c)),Object(n.c)(15,Object(k.b)(A.b)),Object(n.c)(16,Object(k.b)(g.b)),Object(n.c)(17,Object(k.b)(m.b)),Object(n.c)(18,Object(k.b)(b.b)),Object(n.c)(19,Object(k.b)(O.serviceName)),Object(n.c)(20,Object(k.b)(C.b)),Object(n.c)(21,Object(k.b)(f.g)),Object(n.c)(22,Object(k.b)(o.b)),Object(n.c)(23,Object(k.b)(v.b)),Object(n.c)(24,Object(k.b)(u.d)),Object(n.c)(25,Object(k.b)(y.h)),Object(n.c)(26,Object(k.b)(j.b)),Object(n.c)(27,Object(k.b)(I.b)),Object(n.c)(28,Object(k.b)(L.b)),Object(n.c)(29,Object(k.b)(M.b)),Object(n.c)(30,Object(k.b)(w.b))],J);class Z extends J{}},nfUd:function(e,t,s){var n=s("ziER"),i=s("5JeM"),a=new n({id:"icon-medium-visible",use:"icon-medium-visible-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-visible"><circle cx="12" cy="12" r="2" stroke-width="2" /><path d="M12 6C7.1067 6 1 12 1 12s6.1067 6 11 6 11-6 11-6-6.1067-6-11-6z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});i.add(a);e.exports=a},zIKm:function(e,t,s){var n=s("ziER"),i=s("5JeM"),a=new n({id:"icon-medium-time-limit",use:"icon-medium-time-limit-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-time-limit"><path d="M5 1l6 11-6 11M19 1l-6 11 6 11M4 1h16M4 23h16" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});i.add(a);e.exports=a}}]);