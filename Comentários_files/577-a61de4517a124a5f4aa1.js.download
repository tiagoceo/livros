(window.webpackJsonp=window.webpackJsonp||[]).push([[577,736],{"2tKw":function(e,t){e.exports='<div class="rubric-list" bb-load-bundle="components/directives/rubric/rubric-list">\n  <div class="association-header" ng-if="::$ctrl.enableRubricAssociation">\n    <div class="header-title-container row">\n      <div class="header-title" bb-translate>\n        components.directives.rubric.list.heading\n      </div>\n    </div>\n    <div class="header-first-description" bb-translate>\n      components.directives.rubric.list.firstParagraphDescription\n    </div>\n    <div class="header-second-description-holder" ng-if="$ctrl.showCompleteDescription">\n      <div class="header-second-description" bb-translate>\n        components.directives.rubric.list.secondParagraphDescription\n      </div>\n      <a bb-translate-attrs="{\'href\': \'components.directives.rubric.list.linkHref\'}"\n         target="_blank"\n         rel="help"\n         analytics-id="components.directives.rubric.list.learnMoreLink"\n         bb-translate>\n         components.directives.rubric.list.learnMoreLink\n      </a>\n    </div>\n    <div class="toggleDescription">\n      <button class="button--text"\n              type="button"\n              ng-if="!$ctrl.showCompleteDescription"\n              aria-labelledby="rubric-list-show-description"\n              ng-click="$ctrl.toggleDescription()"\n              analytics-id="components.directives.rubric.list.showDescription.button">\n        <span id="rubric-list-show-description" bb-translate>components.directives.rubric.list.showMore</span>\n      </button>\n      <button class="button--text"\n              type="button"\n              ng-if="$ctrl.showCompleteDescription"\n              aria-labelledby="rubric-list-hide-description"\n              ng-click="$ctrl.toggleDescription()"\n              analytics-id="components.directives.rubric.list.hideDescription.button">\n        <span id="rubric-list-hide-description" bb-translate>components.directives.rubric.list.showLess</span>\n      </button>\n    </div>\n  </div>\n  <div class="row collapse js-rubric-create-button-wrapper hide-for-small-only" ng-if="$ctrl.editable">\n    <div class="columns medium-12 large-12">\n      <button class="button button--dashed -full-width rubric-create-button"\n              aria-labelledby="rubric-create-rubric-button"\n              bb-peek-sref="rubric.mode({mode: \'create\'})"\n              type="button"\n              bb-translate\n              analytics-id="components.directives.rubric.list.create.button"\n              ng-class="::$ctrl.enableRubricAssociation ? \'rubric-create-button-association\' : \'rubric-create-button-gradebook\'">\n        <span id="rubric-create-rubric-button" bb-translate>components.directives.rubric.list.create</span>\n      </button>\n    </div>\n  </div>\n\n  <div class="rubric-create-disabled-message" ng-show="!$ctrl.rubrics.length" bb-translate>\n    components.directives.rubric.list.createDisabled\n  </div>\n\n  <div class="rubric-view-message" ng-if="!$ctrl.hasViewAccess" bb-translate>\n    components.directives.rubric.settings.unavailable.view\n  </div>\n\n  <div ng-show="$ctrl.rubrics.length > 0">\n    <div ng-if="::!$ctrl.enableRubricAssociation" class="rubric-list-heading row" bb-translate>\n      components.directives.rubric.list.heading\n    </div>\n\n    <div class="list-container">\n      \x3c!-- Rubric Association --\x3e\n      <div ng-if="::$ctrl.enableRubricAssociation" ng-repeat="rubric in $ctrl.rubrics"\n           class="row element-list-row js-rubric-id-{{rubric.id}} association-enabled">\n        <div class="rubric-list-association-item">\n          <div class="item-left-side">\n            <div ng-if="$ctrl._rubricService.isPointsOrPointsRangeRubric(rubric)">\n              <span class="item-rubric-title"\n                    id="name-rubric-{{::rubric.id}}"\n                    title="{{ rubric.title }}"\n                    aria-hidden="true">\n                {{ rubric.title }}\n              </span>\n              <span class="item-rubric-type"\n                    id="possible-points-{{::rubric.id}}"\n                    aria-hidden="true"\n                    translate-values="{ points: {{$ctrl.getPointsRubricMaxScore(rubric)}} }"\n                    bb-translate>\n                    components.directives.rubric.list.pointsType\n              </span>\n              <div class="item-rubric-checkbox">\n                <input type="checkbox"\n                       id="rubric-list-checkbox-{{::rubric.id}}"\n                       name="rubric-list-checkbox-{{::rubric.id}}"\n                       aria-labelledby="name-rubric-{{::rubric.id}}"\n                       aria-describedby="possible-points-{{::rubric.id}} use-rubric-{{::rubric.id}}"\n                       ng-change="$ctrl.pointsCheckboxTrigger(rubric.id, checked)"\n                       ng-model="checked"\n                       analytics-id="components.directives.rubric.list.input.checkbox"/>\n                <label class="inline-form-label"\n                       id="use-rubric-{{::rubric.id}}"\n                       aria-hidden="true"\n                       for="rubric-list-checkbox-{{::rubric.id}}">\n                  <bb-translate>components.directives.rubric.list.pointsCheckbox</bb-translate>\n                </label>\n              </div>\n            </div>\n            <div ng-if="$ctrl._rubricService.isPercentageOrPercentageRangeRubric(rubric)">\n              <span class="item-rubric-title" title="{{ rubric.title }}" aria-hidden="true">\n                {{ rubric.title }}\n              </span>\n              <span class="item-rubric-type"\n                    aria-hidden="true"\n                    bb-translate>\n                    components.directives.rubric.list.percentageType\n              </span>\n            </div>\n          </div>\n          <div class="item-right-side">\n            <button class="button rubric-item-view-button button--text"\n                    bb-peek-sref="rubric.mode({rubricId: rubric.id, mode: \'edit\'})"\n                    type="button"\n                    aria-labelledby="rubric-add-button-{{rubric.id}}"\n                    analytics-id="components.directives.rubric.list.useRubric.button">\n              <span bb-translate>global.view</span>\n              <span class="sr-only"\n                    id="rubric-add-button-{{rubric.id}}"\n                    bb-translate\n                    translate-values="{title: rubric.title}">\n                    components.directives.rubric.list.viewRubric\n              </span>\n            </button>\n            <button class="button rubric-item-add-button button--text"\n                    type="button"\n                    ng-click="$ctrl.associateRubric(rubric)"\n                    aria-labelledby="rubric-view-button-{{rubric.id}}"\n                    analytics-id="components.directives.rubric.list.viewRubric.button">\n              <span bb-translate>components.directives.rubric.list.add</span>\n              <span class="sr-only"\n                    id="rubric-view-button-{{rubric.id}}"\n                    bb-translate\n                    translate-values="{title: rubric.title}">\n                    components.directives.rubric.list.useRubric\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      \x3c!-- Gradebook Settings --\x3e\n      <div ng-if="::!$ctrl.enableRubricAssociation" ng-repeat="rubric in $ctrl.rubrics"\n           class="rubric-list-item row element-list-row js-rubric-id-{{rubric.id}}">\n\n        <button class="rubric-info-button button-anchor super-clear" bb-peek-sref="rubric.mode({rubricId: rubric.id, mode: \'edit\'})"\n                type="button" aria-labelledby="rubric-title-button-{{rubric.id}}" analytics-id="components.directives.rubric.list.viewRubric.button">\n          <div class="rubric-info">\n            <span class="rubric-icon" aria-hidden="true"\n                  bb-translate-attrs="{\'title\': \'components.directives.rubric.list.tooltip.edit\'}">\n              <bb-ui-icon-large-rubric color="primary"></bb-ui-icon-large-rubric>\n            </span>\n            <span class="rubric-title ellipsis" title="{{ rubric.title }}" aria-hidden="true">\n              {{ rubric.title }}\n            </span>\n            <span class="sr-only" id="rubric-title-button-{{rubric.id}}" bb-translate translate-values="{title: rubric.title}">components.directives.rubric.list.viewRubric</span>\n          </div>\n        </button>\n\n        <div bb-foundation-defer>\n          <bb-overflow-menu element-id="{{\'rubric-overflow-\' + rubric.id}}"\n                            menu-items="$ctrl.getOverflowMenuItems(rubric)"\n                            delete-options="$ctrl.getDeleteMenuOption(rubric)"\n                            ng-if="!$ctrl.course.isComplete()"\n                            analytics-id-tag-prefix="components.directives.rubric.list.overflowMenu">\n          </bb-overflow-menu>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},IjED:function(e,t,i){"use strict";i.d(t,"a",(function(){return s})),i.d(t,"b",(function(){return c}));var r=i("nsO7"),n=i("TnpK");const s="ultra.services.slideoutPanel",c="slideoutPanel";var o;!function(e){e.RubricEvaluation="rubric-evaluation",e.RubricView="rubric-view",e.AssessmentSubmissionFeedback="assessment-submission-feedback",e.DiscussionFeedback="discussion-feedback"}(o||(o={}));class a{constructor(e){this.ultraState=e,this.slideoutPanelIsOpen=!1,this.getMostRecentPanelState=e=>e.split(".").pop(),this.isPanelClosing=(e,t)=>this._doesStateRequireSlidePanel(this.getMostRecentPanelState(e))&&!this._doesStateRequireSlidePanel(this.getMostRecentPanelState(t)),this.setSlideoutPanelState=()=>{this.slideoutPanelIsOpen=this._doesStateRequireSlidePanel(this.getMostRecentPanelState(this.ultraState.current.name))},this.isOpen=()=>(this.setSlideoutPanelState(),this.slideoutPanelIsOpen),this.setSlideoutPanelState()}isRubricState(){return this.getMostRecentPanelState(this.ultraState.current.name)===o.RubricEvaluation||this.getMostRecentPanelState(this.ultraState.current.name)===o.RubricView}_doesStateRequireSlidePanel(e){return r.some(Object.values(o),(t=>e===t))}}a.$inject=[n.d];angular.module(s,[]).service(c,a)},OFW5:function(e,t,i){"use strict";i.r(t);i("h3DF");var r=i("Llzl"),n=i("bd9L"),s=i("Fvsw"),c=i("zEHu"),o=i("D57K"),a=i("5KgE"),l=i("aHpC");const b="ultra.course.grades.controller";let u=class{constructor(e,t,i,r){if(this.$scope=e,this.course=t,this.firstTimeHelper=i,this.stateParams=r,e.courseGrades=this,e.course)if(e.course.membership.isStudentMembership()){const i=t.isOrganization?"organization":"course";e.course.headerKey=`${i}.grades.studentHeaderLabel`}else e.course.headerKey="course.grades.instructorHeaderLabel";i.fadeAddContentButton(e,"grades.grader.course.column.add")}};u=Object(o.a)([Object(o.c)(0,Object(l.b)("$scope")),Object(o.c)(1,Object(l.b)("currentCourse")),Object(o.c)(2,Object(l.b)(a.c)),Object(o.c)(3,Object(l.b)("$stateParams"))],u);var d=i("fGDP"),p=i("8MYS"),h=i("Ij+l"),m=i("8HGT"),v=i("UiBk"),g=i("X6r5"),w=i("IjED"),f=i("eAkB"),R=i("ovwO"),S=i("0JpG"),O=i("1ZbL");const y="ultra.course.grades.gradebook-item.download-test-result-panel",P={Class:i("ZQFV").f,bindingNames:["courseId","columnId","courseName","isOrganization"],renderLocalized:!0};r.module(y,[S.moduleName]).component("bbDownloadTestResultPanel",Object(O.a)(P)),i.d(t,"moduleName",(function(){return $})),i.d(t,"controllerName",(function(){return j})),i.d(t,"template",(function(){return f}));const $="ultra.course.grades",j=b;r.module($,[n.g,s.a,c.a,d.c,p.a,h.a,a.b,m.a,v.a,g.a,w.a,y,R.moduleName]).controller(b,u)},UsDD:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var r=i("zYa8"),n=i("fewm");const s="ultra.components.directives.bbUiIcon.large.Rubric";Object(r.a)(n.a,s,"bbUiIconLargeRubric")},X6r5:function(e,t,i){"use strict";var r=i("D57K"),n=(i("smDF"),i("dV61"),i("Ybms"),i("nsO7")),s=i("Sa5G"),c=i("jhBu"),o=i("8W6D"),a=i("pjml"),l=i("0JpG"),b=i("TnpK"),u=i("gkef"),d=i("5KgE"),p=i("p7NW"),h=i("g66W"),m=i("zGdY"),v=i("aHpC"),g=i("UsDD"),w=i("ZQFV"),f=i("yC9S"),R=i("2tKw");i.d(t,"a",(function(){return S}));const S="ultra.components.directives.rubric.rubricList",O="NEW_BADGE_COMPONENT_KEY";let y=class{constructor(e,t,i,r,n,s,c,o,a,l){this.element=e,this.$rootScope=t,this.$scope=i,this.CourseModel=r,this.bbLocalize=n,this.ultraState=s,this.windowSize=c,this.entitlements=o,this.firstTimeHelper=a,this._rubricService=l,this.enableRubricAssociation=!1,this.editable=!1,this.hasViewAccess=!1,this.showCompleteDescription=!1,this.rubricIdList=[],this.contextArea="rubrics",this.shouldShowNewBadge=!1,i.rubricList=this}$onInit(){const e={sort:"title(asc)",limit:1e3,expand:"columnHeaders,rows"};this.CourseModel.$new(this.course.id).rubrics.$fetch(e).$allow(["403"]).$asPromise().then((e=>this.handleRubricResponse(e))),this.destroyRubricSaveListener=this.$rootScope.$on("rubric-save",((t,i)=>{this.course.rubrics.$refresh(e).$allow(["403"]).$asPromise().then((e=>this.handleRubricResponse(e)))})),this.entitlements.hasCourseEntitlement(s.l.ViewRubrics,this.course.id).then((e=>{this.hasViewAccess=e})),this.setShouldShowBadge()}handleRubricResponse(e){403!==e.$response.status&&(this.rubrics=e)}$onDestroy(){if(this.destroyRubricSaveListener(),this.shouldShowNewBadge){const e=Object(h.a)(O,d.a);this.firstTimeHelper.hide(e)}}getOverflowMenuItems(e){return[{icon:"duplicate",labelKey:"components.directives.rubric.list.tooltip.duplicate",show:()=>e.permissions&&e.permissions.edit&&!this.windowSize.isSmallBreakpoint(),onClick:this.copyRubric.bind(this,e),ariaLabel:()=>this.bbLocalize.translateSync({locale:this.course.getLocale()||this.bbLocalize.getAppLocale(),key:"components.directives.rubric.list.copyRubric",params:{title:e.title},noWrap:!0})}]}getDeleteMenuOption(e){const t=(e.readOnly||e.associated)&&e.canDelete(),i=t?"components.directives.rubric.list.deleteInUseRubric.title":"components.directives.rubric.list.deleteRubric.title",r=t?"components.directives.rubric.list.deleteInUseRubric.instructions":"components.directives.rubric.list.deleteRubric.instructions",n=t?"components.directives.rubric.list.deleteInUseRubric.label":"components.directives.rubric.list.deleteRubric.label";return{show:()=>e.canDelete(),onClick:this.deleteRubric.bind(this,e,t),confirmationOptions:{titleKey:i,instructionsKey:r},ariaLabel:()=>this.bbLocalize.translateSync({locale:this.course.getLocale()||this.bbLocalize.getAppLocale(),key:n,params:{title:e.title},noWrap:!0})}}setShouldShowBadge(){const e=this.element.closest(".bb-offcanvas-panel").attr("data-base-state-name"),t=Object(h.a)(O,d.a);this.firstTimeHelper.shouldShow(t,e,!1).then((e=>{this.shouldShowNewBadge=e}))}pointsCheckboxTrigger(e,t){t?this.rubricIdList.push(e):this.rubricIdList.splice(this.rubricIdList.indexOf(e),1)}associateRubric(e){if(this.rubricAssociationHandler&&this.rubricIdList.includes(e.id)){const t=this.getPointsRubricMaxScore(e),i=Math.min(w.P.GRADE_MAX_POINTS,t);this.rubricAssociationHandler({rubric:e,maxPoints:i})}else this.rubricAssociationHandler&&this.rubricAssociationHandler({rubric:e})}toggleDescription(){this.showCompleteDescription=!this.showCompleteDescription}getPointsRubricMaxScore(e){if(null==e.rows||this._rubricService.isPercentageOrPercentageRangeRubric(e))return 0;const t=e.rubricType===m.Zb.POINTS?m.Zb.POINTS:m.Zb.POINTS_RANGE;e.rows.forEach(((e,i)=>{this.setMaxRowPoints(e,t)}));const i=e.rows.filter((e=>n.isFinite(e.rowPoints))).reduce(((e,t)=>e+t.rowPoints),0);return parseFloat(w.P.parseGradeValue(i))}setMaxRowPoints(e,t){if(n.isFinite(e.rowPoints)||null==e.cells)return;let i=0;e.cells.forEach((e=>{const r=t===m.Zb.POINTS?e.numericPoints:e.endPointRange;void 0!==r&&!Number.isNaN(r)&&r>i&&(i=r)})),e.rowPoints=i}copyRubric(e){this.ultraState.goPeekState("rubric.mode",{rubricId:e.id,mode:o.a.Copy})}deleteRubric(e,t){t?e.withParams({cascade:!0}).$destroy():e.$destroy()}};y=Object(r.a)([Object(f.a)({moduleName:S,componentName:"bbRubricList",template:R,bindings:{course:"<",enableRubricAssociation:"<?",rubricAssociationHandler:"&?",editable:"<?"},requireModules:[b.b,u.a,g.a,p.f]}),Object(r.c)(0,Object(v.b)("$element")),Object(r.c)(1,Object(v.b)("$rootScope")),Object(r.c)(2,Object(v.b)("$scope")),Object(r.c)(3,Object(v.b)(a.m.serviceName)),Object(r.c)(4,Object(v.b)(l.serviceName)),Object(r.c)(5,Object(v.b)(b.d)),Object(r.c)(6,Object(v.b)(u.b)),Object(r.c)(7,Object(v.b)(c.b)),Object(r.c)(8,Object(v.b)(d.c)),Object(r.c)(9,Object(v.b)(p.g))],y)},eAkB:function(e,t){e.exports='<div class="guidance-wrapper gradebook-panel" bb-cache-compilation="course-grades">\n  <div class="grader-view" bb-course-entitlement="course.gradebook-metadata.VIEW" course-id="courseGrades.course.id">\n    <bb-course-grades-grader></bb-course-grades-grader>\n  </div>\n  <div class="student-view" bb-course-entitlement="course.gradebook-metadata.VIEW" course-id="courseGrades.course.id"\n       entitlement-action="hide">\n    <bb-course-grades-student course-grades="courseGrades" is-user-student="true"/>\n  </div>\n\n  <div ui-view="grades-panel-base"></div>\n</div>\n'},h3DF:function(e,t,i){},ovwO:function(e,t,i){"use strict";i.r(t),i.d(t,"moduleName",(function(){return c})),i.d(t,"directiveName",(function(){return o}));var r=i("Llzl"),n=i("ZQFV"),s=i("1ZbL");const c="ultra.components.directives.grade.gradableItemExempt",o="gradableItemExemptSettings",a={Class:n.l,bindingNames:[],renderLocalized:!0,withProvider:!0};r.module(c,[]).component(o,Object(s.a)(a))},smDF:function(e,t,i){var r=i("ziER"),n=i("5JeM"),s=new r({id:"icon-medium-add-circle",use:"icon-medium-add-circle-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-add-circle"><circle cx="12" cy="12" r="11" stroke-width="2" /><path d="M12 7v10M7 12h10" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});n.add(s);e.exports=s},zEHu:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var r=i("Llzl"),n=i("jhBu");const s="ultra.components.directives.courseEntitlement";class c{constructor(e,t){this.$entitlementService=e,this.ngIfDirective=t,this.scope={bbCourseEntitlement:"@",courseId:"@",entitlementAction:"@",showContents:"@"},this.restrict=this.ngIfDirective[0].restrict,this.priority=this.ngIfDirective[0].priority,this.transclude=this.ngIfDirective[0].transclude,this.terminal=this.ngIfDirective[0].terminal,this.link=(e,t,i,r,n)=>{i.ngIf="::showContents";this.ngIfDirective[0].compile(t,i,void 0)(e,t,i,r,n);let s,c=!0;if(e.entitlementAction&&"hide"===e.entitlementAction.toLowerCase()&&(c=!1),!e.bbCourseEntitlement)throw e.showContents=!1,new Error("No entitlementUid has been provided");s=e.bbCourseEntitlement;const o=e.$parent.$watch(e.courseId,(t=>{t&&(this.$entitlementService.hasCourseEntitlement(s,t).then((t=>{e.showContents=c===t}),(t=>{e.showContents=!1})),o())}))}}}c.$inject=[n.b,"ngIfDirective","$parse"],r.module(s,[n.a]).directive("bbCourseEntitlement",["$injector",e=>e.instantiate(c)])}}]);