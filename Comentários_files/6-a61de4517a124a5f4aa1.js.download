(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"2tKw":function(i,t){i.exports='<div class="rubric-list" bb-load-bundle="components/directives/rubric/rubric-list">\n  <div class="association-header" ng-if="::$ctrl.enableRubricAssociation">\n    <div class="header-title-container row">\n      <div class="header-title" bb-translate>\n        components.directives.rubric.list.heading\n      </div>\n    </div>\n    <div class="header-first-description" bb-translate>\n      components.directives.rubric.list.firstParagraphDescription\n    </div>\n    <div class="header-second-description-holder" ng-if="$ctrl.showCompleteDescription">\n      <div class="header-second-description" bb-translate>\n        components.directives.rubric.list.secondParagraphDescription\n      </div>\n      <a bb-translate-attrs="{\'href\': \'components.directives.rubric.list.linkHref\'}"\n         target="_blank"\n         rel="help"\n         analytics-id="components.directives.rubric.list.learnMoreLink"\n         bb-translate>\n         components.directives.rubric.list.learnMoreLink\n      </a>\n    </div>\n    <div class="toggleDescription">\n      <button class="button--text"\n              type="button"\n              ng-if="!$ctrl.showCompleteDescription"\n              aria-labelledby="rubric-list-show-description"\n              ng-click="$ctrl.toggleDescription()"\n              analytics-id="components.directives.rubric.list.showDescription.button">\n        <span id="rubric-list-show-description" bb-translate>components.directives.rubric.list.showMore</span>\n      </button>\n      <button class="button--text"\n              type="button"\n              ng-if="$ctrl.showCompleteDescription"\n              aria-labelledby="rubric-list-hide-description"\n              ng-click="$ctrl.toggleDescription()"\n              analytics-id="components.directives.rubric.list.hideDescription.button">\n        <span id="rubric-list-hide-description" bb-translate>components.directives.rubric.list.showLess</span>\n      </button>\n    </div>\n  </div>\n  <div class="row collapse js-rubric-create-button-wrapper hide-for-small-only" ng-if="$ctrl.editable">\n    <div class="columns medium-12 large-12">\n      <button class="button button--dashed -full-width rubric-create-button"\n              aria-labelledby="rubric-create-rubric-button"\n              bb-peek-sref="rubric.mode({mode: \'create\'})"\n              type="button"\n              bb-translate\n              analytics-id="components.directives.rubric.list.create.button"\n              ng-class="::$ctrl.enableRubricAssociation ? \'rubric-create-button-association\' : \'rubric-create-button-gradebook\'">\n        <span id="rubric-create-rubric-button" bb-translate>components.directives.rubric.list.create</span>\n      </button>\n    </div>\n  </div>\n\n  <div class="rubric-create-disabled-message" ng-show="!$ctrl.rubrics.length" bb-translate>\n    components.directives.rubric.list.createDisabled\n  </div>\n\n  <div class="rubric-view-message" ng-if="!$ctrl.hasViewAccess" bb-translate>\n    components.directives.rubric.settings.unavailable.view\n  </div>\n\n  <div ng-show="$ctrl.rubrics.length > 0">\n    <div ng-if="::!$ctrl.enableRubricAssociation" class="rubric-list-heading row" bb-translate>\n      components.directives.rubric.list.heading\n    </div>\n\n    <div class="list-container">\n      \x3c!-- Rubric Association --\x3e\n      <div ng-if="::$ctrl.enableRubricAssociation" ng-repeat="rubric in $ctrl.rubrics"\n           class="row element-list-row js-rubric-id-{{rubric.id}} association-enabled">\n        <div class="rubric-list-association-item">\n          <div class="item-left-side">\n            <div ng-if="$ctrl._rubricService.isPointsOrPointsRangeRubric(rubric)">\n              <span class="item-rubric-title"\n                    id="name-rubric-{{::rubric.id}}"\n                    title="{{ rubric.title }}"\n                    aria-hidden="true">\n                {{ rubric.title }}\n              </span>\n              <span class="item-rubric-type"\n                    id="possible-points-{{::rubric.id}}"\n                    aria-hidden="true"\n                    translate-values="{ points: {{$ctrl.getPointsRubricMaxScore(rubric)}} }"\n                    bb-translate>\n                    components.directives.rubric.list.pointsType\n              </span>\n              <div class="item-rubric-checkbox">\n                <input type="checkbox"\n                       id="rubric-list-checkbox-{{::rubric.id}}"\n                       name="rubric-list-checkbox-{{::rubric.id}}"\n                       aria-labelledby="name-rubric-{{::rubric.id}}"\n                       aria-describedby="possible-points-{{::rubric.id}} use-rubric-{{::rubric.id}}"\n                       ng-change="$ctrl.pointsCheckboxTrigger(rubric.id, checked)"\n                       ng-model="checked"\n                       analytics-id="components.directives.rubric.list.input.checkbox"/>\n                <label class="inline-form-label"\n                       id="use-rubric-{{::rubric.id}}"\n                       aria-hidden="true"\n                       for="rubric-list-checkbox-{{::rubric.id}}">\n                  <bb-translate>components.directives.rubric.list.pointsCheckbox</bb-translate>\n                </label>\n              </div>\n            </div>\n            <div ng-if="$ctrl._rubricService.isPercentageOrPercentageRangeRubric(rubric)">\n              <span class="item-rubric-title" title="{{ rubric.title }}" aria-hidden="true">\n                {{ rubric.title }}\n              </span>\n              <span class="item-rubric-type"\n                    aria-hidden="true"\n                    bb-translate>\n                    components.directives.rubric.list.percentageType\n              </span>\n            </div>\n          </div>\n          <div class="item-right-side">\n            <button class="button rubric-item-view-button button--text"\n                    bb-peek-sref="rubric.mode({rubricId: rubric.id, mode: \'edit\'})"\n                    type="button"\n                    aria-labelledby="rubric-add-button-{{rubric.id}}"\n                    analytics-id="components.directives.rubric.list.useRubric.button">\n              <span bb-translate>global.view</span>\n              <span class="sr-only"\n                    id="rubric-add-button-{{rubric.id}}"\n                    bb-translate\n                    translate-values="{title: rubric.title}">\n                    components.directives.rubric.list.viewRubric\n              </span>\n            </button>\n            <button class="button rubric-item-add-button button--text"\n                    type="button"\n                    ng-click="$ctrl.associateRubric(rubric)"\n                    aria-labelledby="rubric-view-button-{{rubric.id}}"\n                    analytics-id="components.directives.rubric.list.viewRubric.button">\n              <span bb-translate>components.directives.rubric.list.add</span>\n              <span class="sr-only"\n                    id="rubric-view-button-{{rubric.id}}"\n                    bb-translate\n                    translate-values="{title: rubric.title}">\n                    components.directives.rubric.list.useRubric\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      \x3c!-- Gradebook Settings --\x3e\n      <div ng-if="::!$ctrl.enableRubricAssociation" ng-repeat="rubric in $ctrl.rubrics"\n           class="rubric-list-item row element-list-row js-rubric-id-{{rubric.id}}">\n\n        <button class="rubric-info-button button-anchor super-clear" bb-peek-sref="rubric.mode({rubricId: rubric.id, mode: \'edit\'})"\n                type="button" aria-labelledby="rubric-title-button-{{rubric.id}}" analytics-id="components.directives.rubric.list.viewRubric.button">\n          <div class="rubric-info">\n            <span class="rubric-icon" aria-hidden="true"\n                  bb-translate-attrs="{\'title\': \'components.directives.rubric.list.tooltip.edit\'}">\n              <bb-ui-icon-large-rubric color="primary"></bb-ui-icon-large-rubric>\n            </span>\n            <span class="rubric-title ellipsis" title="{{ rubric.title }}" aria-hidden="true">\n              {{ rubric.title }}\n            </span>\n            <span class="sr-only" id="rubric-title-button-{{rubric.id}}" bb-translate translate-values="{title: rubric.title}">components.directives.rubric.list.viewRubric</span>\n          </div>\n        </button>\n\n        <div bb-foundation-defer>\n          <bb-overflow-menu element-id="{{\'rubric-overflow-\' + rubric.id}}"\n                            menu-items="$ctrl.getOverflowMenuItems(rubric)"\n                            delete-options="$ctrl.getDeleteMenuOption(rubric)"\n                            ng-if="!$ctrl.course.isComplete()"\n                            analytics-id-tag-prefix="components.directives.rubric.list.overflowMenu">\n          </bb-overflow-menu>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},HApu:function(i,t,e){var s=e("ziER"),r=e("5JeM"),n=new s({id:"icon-medium-rubric",use:"icon-medium-rubric-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-rubric"><path stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M19 5h4v4h-4zM11 5h4v4h-4zM19 12h4v4h-4zM11 12h4v4h-4zM19 19h4v4h-4zM11 19h4v4h-4zM19 1h4M11 1h4M1 8h4M1 15h4M1 22h4M1 5h6M1 12h6M1 19h6" /></symbol>'});r.add(n);i.exports=n},MYrX:function(i,t){i.exports='<div class="rubric-settings" bb-load-bundle="components/directives/rubric/rubric-settings">\n  <div class="rubric-settings-controls" ng-switch="isDisabled() || !rubricSettings.hasRubricPermissions">\n    <div class="tool-icon">\n      <bb-svg-icon size="medium" icon="rubric"></bb-svg-icon>\n    </div>\n    <div ng-switch-when="true">\n      <div class="tool-text no-active-rubric-container">\n        <span class="settings-label" bb-translate>components.directives.rubric.settings.gradingRubric</span>\n        <div class="text toggle-rubric-list permissions-text">\n          <span bb-translate>components.directives.rubric.settings.unavailable.permission</span>\n        </div>\n      </div>\n    </div>\n    <div ng-switch-default>\n      <div class="tool-text no-active-rubric-container" ng-show="!rubricSettings.rubric">\n        <span class="settings-label" bb-translate>components.directives.rubric.settings.useRubric</span>\n        <button class="button button--text toggle-rubric-list settings-link" ng-click="rubricSettings.toggleRubricList()" ng-if="!contentHasQuestions()"\n                bb-translate-attrs="{\'aria-label\':\'components.directives.rubric.settings.addRubric\'}" bb-translate type="button" analytics-id="components.directives.rubric.settings.addRubric">\n          components.directives.rubric.settings.addRubric\n        </button>\n\n        \x3c!-- tabindex added because field is normally interactive. See LRN-118128 --\x3e\n        <div class="text toggle-rubric-list cant-add-rubric-text"\n             ng-if="contentHasQuestions()"\n             ng-switch="rubricSettings.columnIsAssignmentCategory()">\n          <span ng-switch-when="true">\n            <span bb-translate>components.directives.rubric.settings.unavailable.assignment</span>\n          </span>\n          <span ng-switch-default>\n            <span bb-translate>components.directives.rubric.settings.unavailable.assessment</span>\n          </span>\n        </div>\n      </div>\n      <div class="tool-text rubric-item  js-rubric-id-{{ rubricSettings.rubric.id }} large-12 medium-12 small-10 rubric-item--width" ng-show="rubricSettings.rubric">\n        <span class="settings-label rubric-title" bb-translate>\n          components.directives.rubric.settings.gradingRubric\n        </span>\n        <span class="settings-link rubric-title">\n          <a class="rubric-title__text" bb-peek-sref="rubric.mode({rubricId: rubricSettings.rubric.id, mode: \'edit\'})" analytics-id="components.directives.rubric.settings.tooltip.title.link">{{ rubricSettings.rubric.title }}</a>\n        </span>\n      </div>\n      <div ng-if="rubricSettings.rubric">\n        <button ng-if="rubricSettings.hasRubricEvals"\n                bb-confirmation-needed="x-bb-rubric-delete-association"\n                show-type="always"\n                class="remove-active-rubric super-clear svg-icon-button medium"\n                ng-click="rubricSettings.removeActiveRubric($event)" tabindex="0"\n                bb-translate-attrs="{\'aria-label\':\'components.directives.rubric.settings.removeRubric\', \'title\': \'components.directives.rubric.settings.tooltip.remove\'}"\n                type="button" analytics-id="components.directives.rubric.settings.tooltip.remove.button">\n          <bb-svg-icon size="small" icon="trash"></bb-svg-icon>\n        </button>\n        <button ng-if="!rubricSettings.hasRubricEvals"\n                class="remove-active-rubric super-clear svg-icon-button medium js-remove-evaluation"\n                ng-click="rubricSettings.removeActiveRubric($event)" tabindex="0"\n                bb-translate-attrs="{\'aria-label\':\'components.directives.rubric.settings.removeRubric\', \'title\': \'components.directives.rubric.settings.tooltip.remove\'}"\n                type="button" analytics-id="components.directives.rubric.settings.tooltip.remove.button">\n          <bb-svg-icon size="small" icon="trash"></bb-svg-icon>\n        </button>\n      </div>\n      <span class="rubric-extra-info" ng-if="rubricSettings.getPeerGradingInfo() != null">\n        <span class="restriction" ng-if="rubricSettings.getPeerGradingInfo() === \'peerGrading\'" bb-translate>components.directives.rubric.settings.extraInfo.peerGrading</span>\n      </span>\n    </div>\n  </div>\n</div>\n'},UsDD:function(i,t,e){"use strict";e.d(t,"a",(function(){return n}));var s=e("zYa8"),r=e("fewm");const n="ultra.components.directives.bbUiIcon.large.Rubric";Object(s.a)(r.a,n,"bbUiIconLargeRubric")},X6r5:function(i,t,e){"use strict";var s=e("D57K"),r=(e("smDF"),e("dV61"),e("Ybms"),e("nsO7")),n=e("Sa5G"),c=e("jhBu"),o=e("8W6D"),a=e("pjml"),b=e("0JpG"),u=e("TnpK"),l=e("gkef"),d=e("5KgE"),h=e("p7NW"),p=e("g66W"),m=e("zGdY"),g=e("aHpC"),v=e("UsDD"),w=e("ZQFV"),R=e("yC9S"),f=e("2tKw");e.d(t,"a",(function(){return $}));const $="ultra.components.directives.rubric.rubricList",y="NEW_BADGE_COMPONENT_KEY";let C=class{constructor(i,t,e,s,r,n,c,o,a,b){this.element=i,this.$rootScope=t,this.$scope=e,this.CourseModel=s,this.bbLocalize=r,this.ultraState=n,this.windowSize=c,this.entitlements=o,this.firstTimeHelper=a,this._rubricService=b,this.enableRubricAssociation=!1,this.editable=!1,this.hasViewAccess=!1,this.showCompleteDescription=!1,this.rubricIdList=[],this.contextArea="rubrics",this.shouldShowNewBadge=!1,e.rubricList=this}$onInit(){const i={sort:"title(asc)",limit:1e3,expand:"columnHeaders,rows"};this.CourseModel.$new(this.course.id).rubrics.$fetch(i).$allow(["403"]).$asPromise().then((i=>this.handleRubricResponse(i))),this.destroyRubricSaveListener=this.$rootScope.$on("rubric-save",((t,e)=>{this.course.rubrics.$refresh(i).$allow(["403"]).$asPromise().then((i=>this.handleRubricResponse(i)))})),this.entitlements.hasCourseEntitlement(n.l.ViewRubrics,this.course.id).then((i=>{this.hasViewAccess=i})),this.setShouldShowBadge()}handleRubricResponse(i){403!==i.$response.status&&(this.rubrics=i)}$onDestroy(){if(this.destroyRubricSaveListener(),this.shouldShowNewBadge){const i=Object(p.a)(y,d.a);this.firstTimeHelper.hide(i)}}getOverflowMenuItems(i){return[{icon:"duplicate",labelKey:"components.directives.rubric.list.tooltip.duplicate",show:()=>i.permissions&&i.permissions.edit&&!this.windowSize.isSmallBreakpoint(),onClick:this.copyRubric.bind(this,i),ariaLabel:()=>this.bbLocalize.translateSync({locale:this.course.getLocale()||this.bbLocalize.getAppLocale(),key:"components.directives.rubric.list.copyRubric",params:{title:i.title},noWrap:!0})}]}getDeleteMenuOption(i){const t=(i.readOnly||i.associated)&&i.canDelete(),e=t?"components.directives.rubric.list.deleteInUseRubric.title":"components.directives.rubric.list.deleteRubric.title",s=t?"components.directives.rubric.list.deleteInUseRubric.instructions":"components.directives.rubric.list.deleteRubric.instructions",r=t?"components.directives.rubric.list.deleteInUseRubric.label":"components.directives.rubric.list.deleteRubric.label";return{show:()=>i.canDelete(),onClick:this.deleteRubric.bind(this,i,t),confirmationOptions:{titleKey:e,instructionsKey:s},ariaLabel:()=>this.bbLocalize.translateSync({locale:this.course.getLocale()||this.bbLocalize.getAppLocale(),key:r,params:{title:i.title},noWrap:!0})}}setShouldShowBadge(){const i=this.element.closest(".bb-offcanvas-panel").attr("data-base-state-name"),t=Object(p.a)(y,d.a);this.firstTimeHelper.shouldShow(t,i,!1).then((i=>{this.shouldShowNewBadge=i}))}pointsCheckboxTrigger(i,t){t?this.rubricIdList.push(i):this.rubricIdList.splice(this.rubricIdList.indexOf(i),1)}associateRubric(i){if(this.rubricAssociationHandler&&this.rubricIdList.includes(i.id)){const t=this.getPointsRubricMaxScore(i),e=Math.min(w.P.GRADE_MAX_POINTS,t);this.rubricAssociationHandler({rubric:i,maxPoints:e})}else this.rubricAssociationHandler&&this.rubricAssociationHandler({rubric:i})}toggleDescription(){this.showCompleteDescription=!this.showCompleteDescription}getPointsRubricMaxScore(i){if(null==i.rows||this._rubricService.isPercentageOrPercentageRangeRubric(i))return 0;const t=i.rubricType===m.Zb.POINTS?m.Zb.POINTS:m.Zb.POINTS_RANGE;i.rows.forEach(((i,e)=>{this.setMaxRowPoints(i,t)}));const e=i.rows.filter((i=>r.isFinite(i.rowPoints))).reduce(((i,t)=>i+t.rowPoints),0);return parseFloat(w.P.parseGradeValue(e))}setMaxRowPoints(i,t){if(r.isFinite(i.rowPoints)||null==i.cells)return;let e=0;i.cells.forEach((i=>{const s=t===m.Zb.POINTS?i.numericPoints:i.endPointRange;void 0!==s&&!Number.isNaN(s)&&s>e&&(e=s)})),i.rowPoints=e}copyRubric(i){this.ultraState.goPeekState("rubric.mode",{rubricId:i.id,mode:o.a.Copy})}deleteRubric(i,t){t?i.withParams({cascade:!0}).$destroy():i.$destroy()}};C=Object(s.a)([Object(R.a)({moduleName:$,componentName:"bbRubricList",template:f,bindings:{course:"<",enableRubricAssociation:"<?",rubricAssociationHandler:"&?",editable:"<?"},requireModules:[u.b,l.a,v.a,h.f]}),Object(s.c)(0,Object(g.b)("$element")),Object(s.c)(1,Object(g.b)("$rootScope")),Object(s.c)(2,Object(g.b)("$scope")),Object(s.c)(3,Object(g.b)(a.m.serviceName)),Object(s.c)(4,Object(g.b)(b.serviceName)),Object(s.c)(5,Object(g.b)(u.d)),Object(s.c)(6,Object(g.b)(l.b)),Object(s.c)(7,Object(g.b)(c.b)),Object(s.c)(8,Object(g.b)(d.c)),Object(s.c)(9,Object(g.b)(h.g))],C)},smDF:function(i,t,e){var s=e("ziER"),r=e("5JeM"),n=new s({id:"icon-medium-add-circle",use:"icon-medium-add-circle-usage",viewBox:"0 0 24 24",content:'<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="icon-medium-add-circle"><circle cx="12" cy="12" r="11" stroke-width="2" /><path d="M12 7v10M7 12h10" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></symbol>'});r.add(n);i.exports=n},"w/V/":function(i,t,e){"use strict";e("HApu"),e("dV61");var s=e("Llzl"),r=e("ZQFV"),n=e("jhBu"),c=e("8W6D"),o=e("X6r5"),a=e("lEL+"),b=e("TnpK"),u=e("MYrX"),l=e("zGdY");e.d(t,"d",(function(){return d})),e.d(t,"a",(function(){return h})),e.d(t,"c",(function(){return p})),e.d(t,"b",(function(){return m}));const d="ultra.components.directives.rubric.rubricSettings",h="associated-rubric-updated",p="bb-rubric-settings-save",m="bb-rubric-settings-gradecolumn-refresh";class g{constructor(i,t,e,s,r,n){this.scope=i,this.element=t,this.attrs=e,this.ultraState=s,this.timeout=r,this.entitlement=n,this.contextArea="rubrics",this.hasRubricPermissions=!0,this.setAssociatedRubric=(i,t)=>{this.rubric=null!=i?i:null,this.saveRubricAssociations(t),this.broadcastRubricChanges(),this.scope.$emit("rubric-settings-rubric-updated",this.originalRubric&&this.rubric&&this.originalRubric.id===this.rubric.id)},i.rubricSettings=this,this.setGradeColumn(i.gradeColumnId()),i.$watch(i.gradeColumnId,(i=>{null===this.gradeColumn&&this.gradeColumn.id===i||this.setGradeColumn(i)})),i.$on(p,((i,t)=>{t&&(this.gradeColumn=t),this.saveRubricAssociations()})),i.$on("associate-rubric",((i,t,e)=>{this.setAssociatedRubric(t,e),this.timeout((()=>{this.element.find(".rubric-title a").focus()}),this.scope)})),i.$on("rubric-save",((i,t)=>{this.rubric&&this.rubric.id===t.id&&(this.rubric=t)})),i.$on("$stateChangeStart",((i,t,e,r,n)=>{r.name.indexOf("rubric.mode")>1&&c.a.Create===c.b(s.params.mode)&&(t.name.indexOf("assignment.peek.rubric-list")>1||t.name.indexOf("assignment-create.peek.rubric-list")>1)&&null!=this.rubric&&(i.preventDefault(),s.leavePeekState(t.name))}))}saveRubricAssociations(i){if(this.gradeColumn){if(this.originalRubric&&this.rubric&&this.originalRubric.id===this.rubric.id)this.scope.$root.$broadcast(m,this.gradeColumn,this.rubric);else{this.rubric?(this.gradeColumn.setRubricAssociation(this.rubric.id),this.rubric.associated=!0,Number.isFinite(i)&&!this.ultraState.includes("**.discussion.**")&&this.gradeColumn.setMaxPossiblePoints(i)):this.gradeColumn.setRubricAssociation(null);const t={expand:"associatedRubrics"};this.originalRubric&&this.originalRubric.readOnly&&(t.cascade=this.originalRubric.readOnly),this.gradeColumn.withParams(t).$patch().$then((i=>{this.gradeColumn.rubricAssociations=i.rubricAssociations,this.scope.$root.$broadcast(m,this.gradeColumn,this.rubric)}))}this.originalRubric=this.rubric}}broadcastRubricChanges(){this.shouldBroadcastRubricChanges()&&this.scope.$root.$broadcast(h,this.gradeColumn,this.rubric)}toggleRubricList(){this.scope.$root.$broadcast("open-rubric-list-panel")}removeActiveRubric(i){i&&i.stopPropagation(),this.rubric=null,this.saveRubricAssociations(),this.scope.$emit("rubric-settings-rubric-updated",this.originalRubric&&this.rubric&&this.originalRubric.id===this.rubric.id),this.broadcastRubricChanges()}setGradeColumn(i){i&&(this.gradeColumn?this.gradeColumn.$then(this.doSetGradeColumn.bind(this)):this.doSetGradeColumn())}doSetGradeColumn(){this.scope.course.gradebook.columns.$find(this.scope.gradeColumnId(),{expand:"associatedRubrics",_:(new Date).getTime()}).$then((i=>{this.gradeColumn=i,this.gradeColumn&&this.gradeColumn.hasRubricAssociation()?this.scope.course.rubrics.$find(this.gradeColumn.getAssociatedRubricId()).$allow(["403"]).$asPromise().then((i=>{403!==i.$response.status?(this.originalRubric=i,this.rubric=i,this.hasRubricPermissions=!0):this.hasRubricPermissions=!1})):(this.originalRubric=null,this.rubric=null),this.entitlement.hasCourseEntitlement(r.q.ModifyGradebook,this.gradeColumn.courseId).then((i=>{i&&this.hasEvaluations()}))}))}hasEvaluations(){this.gradeColumn.hasEvaluations().then((i=>{this.hasRubricEvals=i}))}shouldBroadcastRubricChanges(){return this.scope.broadcastRubricChanges&&this.scope.broadcastRubricChanges()}columnIsAssignmentCategory(){var i,t;return(null===(t=null===(i=this.gradeColumn)||void 0===i?void 0:i.gradebookCategory)||void 0===t?void 0:t.title)===l.W.Assignment}getPeerGradingInfo(){return this.scope.peerGradingEnabled?"peerGrading":null}}g.$inject=["scope","element","attrs",b.d,a.b,n.b];class v{constructor(i,t){this.$compile=i,this.$injector=t,this.restrict="E",this.template=u,this.scope={course:"=",gradeColumnId:"&",contentHasQuestions:"&?",peerGradingEnabled:"<",broadcastRubricChanges:"&?",isDisabled:"&?"},this.link=(i,t,e)=>{i.rubricSettings=this.$injector.instantiate(g,{scope:i,element:t,attrs:e})}}}v.$inject=["$compile","$injector"],s.module(d,[o.a,b.b]).directive("bbRubricSettings",["$injector",i=>i.instantiate(v)])}}]);